{"version":3,"sources":["graphql/queries.js","utils/index.js","contexts/AuthContext.js","hooks/index.js","contexts/NotificationContext.js","components/TopNavBar.js","graphql/mutations.js","components/PlayerCard.js","components/CardContainer.js","components/Notification.js","components/LoginForm.js","components/SignupForm.js","components/Confirmation.js","components/Footer.js","components/ForgotPassword.js","components/SetNewPassword.js","components/Profile.js","App.js","index.js"],"names":["BEST_PLAYERS","gql","_templateObject","FAVORITE_PLAYERS","_templateObject2","USER","_templateObject3","getCookie","name","parts","document","cookie","split","length","pop","shift","AuthContext","createContext","AuthContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","token","setToken","client","useApolloClient","user","useQuery","favPlayerRanking","useEffect","tokenCookie","loginUser","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","value","concat","refetch","stop","_x","apply","this","arguments","react_default","createElement","Provider","logoutUser","resetStore","children","useField","type","setValue","onChange","event","target","NotificationContext","NotificationContextProvider","_useNotification","_useState3","_useState4","notification","setNotification","_useState5","_useState6","timeoutId","setTimeoutId","message","clearTimeout","id","setTimeout","useNotification","_useNotification2","handleException","exception","withRouter","history","activePage","setActivePage","useContext","_useContext2","handleItemClick","e","_ref2","Segment","inverted","Menu","pointing","secondary","Item","as","Link","to","active","onClick","Fragment","position","push","CREATE_USER","mutations_templateObject","VERIFY_USER","mutations_templateObject2","CANCEL_USER","mutations_templateObject3","LOGIN","_templateObject4","FORGOT_PASSWORD","_templateObject5","SET_NEW_PASSWORD","_templateObject6","CHANGE_PASSWORD","_templateObject7","FOLLOW_PLAYER","_templateObject8","UNFOLLOW_PLAYER","_templateObject9","PlayerCard","player","_useContext","followPlayer","useMutation","variables","refetchQueries","query","update","store","response","dataInStore","readQuery","me","favoritePlayers","writeQuery","data","unfollowPlayer","filter","handleFollow","followedPlayer","sent","fullName","t0","handleUnfollow","_ref3","_callee2","_context2","idInArray","array","some","pid","Card","Image","src","wrapped","ui","Content","Header","firstName","lastName","Meta","primaryNumber","Description","stats","goals","assists","points","penaltyMinutes","plusMinus","Icon","CardContainer","loading","Loader","inline","bestPlayers","threeGames","fiveGames","tenGames","createRow","playerResults","Grid","centered","columns","map","Column","key","playerId","components_PlayerCard","Container","Divider","Notification","positive","negative","info","warning","Message","LoginForm","_useField","_useField2","username","resetUsername","_useField3","_useField4","password","resetPassword","login","handleLogin","Form","onSubmit","Field","assign","placeholder","Button","primary","react_router_dom","SignupForm","email","resetEmail","_useField5","_useField6","_useField7","_useField8","confirmPassword","resetConfirmPassword","createUser","passwordsMatch","signup","abrupt","style","color","Confirmation","verifyUser","cancelUser","handleVerify","handleCancel","_ref4","Footer","ForgotPassword","forgotPassword","handleForgotPassword","SetNewPassword","setNewPassword","handleSetNewPassword","Profile","show","setShow","changePassword","handlePasswordChange","Table","definition","Body","Row","Cell","App","size","TopNavBar","components_Notification","marginBottom","react_router","exact","path","render","components_CardContainer","components_Profile","components_SignupForm","components_LoginForm","components_ForgotPassword","match","components_SetNewPassword","params","_ref5","components_Confirmation","components_Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","objectSpread","authorization","cache","InMemoryCache","dataIdFromObject","object","__typename","numOfGamesId","defaultDataIdFromObject","ApolloClient","link","ReactDOM","ApolloContext","contexts_NotificationContext","contexts_AuthContext","src_App","getElementById"],"mappings":"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","file":"static/js/main.ad898ece.chunk.js","sourcesContent":["import { gql } from 'apollo-boost'\r\n\r\nconst BEST_PLAYERS = gql`\r\n  query getBestPlayers {\r\n    bestPlayers {\r\n      threeGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n      fiveGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n      tenGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst FAVORITE_PLAYERS = gql`\r\n  query getFavoritePlayers {\r\n    favoritePlayers {\r\n      threeGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n      fiveGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n      tenGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst USER = gql`\r\n  query loggedUser {\r\n    me {\r\n      username\r\n      email\r\n      favoritePlayers\r\n    }\r\n  }\r\n`\r\n\r\nexport { BEST_PLAYERS, FAVORITE_PLAYERS, USER }\r\n","const getCookie = name => {\r\n  const value = '; ' + document.cookie\r\n  const parts = value.split('; ' + name + '=')\r\n  if (parts.length === 2) {\r\n    return parts\r\n      .pop()\r\n      .split(';')\r\n      .shift()\r\n  }\r\n}\r\n\r\nconst removeCookie = name => {\r\n  document.cookie = `${name}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`\r\n}\r\n\r\nconst setCookie = (name, value) => {\r\n  document.cookie = `${name}=${value}`\r\n}\r\n\r\nexport { getCookie, removeCookie, setCookie }\r\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport { useApolloClient, useQuery } from 'react-apollo-hooks'\r\nimport { setCookie, getCookie, removeCookie } from '../utils'\r\nimport { USER, FAVORITE_PLAYERS } from '../graphql/queries'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider = props => {\r\n  const [token, setToken] = useState(null)\r\n\r\n  const client = useApolloClient()\r\n  const user = useQuery(USER)\r\n  const favPlayerRanking = useQuery(FAVORITE_PLAYERS)\r\n\r\n  // login with cookie\r\n  useEffect(() => {\r\n    const tokenCookie = getCookie('user')\r\n    setToken(tokenCookie)\r\n  }, [])\r\n\r\n  // login user and query favorite players\r\n  const loginUser = async token => {\r\n    setToken(token)\r\n    setCookie('user', token)\r\n    user.refetch()\r\n    favPlayerRanking.refetch()\r\n  }\r\n\r\n  const logoutUser = () => {\r\n    setToken(null)\r\n    removeCookie('user')\r\n    client.resetStore()\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        // setUser,\r\n        setToken,\r\n        favPlayerRanking,\r\n        loginUser,\r\n        logoutUser,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContextProvider\r\n","import { useState } from 'react'\r\n\r\nconst useField = (name, type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return [{ type, name, value, onChange }, reset]\r\n}\r\n\r\nconst useNotification = () => {\r\n  const [notification, setNotification] = useState(null)\r\n  const [timeoutId, setTimeoutId] = useState(null)\r\n\r\n  const notify = (type, message) => {\r\n    clearTimeout(timeoutId)\r\n    setNotification({ type, message })\r\n    const id = setTimeout(() => {\r\n      setNotification(null)\r\n      setTimeoutId(null)\r\n    }, 5000)\r\n    setTimeoutId(id)\r\n  }\r\n\r\n  return [notification, notify]\r\n}\r\n\r\nexport { useField, useNotification }\r\n","import React, { createContext } from 'react'\r\nimport { useNotification } from '../hooks'\r\n\r\nexport const NotificationContext = createContext()\r\n\r\nconst NotificationContextProvider = props => {\r\n  const [notification, setNotification] = useNotification()\r\n\r\n  const handleException = exception => {\r\n    setNotification('negative', `${exception.message}`)\r\n  }\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{ notification, setNotification, handleException }}\r\n    >\r\n      {props.children}\r\n    </NotificationContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NotificationContextProvider\r\n","import React, { useContext } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { Segment, Menu } from 'semantic-ui-react'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst TopNavBarNoRouter = ({ history, activePage, setActivePage }) => {\r\n  const { setNotification } = useContext(NotificationContext)\r\n  const { token, logoutUser } = useContext(AuthContext)\r\n  const handleItemClick = (e, { name }) => setActivePage(name)\r\n\r\n  const handleLogout = () => {\r\n    logoutUser()\r\n    setNotification('positive', 'You have been logged out.')\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Segment inverted>\r\n      <Menu inverted pointing secondary>\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/\"\r\n          name=\"all\"\r\n          active={activePage === 'all'}\r\n          onClick={handleItemClick}\r\n        />\r\n        {token && (\r\n          <Menu.Item\r\n            as={Link}\r\n            to=\"/favorites\"\r\n            name=\"favorites\"\r\n            active={activePage === 'favorites'}\r\n            onClick={handleItemClick}\r\n          />\r\n        )}\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/stats\"\r\n          name=\"stats\"\r\n          active={activePage === 'stats'}\r\n          onClick={handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"standings\"\r\n          name=\"standings\"\r\n          active={activePage === 'standings'}\r\n          onClick={handleItemClick}\r\n        />\r\n        <Menu.Item\r\n          as={Link}\r\n          to=\"/about\"\r\n          name=\"about\"\r\n          active={activePage === 'about'}\r\n          onClick={handleItemClick}\r\n        />\r\n        {!token ? (\r\n          <>\r\n            <Menu.Menu position=\"right\">\r\n              <Menu.Item\r\n                as={Link}\r\n                to=\"/login\"\r\n                name=\"log in\"\r\n                active={activePage === 'log in'}\r\n                onClick={handleItemClick}\r\n              />\r\n            </Menu.Menu>\r\n            <Menu.Menu>\r\n              <Menu.Item\r\n                as={Link}\r\n                to=\"/signup\"\r\n                name=\"sign up\"\r\n                active={activePage === 'sign up'}\r\n                onClick={handleItemClick}\r\n              />\r\n            </Menu.Menu>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Menu.Menu position=\"right\">\r\n              <Menu.Item\r\n                as={Link}\r\n                to=\"/profile\"\r\n                name=\"profile\"\r\n                active={activePage === 'profile'}\r\n                onClick={handleItemClick}\r\n              />\r\n            </Menu.Menu>\r\n            <Menu.Menu>\r\n              <Menu.Item name=\"log out\" onClick={handleLogout} />\r\n            </Menu.Menu>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default withRouter(TopNavBarNoRouter)\r\n","import { gql } from 'apollo-boost'\r\n\r\nconst CREATE_USER = gql`\r\n  mutation createUser($username: String!, $email: String!, $password: String!) {\r\n    createUser(username: $username, email: $email, password: $password) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst VERIFY_USER = gql`\r\n  mutation verifyUser($token: String!) {\r\n    verifyUser(token: $token) {\r\n      username\r\n    }\r\n  }\r\n`\r\n\r\nconst CANCEL_USER = gql`\r\n  mutation cancelUser($token: String!) {\r\n    cancelUser(token: $token) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      value\r\n    }\r\n  }\r\n`\r\n\r\nconst FORGOT_PASSWORD = gql`\r\n  mutation forgotPassword($email: String!) {\r\n    forgotPassword(email: $email) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst SET_NEW_PASSWORD = gql`\r\n  mutation setNewPassword($token: String!, $password: String!) {\r\n    setNewPassword(token: $token, password: $password) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst CHANGE_PASSWORD = gql`\r\n  mutation changePassword($password: String!) {\r\n    changePassword(password: $password) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst FOLLOW_PLAYER = gql`\r\n  mutation followPlayer($id: String!) {\r\n    followPlayer(id: $id) {\r\n      id\r\n      fullName\r\n    }\r\n  }\r\n`\r\n\r\nconst UNFOLLOW_PLAYER = gql`\r\n  mutation unfollowPlayer($id: String!) {\r\n    unfollowPlayer(id: $id)\r\n  }\r\n`\r\n\r\nexport {\r\n  CREATE_USER,\r\n  VERIFY_USER,\r\n  CANCEL_USER,\r\n  LOGIN,\r\n  FORGOT_PASSWORD,\r\n  SET_NEW_PASSWORD,\r\n  CHANGE_PASSWORD,\r\n  FOLLOW_PLAYER,\r\n  UNFOLLOW_PLAYER,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Card, Image, Icon } from 'semantic-ui-react'\r\nimport { FOLLOW_PLAYER, UNFOLLOW_PLAYER } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { USER, FAVORITE_PLAYERS } from '../graphql/queries'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\n\r\nconst PlayerCard = ({ player }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { token, user } = useContext(AuthContext)\r\n\r\n  const followPlayer = useMutation(FOLLOW_PLAYER, {\r\n    variables: { id: player.id },\r\n    refetchQueries: [{ query: FAVORITE_PLAYERS }],\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: USER })\r\n      dataInStore.me.favoritePlayers = dataInStore.me.favoritePlayers.concat(\r\n        player.id\r\n      )\r\n      store.writeQuery({ query: USER, data: dataInStore })\r\n    },\r\n  })\r\n\r\n  const unfollowPlayer = useMutation(UNFOLLOW_PLAYER, {\r\n    variables: { id: player.id },\r\n    refetchQueries: [{ query: FAVORITE_PLAYERS }],\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: USER })\r\n      dataInStore.me.favoritePlayers = dataInStore.me.favoritePlayers.filter(\r\n        id => id !== player.id\r\n      )\r\n      store.writeQuery({ query: USER, data: dataInStore })\r\n    },\r\n  })\r\n\r\n  const handleFollow = async () => {\r\n    try {\r\n      const followedPlayer = await followPlayer()\r\n      if (followedPlayer.data.followPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You started following ${followedPlayer.data.followPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const handleUnfollow = async () => {\r\n    try {\r\n      const id = await unfollowPlayer()\r\n      if (id.data.unfollowPlayer) {\r\n        setNotification('positive', `You unfollowed ${id.data.unfollowPlayer}.`)\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const idInArray = (array, id) => array.some(pid => pid === id)\r\n\r\n  return (\r\n    <Card>\r\n      <Image src=\"img/test.png\" wrapped ui={false} />\r\n      <Card.Content>\r\n        <Card.Header>\r\n          {player.firstName} {player.lastName}\r\n        </Card.Header>\r\n        <Card.Meta>#{player.primaryNumber}</Card.Meta>\r\n        <Card.Description>\r\n          G: {player.stats.goals} | A: {player.stats.assists} | P:{' '}\r\n          {player.stats.points} | PM: {player.stats.penaltyMinutes} | +/-:{' '}\r\n          {player.stats.plusMinus}\r\n        </Card.Description>\r\n        <div>\r\n          {token && user.data.me && (\r\n            <>\r\n              {!idInArray(user.data.me.favoritePlayers, player.id) && (\r\n                <Icon name=\"thumbs up\" onClick={handleFollow} />\r\n              )}\r\n              {idInArray(user.data.me.favoritePlayers, player.id) && (\r\n                <Icon name=\"thumbs down outline\" onClick={handleUnfollow} />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PlayerCard\r\n","import React, { useContext } from 'react'\r\nimport { Container, Header, Divider, Loader } from 'semantic-ui-react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport PlayerCard from './PlayerCard'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst CardContainer = ({ query }) => {\r\n  const { setNotification } = useContext(NotificationContext)\r\n\r\n  if (query.loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const { threeGames, fiveGames, tenGames } =\r\n    query.data.bestPlayers || query.data.favoritePlayers\r\n\r\n  const createRow = playerResults => {\r\n    if (!playerResults.length) return <div>No results</div>\r\n\r\n    return (\r\n      <Grid centered={true} columns={5}>\r\n        {playerResults.map(player => (\r\n          <Grid.Column key={player.playerId}>\r\n            <PlayerCard\r\n              key={player.playerId}\r\n              player={player}\r\n              setNotification={setNotification}\r\n            />\r\n          </Grid.Column>\r\n        ))}\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header>Last 3 games</Header>\r\n      {createRow(threeGames)}\r\n      <Divider />\r\n      <Header>Last 5 games</Header>\r\n      {createRow(fiveGames)}\r\n      <Divider />\r\n      <Header>Last 10 games</Header>\r\n      {createRow(tenGames)}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CardContainer\r\n\r\n// Instead of 3 queries make one query for 10 games and process it in the frontend?\r\n","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (!notification) return null\r\n\r\n  const typeSelector = {\r\n    positive: { positive: true },\r\n    negative: { negative: true },\r\n    info: { info: true },\r\n    warning: { warning: true },\r\n  }\r\n\r\n  const type = typeSelector[notification.type]\r\n\r\n  return (\r\n    <Message {...type}>\r\n      <Message.Content>{`${notification.message}`}</Message.Content>\r\n    </Message>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { LOGIN } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\n\r\nconst LoginForm = ({ history, setActivePage }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { loginUser } = useContext(AuthContext)\r\n  const [username, resetUsername] = useField('username', 'text')\r\n  const [password, resetPassword] = useField('password', 'password')\r\n\r\n  const login = useMutation(LOGIN)\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const token = await login({\r\n        variables: {\r\n          username: username.value,\r\n          password: password.value,\r\n        },\r\n      })\r\n      setNotification('positive', `${username.value} successfully logged in.`)\r\n      resetUsername()\r\n      resetPassword()\r\n      loginUser(token.data.login.value)\r\n      setActivePage('all')\r\n      history.push('/')\r\n    } catch (exception) {\r\n      handleException(exception)\r\n      resetPassword()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input placeholder=\"username or email\" {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Log in\r\n        </Button>\r\n      </Form>\r\n      <Link to=\"/forgot-password\" name=\"I forgot my password\">\r\n        I forgot my password\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { CREATE_USER } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst SignupForm = ({ history, setActivePage }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [username, resetUsername] = useField('username', 'text')\r\n  const [email, resetEmail] = useField('password', 'text')\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n\r\n  const createUser = useMutation(CREATE_USER)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const signup = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await createUser({\r\n        variables: {\r\n          username: username.value,\r\n          email: email.value,\r\n          password: password.value,\r\n        },\r\n      })\r\n    } catch (exception) {\r\n      handleException(exception)\r\n      return\r\n    }\r\n\r\n    setNotification(\r\n      'positive',\r\n      `An account for ${\r\n        username.value\r\n      } has been created. Before logging in, you must activate your account by clicking the activation link sent to ${\r\n        email.value\r\n      }.`\r\n    )\r\n    resetUsername()\r\n    resetEmail()\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n    setActivePage('all')\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={signup}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input placeholder=\"username\" {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input placeholder=\"email\" {...email} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm password</label>\r\n          <input placeholder=\"password\" {...confirmPassword} />\r\n          {!passwordsMatch && (\r\n            <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n          )}\r\n\r\n          <span />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupForm\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { VERIFY_USER, CANCEL_USER } from '../graphql/mutations'\r\nimport { Button, Segment, Header } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst Confirmation = ({ history, token }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const verifyUser = useMutation(VERIFY_USER, { variables: { token } })\r\n  const cancelUser = useMutation(CANCEL_USER, { variables: { token } })\r\n\r\n  const handleVerify = async () => {\r\n    try {\r\n      await verifyUser()\r\n      setNotification(\r\n        'positive',\r\n        'Your account has been activated. You may now log in.'\r\n      )\r\n    } catch ({ message }) {\r\n      setNotification('negative', `${message}`)\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  const handleCancel = async () => {\r\n    try {\r\n      await cancelUser()\r\n      setNotification(\r\n        'warning',\r\n        'Your account has been cancelled and all the information has been deleted from the database.'\r\n      )\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Segment>\r\n      <Header>Activate your user account</Header>\r\n      <Button primary={true} onClick={handleVerify}>\r\n        OK\r\n      </Button>\r\n      <Button onClick={handleCancel}>Cancel</Button>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default Confirmation\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return <p>Footer</p>\r\n}\r\n\r\nexport default Footer\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { FORGOT_PASSWORD } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst ForgotPassword = ({ history, setActivePage }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [email, resetEmail] = useField('email', 'text')\r\n  const forgotPassword = useMutation(FORGOT_PASSWORD)\r\n\r\n  const handleForgotPassword = async () => {\r\n    try {\r\n      await forgotPassword({\r\n        variables: {\r\n          email: email.value,\r\n        },\r\n      })\r\n      setNotification(\r\n        'positive',\r\n        `The password reset link has been set to ${\r\n          email.value\r\n        }. Please click the link to change your password.`\r\n      )\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetEmail()\r\n    setActivePage('all')\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleForgotPassword}>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input placeholder=\"email\" {...email} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { useField } from '../hooks'\r\nimport { SET_NEW_PASSWORD } from '../graphql/mutations'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst SetNewPassword = ({ history, token, setActivePage }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n  const setNewPassword = useMutation(SET_NEW_PASSWORD)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const handleSetNewPassword = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await setNewPassword({ variables: { token, password: password.value } })\r\n      setNotification(\r\n        'positive',\r\n        'Your password has been changed. You may now log in with the new password.'\r\n      )\r\n      setActivePage('all')\r\n      history.push('/')\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSetNewPassword}>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm password</label>\r\n          <input placeholder=\"password\" {...confirmPassword} />\r\n          {!passwordsMatch && (\r\n            <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n          )}\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SetNewPassword\r\n","import React, { useState, useContext } from 'react'\r\nimport { useField } from '../hooks'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Table, Button, Form } from 'semantic-ui-react'\r\nimport { CHANGE_PASSWORD } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\n\r\nconst Profile = () => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { user } = useContext(AuthContext)\r\n  const [show, setShow] = useState(false)\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n\r\n  const changePassword = useMutation(CHANGE_PASSWORD)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const closeForm = () => {\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n    setShow(false)\r\n  }\r\n\r\n  const handlePasswordChange = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await changePassword({ variables: { password: password.value } })\r\n      setNotification('positive', 'Your password has been changed.')\r\n      setShow(false)\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table definition>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>Username</Table.Cell>\r\n            <Table.Cell>{user.username}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Email</Table.Cell>\r\n            <Table.Cell>{user.email}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Password</Table.Cell>\r\n            <Table.Cell>\r\n              <Button onClick={() => setShow(true)}>Change password</Button>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n      {show && (\r\n        <Form onSubmit={handlePasswordChange}>\r\n          <Form.Field>\r\n            <label>New password</label>\r\n            <input {...password} />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Confirm new password</label>\r\n            <input {...confirmPassword} />\r\n            {!passwordsMatch && (\r\n              <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n            )}\r\n          </Form.Field>\r\n          <Button primary type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button onClick={closeForm}>Cancel</Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState, useContext } from 'react'\r\nimport { useQuery } from 'react-apollo-hooks'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Container, Header } from 'semantic-ui-react'\r\nimport { BEST_PLAYERS } from './graphql/queries'\r\nimport TopNavBar from './components/TopNavBar'\r\nimport CardContainer from './components/CardContainer'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport SignupForm from './components/SignupForm'\r\nimport Confirmation from './components/Confirmation'\r\nimport Footer from './components/Footer'\r\nimport ForgotPassword from './components/ForgotPassword'\r\nimport SetNewPassword from './components/SetNewPassword'\r\nimport Profile from './components/Profile'\r\nimport { NotificationContext } from './contexts/NotificationContext'\r\nimport { AuthContext } from './contexts/AuthContext'\r\n\r\nconst App = () => {\r\n  const { notification } = useContext(NotificationContext)\r\n  const { token, user, favPlayerRanking } = useContext(AuthContext)\r\n  const [activePage, setActivePage] = useState('all')\r\n\r\n  const bestPlayers = useQuery(BEST_PLAYERS)\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Header size=\"huge\">Player Follower</Header>\r\n        <TopNavBar activePage={activePage} setActivePage={setActivePage} />\r\n        <Notification notification={notification} />\r\n        {user.data.me && (\r\n          <div style={{ marginBottom: '5px' }}>\r\n            logged in as <strong>{user.data.me.username}</strong>\r\n          </div>\r\n        )}\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => <CardContainer query={bestPlayers} />}\r\n        />\r\n        <Route path=\"/stats\" render={() => <div>Stats</div>} />\r\n        <Route path=\"/standings\" render={() => <div>Standings</div>} />\r\n        <Route path=\"/about\" render={() => <div>About</div>} />\r\n        {token && (\r\n          <>\r\n            <Route\r\n              path=\"/favorites\"\r\n              render={() => <CardContainer query={favPlayerRanking} />}\r\n            />\r\n            <Route path=\"/profile\" render={() => <Profile />} />\r\n          </>\r\n        )}\r\n        {!token && (\r\n          <>\r\n            <Route\r\n              path=\"/signup\"\r\n              render={({ history }) => (\r\n                <SignupForm history={history} setActivePage={setActivePage} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/login\"\r\n              render={({ history }) => (\r\n                <LoginForm history={history} setActivePage={setActivePage} />\r\n              )}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/forgot-password\"\r\n              render={({ history }) => (\r\n                <ForgotPassword\r\n                  history={history}\r\n                  setActivePage={setActivePage}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/forgot-password/:token\"\r\n              render={({ history, match }) => (\r\n                <SetNewPassword\r\n                  history={history}\r\n                  token={match.params.token}\r\n                  setActivePage={setActivePage}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/confirmation/:token\"\r\n              render={({ history, match }) => (\r\n                <Confirmation history={history} token={match.params.token} />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        <Footer />\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ApolloProvider } from 'react-apollo-hooks'\r\nimport ApolloClient from 'apollo-client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache, defaultDataIdFromObject } from 'apollo-cache-inmemory'\r\nimport { setContext } from 'apollo-link-context'\r\nimport App from './App'\r\nimport { getCookie } from './utils'\r\nimport NotificationContextProvider from './contexts/NotificationContext'\r\nimport AuthContextProvider from './contexts/AuthContext'\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = getCookie('user')\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `bearer ${token}` : null,\r\n    },\r\n  }\r\n})\r\n\r\nconst cache = new InMemoryCache({\r\n  dataIdFromObject: object => {\r\n    switch (object.__typename) {\r\n      case 'Player':\r\n        return object.numOfGamesId + object.id\r\n      default:\r\n        return defaultDataIdFromObject(object)\r\n    }\r\n  },\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache,\r\n})\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <NotificationContextProvider>\r\n      <AuthContextProvider>\r\n        <App />\r\n      </AuthContextProvider>\r\n    </NotificationContextProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}