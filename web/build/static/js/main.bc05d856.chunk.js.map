{"version":3,"sources":["graphql/queries.js","utils/index.js","contexts/AuthContext.js","hooks/index.js","contexts/NotificationContext.js","components/TopNavBar.js","graphql/mutations.js","components/PlayerCard.js","components/CardContainer.js","components/Notification.js","components/LoginForm.js","components/SignupForm.js","components/Confirmation.js","components/Footer.js","components/ForgotPassword.js","components/SetNewPassword.js","components/Profile.js","components/FindPlayers.js","App.js","index.js"],"names":["BEST_PLAYERS","gql","_templateObject","FAVORITE_PLAYERS","_templateObject2","USER","_templateObject3","getCookie","name","parts","document","cookie","split","length","pop","shift","AuthContext","createContext","AuthContextProvider","props","_useState","useState","_useState2","Object","slicedToArray","token","setToken","client","useApolloClient","user","useQuery","favPlayerRanking","useEffect","tokenCookie","loginUser","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","value","concat","refetch","stop","_x","apply","this","arguments","react_default","createElement","Provider","logoutUser","resetStore","children","useField","type","setValue","onChange","event","target","NotificationContext","NotificationContextProvider","_useNotification","_useState3","_useState4","notification","setNotification","_useState5","_useState6","timeoutId","setTimeoutId","message","clearTimeout","id","setTimeout","useNotification","_useNotification2","handleException","exception","withRouter","history","useContext","_useContext2","Segment","inverted","Menu","pointing","secondary","Item","as","NavLink","exact","to","Fragment","position","data","me","Label","circular","style","margin","size","content","username","onClick","push","CREATE_USER","mutations_templateObject","VERIFY_USER","mutations_templateObject2","CANCEL_USER","mutations_templateObject3","LOGIN","_templateObject4","FORGOT_PASSWORD","_templateObject5","SET_NEW_PASSWORD","_templateObject6","CHANGE_PASSWORD","_templateObject7","FOLLOW_PLAYER","_templateObject8","UNFOLLOW_PLAYER","_templateObject9","PlayerCard","player","_useContext","followPlayer","useMutation","variables","refetchQueries","query","update","store","response","dataInStore","readQuery","favoritePlayers","writeQuery","unfollowPlayer","filter","handleFollow","_ref2","followedPlayer","sent","fullName","t0","handleUnfollow","_ref3","_callee2","_context2","idInArray","array","some","pid","Card","Image","src","wrapped","ui","Content","Header","firstName","lastName","Meta","primaryNumber","Description","stats","goals","assists","points","penaltyMinutes","plusMinus","Icon","CardContainer","loading","Loader","active","inline","bestPlayers","threeGames","fiveGames","tenGames","createRow","playerResults","Grid","centered","columns","map","Column","key","playerId","components_PlayerCard","Container","Divider","Notification","positive","negative","info","warning","Message","LoginForm","_useField","_useField2","resetUsername","_useField3","_useField4","password","resetPassword","login","handleLogin","Form","onSubmit","Field","assign","placeholder","Button","primary","react_router_dom","SignupForm","email","resetEmail","_useField5","_useField6","_useField7","_useField8","confirmPassword","resetConfirmPassword","createUser","passwordsMatch","signup","abrupt","color","Confirmation","verifyUser","cancelUser","handleVerify","handleCancel","_ref4","Footer","ForgotPassword","forgotPassword","handleForgotPassword","SetNewPassword","setNewPassword","handleSetNewPassword","Profile","show","setShow","changePassword","handlePasswordChange","Table","definition","Body","Row","Cell","FindPlayers","App","TopNavBar","components_Notification","react_router","path","render","components_CardContainer","Link","components_Profile","components_FindPlayers","components_SignupForm","components_LoginForm","components_ForgotPassword","match","components_SetNewPassword","params","_ref5","components_Confirmation","components_Footer","httpLink","createHttpLink","uri","authLink","setContext","_","headers","objectSpread","authorization","cache","InMemoryCache","dataIdFromObject","object","__typename","numOfGamesId","defaultDataIdFromObject","ApolloClient","link","ReactDOM","ApolloContext","contexts_NotificationContext","contexts_AuthContext","src_App","getElementById"],"mappings":"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","file":"static/js/main.bc05d856.chunk.js","sourcesContent":["import { gql } from 'apollo-boost'\r\n\r\nconst BEST_PLAYERS = gql`\r\n  query getBestPlayers {\r\n    bestPlayers {\r\n      threeGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n      fiveGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n      tenGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst FAVORITE_PLAYERS = gql`\r\n  query getFavoritePlayers {\r\n    favoritePlayers {\r\n      threeGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n      fiveGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n      tenGames {\r\n        firstName\r\n        lastName\r\n        primaryNumber\r\n        playerId\r\n        id\r\n        numOfGamesId\r\n        stats {\r\n          gamePks\r\n          goals\r\n          assists\r\n          points\r\n          plusMinus\r\n          penaltyMinutes\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst USER = gql`\r\n  query loggedUser {\r\n    me {\r\n      username\r\n      email\r\n      favoritePlayers\r\n    }\r\n  }\r\n`\r\n\r\nexport { BEST_PLAYERS, FAVORITE_PLAYERS, USER }\r\n","const getCookie = name => {\r\n  const value = '; ' + document.cookie\r\n  const parts = value.split('; ' + name + '=')\r\n  if (parts.length === 2) {\r\n    return parts\r\n      .pop()\r\n      .split(';')\r\n      .shift()\r\n  }\r\n}\r\n\r\nconst removeCookie = name => {\r\n  document.cookie = `${name}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`\r\n}\r\n\r\nconst setCookie = (name, value) => {\r\n  document.cookie = `${name}=${value}`\r\n}\r\n\r\nexport { getCookie, removeCookie, setCookie }\r\n","import React, { createContext, useState, useEffect } from 'react'\r\nimport { useApolloClient, useQuery } from 'react-apollo-hooks'\r\nimport { setCookie, getCookie, removeCookie } from '../utils'\r\nimport { USER, FAVORITE_PLAYERS } from '../graphql/queries'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider = props => {\r\n  const [token, setToken] = useState(null)\r\n\r\n  const client = useApolloClient()\r\n  const user = useQuery(USER)\r\n  const favPlayerRanking = useQuery(FAVORITE_PLAYERS)\r\n\r\n  // login with cookie\r\n  useEffect(() => {\r\n    const tokenCookie = getCookie('user')\r\n    setToken(tokenCookie)\r\n  }, [])\r\n\r\n  // login user and query favorite players\r\n  const loginUser = async token => {\r\n    setToken(token)\r\n    setCookie('user', token)\r\n    user.refetch()\r\n    favPlayerRanking.refetch()\r\n  }\r\n\r\n  const logoutUser = () => {\r\n    setToken(null)\r\n    removeCookie('user')\r\n    client.resetStore()\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        setToken,\r\n        favPlayerRanking,\r\n        loginUser,\r\n        logoutUser,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContextProvider\r\n","import { useState } from 'react'\r\n\r\nconst useField = (name, type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return [{ type, name, value, onChange }, reset]\r\n}\r\n\r\nconst useNotification = () => {\r\n  const [notification, setNotification] = useState(null)\r\n  const [timeoutId, setTimeoutId] = useState(null)\r\n\r\n  const notify = (type, message) => {\r\n    clearTimeout(timeoutId)\r\n    setNotification({ type, message })\r\n    const id = setTimeout(() => {\r\n      setNotification(null)\r\n      setTimeoutId(null)\r\n    }, 5000)\r\n    setTimeoutId(id)\r\n  }\r\n\r\n  return [notification, notify]\r\n}\r\n\r\nexport { useField, useNotification }\r\n","import React, { createContext } from 'react'\r\nimport { useNotification } from '../hooks'\r\n\r\nexport const NotificationContext = createContext()\r\n\r\nconst NotificationContextProvider = props => {\r\n  const [notification, setNotification] = useNotification()\r\n\r\n  const handleException = exception => {\r\n    setNotification('negative', `${exception.message}`)\r\n  }\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{ notification, setNotification, handleException }}\r\n    >\r\n      {props.children}\r\n    </NotificationContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NotificationContextProvider\r\n","import React, { useContext } from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport { Segment, Menu, Label } from 'semantic-ui-react'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst TopNavBarNoRouter = ({ history }) => {\r\n  const { setNotification } = useContext(NotificationContext)\r\n  const { user, token, logoutUser } = useContext(AuthContext)\r\n\r\n  const handleLogout = () => {\r\n    logoutUser()\r\n    setNotification('positive', 'You have been logged out.')\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Segment inverted>\r\n      <Menu inverted pointing secondary>\r\n        <Menu.Item as={NavLink} exact to=\"/\" name=\"all\" />\r\n        {token && <Menu.Item as={NavLink} to=\"/favorites\" name=\"favorites\" />}\r\n        <Menu.Item as={NavLink} to=\"/stats\" name=\"stats\" />\r\n        <Menu.Item as={NavLink} to=\"/standings\" name=\"standings\" />\r\n        <Menu.Item as={NavLink} to=\"/about\" name=\"about\" />\r\n        {!token ? (\r\n          <>\r\n            <Menu.Menu position=\"right\">\r\n              <Menu.Item as={NavLink} to=\"/login\" name=\"log in\" />\r\n            </Menu.Menu>\r\n            <Menu.Menu>\r\n              <Menu.Item as={NavLink} to=\"/signup\" name=\"sign up\" />\r\n            </Menu.Menu>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Menu.Menu position=\"right\">\r\n              {/* <Menu.Item\r\n                as={NavLink}\r\n                to=\"/profile\"\r\n                name=\"profile\"\r\n                \r\n                \r\n              /> */}\r\n              {user.data.me && (\r\n                <Label\r\n                  as={NavLink}\r\n                  to=\"/profile\"\r\n                  circular\r\n                  style={{ margin: 'auto auto' }}\r\n                  size=\"medium\"\r\n                  content={user.data.me.username}\r\n                />\r\n              )}\r\n            </Menu.Menu>\r\n            <Menu.Menu>\r\n              <Menu.Item name=\"log out\" onClick={handleLogout} />\r\n            </Menu.Menu>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default withRouter(TopNavBarNoRouter)\r\n","import { gql } from 'apollo-boost'\r\n\r\nconst CREATE_USER = gql`\r\n  mutation createUser($username: String!, $email: String!, $password: String!) {\r\n    createUser(username: $username, email: $email, password: $password) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst VERIFY_USER = gql`\r\n  mutation verifyUser($token: String!) {\r\n    verifyUser(token: $token) {\r\n      username\r\n    }\r\n  }\r\n`\r\n\r\nconst CANCEL_USER = gql`\r\n  mutation cancelUser($token: String!) {\r\n    cancelUser(token: $token) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      value\r\n    }\r\n  }\r\n`\r\n\r\nconst FORGOT_PASSWORD = gql`\r\n  mutation forgotPassword($email: String!) {\r\n    forgotPassword(email: $email) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst SET_NEW_PASSWORD = gql`\r\n  mutation setNewPassword($token: String!, $password: String!) {\r\n    setNewPassword(token: $token, password: $password) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst CHANGE_PASSWORD = gql`\r\n  mutation changePassword($password: String!) {\r\n    changePassword(password: $password) {\r\n      username\r\n      id\r\n    }\r\n  }\r\n`\r\n\r\nconst FOLLOW_PLAYER = gql`\r\n  mutation followPlayer($id: String!) {\r\n    followPlayer(id: $id) {\r\n      id\r\n      fullName\r\n    }\r\n  }\r\n`\r\n\r\nconst UNFOLLOW_PLAYER = gql`\r\n  mutation unfollowPlayer($id: String!) {\r\n    unfollowPlayer(id: $id)\r\n  }\r\n`\r\n\r\nexport {\r\n  CREATE_USER,\r\n  VERIFY_USER,\r\n  CANCEL_USER,\r\n  LOGIN,\r\n  FORGOT_PASSWORD,\r\n  SET_NEW_PASSWORD,\r\n  CHANGE_PASSWORD,\r\n  FOLLOW_PLAYER,\r\n  UNFOLLOW_PLAYER,\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Card, Image, Icon } from 'semantic-ui-react'\r\nimport { FOLLOW_PLAYER, UNFOLLOW_PLAYER } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { USER, FAVORITE_PLAYERS } from '../graphql/queries'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\n\r\nconst PlayerCard = ({ player }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { token, user } = useContext(AuthContext)\r\n\r\n  const followPlayer = useMutation(FOLLOW_PLAYER, {\r\n    variables: { id: player.id },\r\n    refetchQueries: [{ query: FAVORITE_PLAYERS }],\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: USER })\r\n      dataInStore.me.favoritePlayers = dataInStore.me.favoritePlayers.concat(\r\n        player.id\r\n      )\r\n      store.writeQuery({ query: USER, data: dataInStore })\r\n    },\r\n  })\r\n\r\n  const unfollowPlayer = useMutation(UNFOLLOW_PLAYER, {\r\n    variables: { id: player.id },\r\n    refetchQueries: [{ query: FAVORITE_PLAYERS }],\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: USER })\r\n      dataInStore.me.favoritePlayers = dataInStore.me.favoritePlayers.filter(\r\n        id => id !== player.id\r\n      )\r\n      store.writeQuery({ query: USER, data: dataInStore })\r\n    },\r\n  })\r\n\r\n  const handleFollow = async () => {\r\n    try {\r\n      const followedPlayer = await followPlayer()\r\n      if (followedPlayer.data.followPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You started following ${followedPlayer.data.followPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const handleUnfollow = async () => {\r\n    try {\r\n      const id = await unfollowPlayer()\r\n      if (id.data.unfollowPlayer) {\r\n        setNotification('positive', `You unfollowed ${id.data.unfollowPlayer}.`)\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const idInArray = (array, id) => array.some(pid => pid === id)\r\n\r\n  return (\r\n    <Card>\r\n      <Image src=\"img/test.png\" wrapped ui={false} />\r\n      <Card.Content>\r\n        <Card.Header>\r\n          {player.firstName} {player.lastName}\r\n        </Card.Header>\r\n        <Card.Meta>#{player.primaryNumber}</Card.Meta>\r\n        <Card.Description>\r\n          G: {player.stats.goals} | A: {player.stats.assists} | P:{' '}\r\n          {player.stats.points} | PM: {player.stats.penaltyMinutes} | +/-:{' '}\r\n          {player.stats.plusMinus}\r\n        </Card.Description>\r\n        <div>\r\n          {token && user.data.me && (\r\n            <>\r\n              {!idInArray(user.data.me.favoritePlayers, player.id) && (\r\n                <Icon name=\"thumbs up\" onClick={handleFollow} />\r\n              )}\r\n              {idInArray(user.data.me.favoritePlayers, player.id) && (\r\n                <Icon name=\"thumbs down outline\" onClick={handleUnfollow} />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PlayerCard\r\n","import React, { useContext } from 'react'\r\nimport { Container, Header, Divider, Loader } from 'semantic-ui-react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport PlayerCard from './PlayerCard'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst CardContainer = ({ query }) => {\r\n  const { setNotification } = useContext(NotificationContext)\r\n\r\n  if (query.loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const { threeGames, fiveGames, tenGames } =\r\n    query.data.bestPlayers || query.data.favoritePlayers\r\n\r\n  const createRow = playerResults => {\r\n    if (!playerResults.length) return <div>No results</div>\r\n\r\n    return (\r\n      <Grid centered={true} columns={5}>\r\n        {playerResults.map(player => (\r\n          <Grid.Column key={player.playerId}>\r\n            <PlayerCard\r\n              key={player.playerId}\r\n              player={player}\r\n              setNotification={setNotification}\r\n            />\r\n          </Grid.Column>\r\n        ))}\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header>Last 3 games</Header>\r\n      {createRow(threeGames)}\r\n      <Divider />\r\n      <Header>Last 5 games</Header>\r\n      {createRow(fiveGames)}\r\n      <Divider />\r\n      <Header>Last 10 games</Header>\r\n      {createRow(tenGames)}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CardContainer\r\n\r\n// Instead of 3 queries make one query for 10 games and process it in the frontend?\r\n","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (!notification) return null\r\n\r\n  const typeSelector = {\r\n    positive: { positive: true },\r\n    negative: { negative: true },\r\n    info: { info: true },\r\n    warning: { warning: true },\r\n  }\r\n\r\n  const type = typeSelector[notification.type]\r\n\r\n  return (\r\n    <Message {...type}>\r\n      <Message.Content>{`${notification.message}`}</Message.Content>\r\n    </Message>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { LOGIN } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { loginUser } = useContext(AuthContext)\r\n  const [username, resetUsername] = useField('username', 'text')\r\n  const [password, resetPassword] = useField('password', 'password')\r\n\r\n  const login = useMutation(LOGIN)\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const token = await login({\r\n        variables: {\r\n          username: username.value,\r\n          password: password.value,\r\n        },\r\n      })\r\n      setNotification('positive', `${username.value} successfully logged in.`)\r\n      resetUsername()\r\n      resetPassword()\r\n      loginUser(token.data.login.value)\r\n      history.push('/')\r\n    } catch (exception) {\r\n      handleException(exception)\r\n      resetPassword()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input placeholder=\"username or email\" {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Log in\r\n        </Button>\r\n      </Form>\r\n      <Link to=\"/forgot-password\" name=\"I forgot my password\">\r\n        I forgot my password\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { CREATE_USER } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst SignupForm = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [username, resetUsername] = useField('username', 'text')\r\n  const [email, resetEmail] = useField('password', 'text')\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n\r\n  const createUser = useMutation(CREATE_USER)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const signup = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await createUser({\r\n        variables: {\r\n          username: username.value,\r\n          email: email.value,\r\n          password: password.value,\r\n        },\r\n      })\r\n    } catch (exception) {\r\n      handleException(exception)\r\n      return\r\n    }\r\n\r\n    setNotification(\r\n      'positive',\r\n      `An account for ${\r\n        username.value\r\n      } has been created. Before logging in, you must activate your account by clicking the activation link sent to ${\r\n        email.value\r\n      }.`\r\n    )\r\n    resetUsername()\r\n    resetEmail()\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={signup}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input placeholder=\"username\" {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input placeholder=\"email\" {...email} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm password</label>\r\n          <input placeholder=\"password\" {...confirmPassword} />\r\n          {!passwordsMatch && (\r\n            <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n          )}\r\n\r\n          <span />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupForm\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { VERIFY_USER, CANCEL_USER } from '../graphql/mutations'\r\nimport { Button, Segment, Header } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst Confirmation = ({ history, token }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const verifyUser = useMutation(VERIFY_USER, { variables: { token } })\r\n  const cancelUser = useMutation(CANCEL_USER, { variables: { token } })\r\n\r\n  const handleVerify = async () => {\r\n    try {\r\n      await verifyUser()\r\n      setNotification(\r\n        'positive',\r\n        'Your account has been activated. You may now log in.'\r\n      )\r\n    } catch ({ message }) {\r\n      setNotification('negative', `${message}`)\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  const handleCancel = async () => {\r\n    try {\r\n      await cancelUser()\r\n      setNotification(\r\n        'warning',\r\n        'Your account has been cancelled and all the information has been deleted from the database.'\r\n      )\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Segment>\r\n      <Header>Activate your user account</Header>\r\n      <Button primary={true} onClick={handleVerify}>\r\n        OK\r\n      </Button>\r\n      <Button onClick={handleCancel}>Cancel</Button>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default Confirmation\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return <p>Footer</p>\r\n}\r\n\r\nexport default Footer\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { FORGOT_PASSWORD } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [email, resetEmail] = useField('email', 'text')\r\n  const forgotPassword = useMutation(FORGOT_PASSWORD)\r\n\r\n  const handleForgotPassword = async () => {\r\n    try {\r\n      await forgotPassword({\r\n        variables: {\r\n          email: email.value,\r\n        },\r\n      })\r\n      setNotification(\r\n        'positive',\r\n        `The password reset link has been set to ${\r\n          email.value\r\n        }. Please click the link to change your password.`\r\n      )\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetEmail()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleForgotPassword}>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input placeholder=\"email\" {...email} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { useField } from '../hooks'\r\nimport { SET_NEW_PASSWORD } from '../graphql/mutations'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst SetNewPassword = ({ history, token }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n  const setNewPassword = useMutation(SET_NEW_PASSWORD)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const handleSetNewPassword = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await setNewPassword({ variables: { token, password: password.value } })\r\n      setNotification(\r\n        'positive',\r\n        'Your password has been changed. You may now log in with the new password.'\r\n      )\r\n      history.push('/')\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSetNewPassword}>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm password</label>\r\n          <input placeholder=\"password\" {...confirmPassword} />\r\n          {!passwordsMatch && (\r\n            <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n          )}\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SetNewPassword\r\n","import React, { useState, useContext } from 'react'\r\nimport { useField } from '../hooks'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Table, Button, Form } from 'semantic-ui-react'\r\nimport { CHANGE_PASSWORD } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\n\r\nconst Profile = () => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { user } = useContext(AuthContext)\r\n  const [show, setShow] = useState(false)\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n\r\n  const changePassword = useMutation(CHANGE_PASSWORD)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const closeForm = () => {\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n    setShow(false)\r\n  }\r\n\r\n  const handlePasswordChange = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await changePassword({ variables: { password: password.value } })\r\n      setNotification('positive', 'Your password has been changed.')\r\n      setShow(false)\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table definition>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>Username</Table.Cell>\r\n            <Table.Cell>{user.username}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Email</Table.Cell>\r\n            <Table.Cell>{user.email}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Password</Table.Cell>\r\n            <Table.Cell>\r\n              <Button onClick={() => setShow(true)}>Change password</Button>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n      {show && (\r\n        <Form onSubmit={handlePasswordChange}>\r\n          <Form.Field>\r\n            <label>New password</label>\r\n            <input {...password} />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Confirm new password</label>\r\n            <input {...confirmPassword} />\r\n            {!passwordsMatch && (\r\n              <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n            )}\r\n          </Form.Field>\r\n          <Button primary type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button onClick={closeForm}>Cancel</Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\n\r\nconst FindPlayers = () => {\r\n  return <div>Find players</div>\r\n}\r\n\r\nexport default FindPlayers\r\n","import React, { useState, useContext } from 'react'\r\nimport { useQuery } from 'react-apollo-hooks'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport { Container, Header, Segment } from 'semantic-ui-react'\r\nimport { BEST_PLAYERS } from './graphql/queries'\r\nimport TopNavBar from './components/TopNavBar'\r\nimport CardContainer from './components/CardContainer'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport SignupForm from './components/SignupForm'\r\nimport Confirmation from './components/Confirmation'\r\nimport Footer from './components/Footer'\r\nimport ForgotPassword from './components/ForgotPassword'\r\nimport SetNewPassword from './components/SetNewPassword'\r\nimport Profile from './components/Profile'\r\nimport FindPlayers from './components/FindPlayers'\r\nimport { NotificationContext } from './contexts/NotificationContext'\r\nimport { AuthContext } from './contexts/AuthContext'\r\n\r\nconst App = () => {\r\n  const { notification } = useContext(NotificationContext)\r\n  const { token, favPlayerRanking } = useContext(AuthContext)\r\n\r\n  const bestPlayers = useQuery(BEST_PLAYERS)\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Header size=\"huge\">Player Follower</Header>\r\n        <TopNavBar />\r\n        <Notification notification={notification} />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => <CardContainer query={bestPlayers} />}\r\n        />\r\n        <Route path=\"/stats\" render={() => <div>Stats</div>} />\r\n        <Route path=\"/standings\" render={() => <div>Standings</div>} />\r\n        <Route path=\"/about\" render={() => <div>About</div>} />\r\n        {token && (\r\n          <>\r\n            <Route\r\n              path=\"/favorites\"\r\n              render={() => (\r\n                <>\r\n                  <Container as={Link} to=\"/find-players\">\r\n                    Find players\r\n                  </Container>\r\n                  <CardContainer query={favPlayerRanking} />\r\n                </>\r\n              )}\r\n            />\r\n            <Route path=\"/profile\" render={() => <Profile />} />\r\n            <Route path=\"/find-players\" render={() => <FindPlayers />} />\r\n          </>\r\n        )}\r\n        {!token && (\r\n          <>\r\n            <Route\r\n              path=\"/signup\"\r\n              render={({ history }) => <SignupForm history={history} />}\r\n            />\r\n            <Route\r\n              path=\"/login\"\r\n              render={({ history }) => <LoginForm history={history} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/forgot-password\"\r\n              render={({ history }) => <ForgotPassword history={history} />}\r\n            />\r\n            <Route\r\n              path=\"/forgot-password/:token\"\r\n              render={({ history, match }) => (\r\n                <SetNewPassword history={history} token={match.params.token} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/confirmation/:token\"\r\n              render={({ history, match }) => (\r\n                <Confirmation history={history} token={match.params.token} />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        <Footer />\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ApolloProvider } from 'react-apollo-hooks'\r\nimport ApolloClient from 'apollo-client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache, defaultDataIdFromObject } from 'apollo-cache-inmemory'\r\nimport { setContext } from 'apollo-link-context'\r\nimport App from './App'\r\nimport { getCookie } from './utils'\r\nimport NotificationContextProvider from './contexts/NotificationContext'\r\nimport AuthContextProvider from './contexts/AuthContext'\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = getCookie('user')\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `bearer ${token}` : null,\r\n    },\r\n  }\r\n})\r\n\r\nconst cache = new InMemoryCache({\r\n  dataIdFromObject: object => {\r\n    switch (object.__typename) {\r\n      case 'Player':\r\n        if (object.numOfGamesId) {\r\n          return object.numOfGamesId + object.id\r\n        }\r\n        return object.id\r\n      default:\r\n        return defaultDataIdFromObject(object)\r\n    }\r\n  },\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache,\r\n})\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <NotificationContextProvider>\r\n      <AuthContextProvider>\r\n        <App />\r\n      </AuthContextProvider>\r\n    </NotificationContextProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}