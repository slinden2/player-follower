{"version":3,"sources":["hooks/index.js","contexts/NotificationContext.js","utils/index.js","graphql/queries.js","graphql/mutations.js","contexts/PlayerContext.js","contexts/AuthContext.js","components/TopNavBar.js","components/PlayerCard.js","components/CardContainer.js","components/Notification.js","components/LoginForm.js","components/SignupForm.js","components/Confirmation.js","components/Footer.js","components/ForgotPassword.js","components/SetNewPassword.js","components/Profile.js","components/FindPlayers.js","components/CumulativeStats.js","components/StandingsTypeDropdown.js","components/StandingsTable.js","components/Standings.js","components/PlayerProfile.js","App.js","index.js"],"names":["useField","name","type","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onChange","event","target","NotificationContext","createContext","NotificationContextProvider","props","_useNotification","_useState3","_useState4","notification","setNotification","_useState5","_useState6","timeoutId","setTimeoutId","message","clearTimeout","id","setTimeout","useNotification","_useNotification2","react_default","a","createElement","Provider","handleException","exception","concat","children","getCookie","parts","document","cookie","split","length","pop","shift","PLAYER_DETAILS","gql","_templateObject","BEST_PLAYERS","_templateObject2","FAVORITE_PLAYERS","_templateObject3","PLAYER_PROFILE","_templateObject4","USER","_templateObject5","FIND_BY_NAME","_templateObject6","CUMULATIVE_STATS","_templateObject7","STANDINGS","_templateObject8","USER_DETAILS","mutations_templateObject","CREATE_USER","mutations_templateObject2","VERIFY_USER","mutations_templateObject3","CANCEL_USER","mutations_templateObject4","LOGIN","mutations_templateObject5","FORGOT_PASSWORD","mutations_templateObject6","SET_NEW_PASSWORD","mutations_templateObject7","CHANGE_PASSWORD","mutations_templateObject8","FOLLOW_PLAYER","_templateObject9","UNFOLLOW_PLAYER","_templateObject10","PlayerContext","PlayerContextProvider","bestPlayers","useQuery","favoritePlayers","followPlayer","useMutation","refetchQueries","query","update","store","response","dataInStore","readQuery","me","data","writeQuery","unfollowPlayer","filter","AuthContext","AuthContextProvider","token","setToken","useContext","client","useApolloClient","user","useEffect","tokenCookie","loginUser","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","refetch","stop","_x","apply","this","arguments","logoutUser","resetStore","withRouter","history","_useContext2","Segment","inverted","Menu","pointing","secondary","Item","as","NavLink","exact","to","Fragment","position","Label","circular","style","margin","size","content","username","onClick","push","PlayerCard","playerId","player","_useContext","_useContext3","handleFollow","_ref2","followedPlayer","variables","followType","sent","fullName","t0","handleUnfollow","_ref3","_callee2","_context2","idInArray","array","some","pid","Card","Image","src","wrapped","ui","Content","Header","Link","siteLink","firstName","lastName","Meta","primaryNumber","Description","stats","goals","assists","points","penaltyMinutes","plusMinus","Icon","CardContainer","loading","Loader","active","inline","oneGame","fiveGames","tenGames","createRow","playerResults","Grid","centered","columns","map","Column","key","components_PlayerCard","Container","Divider","Notification","positive","negative","info","warning","Message","LoginForm","_useField","_useField2","resetUsername","_useField3","_useField4","password","resetPassword","login","handleLogin","Form","onSubmit","Field","assign","placeholder","Button","primary","react_router_dom","SignupForm","email","resetEmail","_useField5","_useField6","_useField7","_useField8","confirmPassword","resetConfirmPassword","createUser","passwordsMatch","signup","abrupt","color","Confirmation","verifyUser","cancelUser","handleVerify","handleCancel","_ref4","Footer","ForgotPassword","forgotPassword","handleForgotPassword","SetNewPassword","setNewPassword","handleSetNewPassword","Profile","show","setShow","changePassword","handlePasswordChange","Table","definition","Body","Row","Cell","FindPlayers","isLoading","setIsLoading","results","setResults","handleSearchChange","e","foundPlayers","searchString","findByName","_x2","_x3","Input","_","debounce","celled","HeaderCell","nationality","find","disabled","headers","headerText","prop","sortString","CumulativeStats","offset","sortBy","sortDir","setVariables","_useQuery","fetchMore","players","GetCumulativeStats","header","stat","updateQuery","prevResult","fetchMoreResult","objectSpread","toConsumableArray","standingsTypes","text","StandingsTypeDropdown","setStandingsType","Dropdown","fluid","selection","options","standingsType","textContent","StandingsTable","standings","title","team","teamName","groupBy","property","Standings","cleanStandings","__typename","division","conference","objectWithoutProperties","cleanUpLeagueStandings","keys","forEach","cleanUpDivisionStandings","components_StandingsTypeDropdown","components_StandingsTable","positions","R","L","C","D","PlayerProfile","findPlayer","List","birthDate","birthCity","birthStateProvince","currentTeam","primaryPosition","boxscores","game","gameDate","App","TopNavBar","components_Notification","react_router","path","render","components_CardContainer","components_CumulativeStats","components_Standings","match","components_PlayerProfile","params","components_Profile","components_FindPlayers","components_SignupForm","components_LoginForm","components_ForgotPassword","_ref5","components_SetNewPassword","_ref6","components_Confirmation","components_Footer","httpLink","createHttpLink","uri","authLink","setContext","authorization","cache","InMemoryCache","dataIdFromObject","object","numOfGamesId","defaultDataIdFromObject","ApolloClient","link","ReactDOM","ApolloContext","contexts_NotificationContext","contexts_PlayerContext","contexts_AuthContext","src_App","getElementById"],"mappings":"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","file":"static/js/main.3e416d05.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst useField = (name, type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return [{ type, name, value, onChange }, reset]\r\n}\r\n\r\nconst useNotification = () => {\r\n  const [notification, setNotification] = useState(null)\r\n  const [timeoutId, setTimeoutId] = useState(null)\r\n\r\n  const notify = (type, message) => {\r\n    clearTimeout(timeoutId)\r\n    setNotification({ type, message })\r\n    const id = setTimeout(() => {\r\n      setNotification(null)\r\n      setTimeoutId(null)\r\n    }, 5000)\r\n    setTimeoutId(id)\r\n  }\r\n\r\n  return [notification, notify]\r\n}\r\n\r\nexport { useField, useNotification }\r\n","import React, { createContext } from 'react'\r\nimport { useNotification } from '../hooks'\r\n\r\nexport const NotificationContext = createContext()\r\n\r\nconst NotificationContextProvider = props => {\r\n  const [notification, setNotification] = useNotification()\r\n\r\n  const handleException = exception => {\r\n    setNotification('negative', `${exception.message}`)\r\n  }\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{ notification, setNotification, handleException }}\r\n    >\r\n      {props.children}\r\n    </NotificationContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NotificationContextProvider\r\n","const getCookie = name => {\r\n  const value = '; ' + document.cookie\r\n  const parts = value.split('; ' + name + '=')\r\n  if (parts.length === 2) {\r\n    return parts\r\n      .pop()\r\n      .split(';')\r\n      .shift()\r\n  }\r\n}\r\n\r\nconst removeCookie = name => {\r\n  document.cookie = `${name}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`\r\n}\r\n\r\nconst setCookie = (name, value) => {\r\n  document.cookie = `${name}=${value}`\r\n}\r\n\r\n// const imgUrl = playerId => `http://3.cdn.nhle.com/photos/mugs/${playerId}.jpg`\r\nconst cardImgUrl = playerId =>\r\n  `https://nhl.bamcontent.com/images/headshots/current/168x168/${playerId}.jpg`\r\n\r\nconst profileImgUrl = playerId =>\r\n  `https://nhl.bamcontent.com/images/actionshots/${playerId}.jpg`\r\n\r\nexport { getCookie, removeCookie, setCookie, cardImgUrl, profileImgUrl }\r\n","import { gql } from 'apollo-boost'\r\n\r\nconst PLAYER_DETAILS = gql`\r\n  fragment PlayerDetails on PlayerCard {\r\n    firstName\r\n    lastName\r\n    primaryNumber\r\n    playerId\r\n    id\r\n    numOfGamesId\r\n    siteLink\r\n    stats {\r\n      goals\r\n      assists\r\n      points\r\n      plusMinus\r\n      penaltyMinutes\r\n    }\r\n  }\r\n`\r\n\r\nconst BEST_PLAYERS = gql`\r\n  query getBestPlayers {\r\n    bestPlayers {\r\n      oneGame {\r\n        ...PlayerDetails\r\n      }\r\n      fiveGames {\r\n        ...PlayerDetails\r\n      }\r\n      tenGames {\r\n        ...PlayerDetails\r\n      }\r\n    }\r\n  }\r\n  ${PLAYER_DETAILS}\r\n`\r\n\r\nconst FAVORITE_PLAYERS = gql`\r\n  query getFavoritePlayers {\r\n    favoritePlayers {\r\n      oneGame {\r\n        ...PlayerDetails\r\n      }\r\n      fiveGames {\r\n        ...PlayerDetails\r\n      }\r\n      tenGames {\r\n        ...PlayerDetails\r\n      }\r\n    }\r\n  }\r\n  ${PLAYER_DETAILS}\r\n`\r\n\r\nconst PLAYER_PROFILE = gql`\r\n  query getPlayerProfile($siteLink: String!) {\r\n    findPlayer(siteLink: $siteLink) {\r\n      id\r\n      fullName\r\n      primaryNumber\r\n      birthDate\r\n      birthCity\r\n      birthStateProvince\r\n      nationality\r\n      height\r\n      weight\r\n      alternateCaptain\r\n      captain\r\n      rookie\r\n      shootsCatches\r\n      currentTeam {\r\n        name\r\n        abbreviation\r\n        locationName\r\n      }\r\n      primaryPosition\r\n      playerId\r\n      boxscores {\r\n        id\r\n        assists\r\n        blocked\r\n        faceOffsTaken\r\n        faceOffWins\r\n        gameDate\r\n        gamePk\r\n        giveaways\r\n        goals\r\n        hits\r\n        penaltyMinutes\r\n        plusMinus\r\n        points\r\n        powerPlayAssists\r\n        powerPlayGoals\r\n        powerPlayTimeOnIce\r\n        shortHandedAssists\r\n        shortHandedGoals\r\n        shortHandedTimeOnIce\r\n        shotPct\r\n        shots\r\n        takeaways\r\n        timeOnIce\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst USER = gql`\r\n  query loggedUser {\r\n    me {\r\n      username\r\n      email\r\n      favoritePlayers\r\n    }\r\n  }\r\n`\r\n\r\nconst FIND_BY_NAME = gql`\r\n  query findByName($searchString: String!) {\r\n    findByName(searchString: $searchString) {\r\n      fullName\r\n      nationality\r\n      primaryNumber\r\n      id\r\n      playerId\r\n    }\r\n  }\r\n`\r\n\r\nconst CUMULATIVE_STATS = gql`\r\n  query GetCumulativeStats(\r\n    $offset: Int!\r\n    $sortBy: SortBy!\r\n    $sortDir: SortDir!\r\n  ) {\r\n    GetCumulativeStats(offset: $offset, sortBy: $sortBy, sortDir: $sortDir) {\r\n      fullName\r\n      team\r\n      position\r\n      gamesPlayed\r\n      goals\r\n      assists\r\n      points\r\n      plusMinus\r\n      penaltyMinutes\r\n      pointsPerGame\r\n      gameWinningGoals\r\n      overTimeGoals\r\n      powerPlayGoals\r\n      powerPlayPoints\r\n      shortHandedGoals\r\n      shortHandedPoints\r\n      shots\r\n    }\r\n  }\r\n`\r\n\r\nconst STANDINGS = gql`\r\n  query getStandings {\r\n    Standings {\r\n      teamName\r\n      gamesPlayed\r\n      wins\r\n      losses\r\n      ties\r\n      otLosses\r\n      points\r\n      regPlusOtWins\r\n      pointPct\r\n      goalsFor\r\n      goalsAgainst\r\n      shootoutGamesWon\r\n      goalsForPerGame\r\n      goalsAgainstPerGame\r\n      ppPct\r\n      pkPct\r\n      shotsForPerGame\r\n      shotsAgainstPerGame\r\n      faceOffWinPct\r\n      conference {\r\n        name\r\n      }\r\n      division {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  BEST_PLAYERS,\r\n  FAVORITE_PLAYERS,\r\n  USER,\r\n  FIND_BY_NAME,\r\n  CUMULATIVE_STATS,\r\n  STANDINGS,\r\n  PLAYER_PROFILE,\r\n}\r\n","import { gql } from 'apollo-boost'\r\n\r\nconst USER_DETAILS = gql`\r\n  fragment UserDetails on User {\r\n    id\r\n    username\r\n  }\r\n`\r\n\r\nconst CREATE_USER = gql`\r\n  mutation createUser($username: String!, $email: String!, $password: String!) {\r\n    createUser(username: $username, email: $email, password: $password) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst VERIFY_USER = gql`\r\n  mutation verifyUser($token: String!) {\r\n    verifyUser(token: $token) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n`\r\n\r\nconst CANCEL_USER = gql`\r\n  mutation cancelUser($token: String!) {\r\n    cancelUser(token: $token) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      value\r\n    }\r\n  }\r\n`\r\n\r\nconst FORGOT_PASSWORD = gql`\r\n  mutation forgotPassword($email: String!) {\r\n    forgotPassword(email: $email) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst SET_NEW_PASSWORD = gql`\r\n  mutation setNewPassword($token: String!, $password: String!) {\r\n    setNewPassword(token: $token, password: $password) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst CHANGE_PASSWORD = gql`\r\n  mutation changePassword($password: String!) {\r\n    changePassword(password: $password) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst FOLLOW_PLAYER = gql`\r\n  mutation followPlayer($id: String!, $followType: FollowType!) {\r\n    followPlayer(id: $id, followType: $followType) {\r\n      id\r\n      fullName\r\n    }\r\n  }\r\n`\r\n\r\nconst UNFOLLOW_PLAYER = gql`\r\n  mutation unfollowPlayer($id: String!, $followType: FollowType!) {\r\n    followPlayer(id: $id, followType: $followType) {\r\n      id\r\n      fullName\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  CREATE_USER,\r\n  VERIFY_USER,\r\n  CANCEL_USER,\r\n  LOGIN,\r\n  FORGOT_PASSWORD,\r\n  SET_NEW_PASSWORD,\r\n  CHANGE_PASSWORD,\r\n  FOLLOW_PLAYER,\r\n  UNFOLLOW_PLAYER,\r\n}\r\n","import React, { createContext } from 'react'\r\nimport { useQuery, useMutation } from 'react-apollo-hooks'\r\nimport { USER, BEST_PLAYERS, FAVORITE_PLAYERS } from '../graphql/queries'\r\nimport { FOLLOW_PLAYER, UNFOLLOW_PLAYER } from '../graphql/mutations'\r\n\r\nexport const PlayerContext = createContext()\r\n\r\nconst PlayerContextProvider = props => {\r\n  const bestPlayers = useQuery(BEST_PLAYERS)\r\n  const favoritePlayers = useQuery(FAVORITE_PLAYERS)\r\n\r\n  const followPlayer = useMutation(FOLLOW_PLAYER, {\r\n    refetchQueries: [{ query: FAVORITE_PLAYERS }],\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: USER })\r\n      dataInStore.me.favoritePlayers = dataInStore.me.favoritePlayers.concat(\r\n        response.data.followPlayer.id\r\n      )\r\n      store.writeQuery({ query: USER, data: dataInStore })\r\n    },\r\n  })\r\n\r\n  const unfollowPlayer = useMutation(UNFOLLOW_PLAYER, {\r\n    refetchQueries: [{ query: FAVORITE_PLAYERS }],\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: USER })\r\n      dataInStore.me.favoritePlayers = dataInStore.me.favoritePlayers.filter(\r\n        id => id !== response.data.followPlayer.id\r\n      )\r\n      store.writeQuery({ query: USER, data: dataInStore })\r\n    },\r\n  })\r\n\r\n  return (\r\n    <PlayerContext.Provider\r\n      value={{ bestPlayers, favoritePlayers, followPlayer, unfollowPlayer }}\r\n    >\r\n      {props.children}\r\n    </PlayerContext.Provider>\r\n  )\r\n}\r\n\r\nexport default PlayerContextProvider\r\n","import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport { useApolloClient, useQuery } from 'react-apollo-hooks'\r\nimport { setCookie, getCookie, removeCookie } from '../utils'\r\nimport { USER } from '../graphql/queries'\r\nimport { PlayerContext } from './PlayerContext'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider = props => {\r\n  const [token, setToken] = useState(null)\r\n  const { favoritePlayers } = useContext(PlayerContext)\r\n\r\n  const client = useApolloClient()\r\n  const user = useQuery(USER)\r\n\r\n  // login with cookie\r\n  useEffect(() => {\r\n    const tokenCookie = getCookie('user')\r\n    setToken(tokenCookie)\r\n  }, [])\r\n\r\n  // login user and query favorite players\r\n  const loginUser = async token => {\r\n    setToken(token)\r\n    setCookie('user', token)\r\n    user.refetch()\r\n    favoritePlayers.refetch()\r\n  }\r\n\r\n  const logoutUser = () => {\r\n    setToken(null)\r\n    removeCookie('user')\r\n    client.resetStore()\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        setToken,\r\n        loginUser,\r\n        logoutUser,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContextProvider\r\n","import React, { useContext } from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport { Segment, Menu, Label } from 'semantic-ui-react'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst TopNavBarNoRouter = ({ history }) => {\r\n  const { setNotification } = useContext(NotificationContext)\r\n  const { user, token, logoutUser } = useContext(AuthContext)\r\n\r\n  const handleLogout = () => {\r\n    logoutUser()\r\n    setNotification('positive', 'You have been logged out.')\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Segment inverted>\r\n      <Menu inverted pointing secondary>\r\n        <Menu.Item as={NavLink} exact to=\"/\" name=\"all\" />\r\n        {token && <Menu.Item as={NavLink} to=\"/favorites\" name=\"favorites\" />}\r\n        <Menu.Item as={NavLink} to=\"/stats\" name=\"stats\" />\r\n        <Menu.Item as={NavLink} to=\"/standings\" name=\"standings\" />\r\n        <Menu.Item as={NavLink} to=\"/about\" name=\"about\" />\r\n        {!token ? (\r\n          <>\r\n            <Menu.Menu position=\"right\">\r\n              <Menu.Item as={NavLink} to=\"/login\" name=\"log in\" />\r\n            </Menu.Menu>\r\n            <Menu.Menu>\r\n              <Menu.Item as={NavLink} to=\"/signup\" name=\"sign up\" />\r\n            </Menu.Menu>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Menu.Menu position=\"right\">\r\n              {/* <Menu.Item\r\n                as={NavLink}\r\n                to=\"/profile\"\r\n                name=\"profile\"\r\n                \r\n                \r\n              /> */}\r\n              {user.data.me && (\r\n                <Label\r\n                  as={NavLink}\r\n                  to=\"/profile\"\r\n                  circular\r\n                  style={{ margin: 'auto auto' }}\r\n                  size=\"medium\"\r\n                  content={user.data.me.username}\r\n                />\r\n              )}\r\n            </Menu.Menu>\r\n            <Menu.Menu>\r\n              <Menu.Item name=\"log out\" onClick={handleLogout} />\r\n            </Menu.Menu>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default withRouter(TopNavBarNoRouter)\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Image, Icon } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\nimport { PlayerContext } from '../contexts/PlayerContext'\r\nimport { cardImgUrl } from '../utils'\r\n\r\nconst PlayerCard = ({ player }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { followPlayer, unfollowPlayer } = useContext(PlayerContext)\r\n  const { token, user } = useContext(AuthContext)\r\n\r\n  const handleFollow = async () => {\r\n    try {\r\n      const followedPlayer = await followPlayer({\r\n        variables: { id: player.id, followType: 'FOLLOW' },\r\n      })\r\n      if (followedPlayer.data.followPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You started following ${followedPlayer.data.followPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const handleUnfollow = async () => {\r\n    try {\r\n      const id = await unfollowPlayer({\r\n        variables: { id: player.id, followType: 'UNFOLLOW' },\r\n      })\r\n      if (id.data.unfollowPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You unfollowed ${id.data.unfollowPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const idInArray = (array, id) => array.some(pid => pid === id)\r\n\r\n  return (\r\n    <Card>\r\n      <Image src={cardImgUrl(player.playerId)} wrapped ui={false} />\r\n      <Card.Content>\r\n        <Card.Header as={Link} to={'/players/' + player.siteLink}>\r\n          {player.firstName} {player.lastName}\r\n        </Card.Header>\r\n        <Card.Meta>#{player.primaryNumber}</Card.Meta>\r\n        <Card.Description>\r\n          G: {player.stats.goals} | A: {player.stats.assists} | P:{' '}\r\n          {player.stats.points} | PM: {player.stats.penaltyMinutes} | +/-:{' '}\r\n          {player.stats.plusMinus}\r\n        </Card.Description>\r\n        <div>\r\n          {token && user.data.me && (\r\n            <>\r\n              {!idInArray(user.data.me.favoritePlayers, player.id) && (\r\n                <Icon name=\"thumbs up\" onClick={handleFollow} />\r\n              )}\r\n              {idInArray(user.data.me.favoritePlayers, player.id) && (\r\n                <Icon name=\"thumbs down outline\" onClick={handleUnfollow} />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PlayerCard\r\n","import React, { useContext } from 'react'\r\nimport { Container, Header, Divider, Loader } from 'semantic-ui-react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport PlayerCard from './PlayerCard'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst CardContainer = ({ query }) => {\r\n  const { setNotification } = useContext(NotificationContext)\r\n\r\n  if (query.loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const { oneGame, fiveGames, tenGames } =\r\n    query.data.bestPlayers || query.data.favoritePlayers\r\n\r\n  const createRow = playerResults => {\r\n    if (!playerResults.length) return <div>No results</div>\r\n\r\n    return (\r\n      <Grid centered={true} columns={5}>\r\n        {playerResults.map(player => (\r\n          <Grid.Column key={player.playerId}>\r\n            <PlayerCard\r\n              key={player.playerId}\r\n              player={player}\r\n              setNotification={setNotification}\r\n            />\r\n          </Grid.Column>\r\n        ))}\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header>Last game</Header>\r\n      {createRow(oneGame)}\r\n      <Divider />\r\n      <Header>Last 5 games</Header>\r\n      {createRow(fiveGames)}\r\n      <Divider />\r\n      <Header>Last 10 games</Header>\r\n      {createRow(tenGames)}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CardContainer\r\n\r\n// Instead of 3 queries make one query for 10 games and process it in the frontend?\r\n","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (!notification) return null\r\n\r\n  const typeSelector = {\r\n    positive: { positive: true },\r\n    negative: { negative: true },\r\n    info: { info: true },\r\n    warning: { warning: true },\r\n  }\r\n\r\n  const type = typeSelector[notification.type]\r\n\r\n  return (\r\n    <Message {...type}>\r\n      <Message.Content>{`${notification.message}`}</Message.Content>\r\n    </Message>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { LOGIN } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { loginUser } = useContext(AuthContext)\r\n  const [username, resetUsername] = useField('username', 'text')\r\n  const [password, resetPassword] = useField('password', 'password')\r\n\r\n  const login = useMutation(LOGIN)\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const token = await login({\r\n        variables: {\r\n          username: username.value,\r\n          password: password.value,\r\n        },\r\n      })\r\n      setNotification('positive', `${username.value} successfully logged in.`)\r\n      resetUsername()\r\n      resetPassword()\r\n      loginUser(token.data.login.value)\r\n      history.push('/')\r\n    } catch (exception) {\r\n      handleException(exception)\r\n      resetPassword()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input placeholder=\"username or email\" {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Log in\r\n        </Button>\r\n      </Form>\r\n      <Link to=\"/forgot-password\" name=\"I forgot my password\">\r\n        I forgot my password\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { CREATE_USER } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst SignupForm = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [username, resetUsername] = useField('username', 'text')\r\n  const [email, resetEmail] = useField('password', 'text')\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n\r\n  const createUser = useMutation(CREATE_USER)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const signup = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await createUser({\r\n        variables: {\r\n          username: username.value,\r\n          email: email.value,\r\n          password: password.value,\r\n        },\r\n      })\r\n    } catch (exception) {\r\n      handleException(exception)\r\n      return\r\n    }\r\n\r\n    setNotification(\r\n      'positive',\r\n      `An account for ${\r\n        username.value\r\n      } has been created. Before logging in, you must activate your account by clicking the activation link sent to ${\r\n        email.value\r\n      }.`\r\n    )\r\n    resetUsername()\r\n    resetEmail()\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={signup}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input placeholder=\"username\" {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input placeholder=\"email\" {...email} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm password</label>\r\n          <input placeholder=\"password\" {...confirmPassword} />\r\n          {!passwordsMatch && (\r\n            <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n          )}\r\n\r\n          <span />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupForm\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { VERIFY_USER, CANCEL_USER } from '../graphql/mutations'\r\nimport { Button, Segment, Header } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst Confirmation = ({ history, token }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const verifyUser = useMutation(VERIFY_USER, { variables: { token } })\r\n  const cancelUser = useMutation(CANCEL_USER, { variables: { token } })\r\n\r\n  const handleVerify = async () => {\r\n    try {\r\n      await verifyUser()\r\n      setNotification(\r\n        'positive',\r\n        'Your account has been activated. You may now log in.'\r\n      )\r\n    } catch ({ message }) {\r\n      setNotification('negative', `${message}`)\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  const handleCancel = async () => {\r\n    try {\r\n      await cancelUser()\r\n      setNotification(\r\n        'warning',\r\n        'Your account has been cancelled and all the information has been deleted from the database.'\r\n      )\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Segment>\r\n      <Header>Activate your user account</Header>\r\n      <Button primary={true} onClick={handleVerify}>\r\n        OK\r\n      </Button>\r\n      <Button onClick={handleCancel}>Cancel</Button>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default Confirmation\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return <p>Footer</p>\r\n}\r\n\r\nexport default Footer\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { FORGOT_PASSWORD } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [email, resetEmail] = useField('email', 'text')\r\n  const forgotPassword = useMutation(FORGOT_PASSWORD)\r\n\r\n  const handleForgotPassword = async () => {\r\n    try {\r\n      await forgotPassword({\r\n        variables: {\r\n          email: email.value,\r\n        },\r\n      })\r\n      setNotification(\r\n        'positive',\r\n        `The password reset link has been set to ${\r\n          email.value\r\n        }. Please click the link to change your password.`\r\n      )\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetEmail()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleForgotPassword}>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input placeholder=\"email\" {...email} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { useField } from '../hooks'\r\nimport { SET_NEW_PASSWORD } from '../graphql/mutations'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst SetNewPassword = ({ history, token }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n  const setNewPassword = useMutation(SET_NEW_PASSWORD)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const handleSetNewPassword = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await setNewPassword({ variables: { token, password: password.value } })\r\n      setNotification(\r\n        'positive',\r\n        'Your password has been changed. You may now log in with the new password.'\r\n      )\r\n      history.push('/')\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSetNewPassword}>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm password</label>\r\n          <input placeholder=\"password\" {...confirmPassword} />\r\n          {!passwordsMatch && (\r\n            <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n          )}\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SetNewPassword\r\n","import React, { useState, useContext } from 'react'\r\nimport { useField } from '../hooks'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Table, Button, Form } from 'semantic-ui-react'\r\nimport { CHANGE_PASSWORD } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\n\r\nconst Profile = () => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { user } = useContext(AuthContext)\r\n  const [show, setShow] = useState(false)\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n\r\n  const changePassword = useMutation(CHANGE_PASSWORD)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const closeForm = () => {\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n    setShow(false)\r\n  }\r\n\r\n  const handlePasswordChange = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await changePassword({ variables: { password: password.value } })\r\n      setNotification('positive', 'Your password has been changed.')\r\n      setShow(false)\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table definition>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>Username</Table.Cell>\r\n            <Table.Cell>{user.data.me && user.data.me.username}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Email</Table.Cell>\r\n            <Table.Cell>{user.data.me && user.data.me.email}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Password</Table.Cell>\r\n            <Table.Cell>\r\n              <Button onClick={() => setShow(true)}>Change password</Button>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n      {show && (\r\n        <Form onSubmit={handlePasswordChange}>\r\n          <Form.Field>\r\n            <label>New password</label>\r\n            <input {...password} />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Confirm new password</label>\r\n            <input {...confirmPassword} />\r\n            {!passwordsMatch && (\r\n              <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n            )}\r\n          </Form.Field>\r\n          <Button primary type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button onClick={closeForm}>Cancel</Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState, useContext } from 'react'\r\nimport { useApolloClient } from 'react-apollo-hooks'\r\nimport { Header, Input, Loader, Table, Button } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\nimport { FIND_BY_NAME } from '../graphql/queries'\r\nimport { PlayerContext } from '../contexts/PlayerContext'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst FindPlayers = () => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [results, setResults] = useState([])\r\n  const { user } = useContext(AuthContext)\r\n  const { followPlayer } = useContext(PlayerContext)\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const client = useApolloClient()\r\n\r\n  const handleSearchChange = async (e, { value }) => {\r\n    if (!value) return setResults([])\r\n    setIsLoading(true)\r\n    const foundPlayers = await client.query({\r\n      query: FIND_BY_NAME,\r\n      variables: {\r\n        searchString: value,\r\n      },\r\n    })\r\n    setIsLoading(false)\r\n    setResults(foundPlayers.data.findByName)\r\n  }\r\n\r\n  const handleFollow = async player => {\r\n    try {\r\n      const followedPlayer = await followPlayer({\r\n        variables: { id: player.id, followType: 'FOLLOW' },\r\n      })\r\n      if (followedPlayer.data.followPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You started following ${followedPlayer.data.followPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const showResults = () => !isLoading && results.length > 0\r\n\r\n  return (\r\n    <div>\r\n      <Header>Find Players</Header>\r\n      <Input\r\n        placeholder=\"Search...\"\r\n        onChange={_.debounce(handleSearchChange, 500)}\r\n      />\r\n      {isLoading && <Loader active inline=\"centered\" />}\r\n      {showResults() && (\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Name</Table.HeaderCell>\r\n              <Table.HeaderCell>#</Table.HeaderCell>\r\n              <Table.HeaderCell>Nationality</Table.HeaderCell>\r\n              <Table.HeaderCell />\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {results.map(player => (\r\n              <Table.Row key={player.playerId}>\r\n                <Table.Cell>{player.fullName}</Table.Cell>\r\n                <Table.Cell>{player.primaryNumber}</Table.Cell>\r\n                <Table.Cell>{player.nationality}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    primary={\r\n                      user.data.me.favoritePlayers.find(id => id === player.id)\r\n                        ? false\r\n                        : true\r\n                    }\r\n                    disabled={\r\n                      user.data.me.favoritePlayers.find(id => id === player.id)\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    size=\"tiny\"\r\n                    content={'Follow'}\r\n                    onClick={() => handleFollow(player)}\r\n                  />\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FindPlayers\r\n","import React, { useState } from 'react'\r\nimport { useQuery } from 'react-apollo-hooks'\r\nimport { Loader, Table, Header, Button } from 'semantic-ui-react'\r\nimport { CUMULATIVE_STATS } from '../graphql/queries'\r\n\r\nconst headers = [\r\n  { headerText: 'Player', prop: 'fullName', sortString: 'PLAYER' },\r\n  { headerText: 'Team', prop: 'team', sortString: 'TEAM' },\r\n  { headerText: 'POS', prop: 'position', sortString: 'POSITION' },\r\n  { headerText: 'GP', prop: 'gamesPlayed', sortString: 'GP' },\r\n  { headerText: 'G', prop: 'goals', sortString: 'GOALS' },\r\n  { headerText: 'A', prop: 'assists', sortString: 'ASSISTS' },\r\n  { headerText: 'P', prop: 'points', sortString: 'POINTS' },\r\n  { headerText: '+/-', prop: 'plusMinus', sortString: 'PLUSMINUS' },\r\n  { headerText: 'PM', prop: 'penaltyMinutes', sortString: 'PM' },\r\n  { headerText: 'P/G', prop: 'pointsPerGame', sortString: 'POINTS_PER_GAME' },\r\n  { headerText: 'GWG', prop: 'gameWinningGoals', sortString: 'GWG' },\r\n  { headerText: 'OTG', prop: 'overTimeGoals', sortString: 'OTG' },\r\n  { headerText: 'PPG', prop: 'powerPlayGoals', sortString: 'PPG' },\r\n  { headerText: 'PPP', prop: 'powerPlayPoints', sortString: 'PPP' },\r\n  { headerText: 'SHG', prop: 'shortHandedGoals', sortString: 'SHG' },\r\n  { headerText: 'SHP', prop: 'shortHandedPoints', sortString: 'SHP' },\r\n  { headerText: 'Shots', prop: 'shots', sortString: 'SHOTS' },\r\n]\r\n\r\nconst CumulativeStats = () => {\r\n  const [variables, setVariables] = useState({\r\n    offset: 0,\r\n    sortBy: 'POINTS',\r\n    sortDir: 'DESC',\r\n  })\r\n  const { data, loading, fetchMore } = useQuery(CUMULATIVE_STATS, {\r\n    variables,\r\n  })\r\n\r\n  if (loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const players = data.GetCumulativeStats\r\n\r\n  const loadMore = () => {\r\n    fetchMore({\r\n      variables: { offset: players.length },\r\n      updateQuery: (prevResult, { fetchMoreResult }) => {\r\n        if (!fetchMoreResult) return prevResult\r\n        return {\r\n          ...prevResult,\r\n          GetCumulativeStats: [\r\n            ...prevResult.GetCumulativeStats,\r\n            ...fetchMoreResult.GetCumulativeStats,\r\n          ],\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  const handleNewVariables = sortBy => {\r\n    // cant sort by these fields atm because of\r\n    // how aggregation is done in the backend\r\n    if (sortBy === 'PLAYER' || sortBy === 'TEAM' || sortBy === 'POSITION')\r\n      return\r\n\r\n    if (sortBy === variables.sortBy) {\r\n      variables.sortDir === 'DESC'\r\n        ? setVariables({ offset: 0, sortBy, sortDir: 'ASC' })\r\n        : setVariables({ offset: 0, sortBy, sortDir: 'DESC' })\r\n    } else {\r\n      setVariables({ offset: 0, sortBy, sortDir: 'DESC' })\r\n    }\r\n  }\r\n\r\n  const createHeaders = () => (\r\n    <Table.Row>\r\n      {headers.map(header => (\r\n        <Table.HeaderCell\r\n          key={header.headerText}\r\n          onClick={() => handleNewVariables(header.sortString)}\r\n        >\r\n          {header.headerText}\r\n        </Table.HeaderCell>\r\n      ))}\r\n    </Table.Row>\r\n  )\r\n\r\n  const createCells = () =>\r\n    players.map(player => (\r\n      <Table.Row key={player.fullName}>\r\n        {headers.map(stat => (\r\n          <Table.Cell key={stat.prop}>{player[stat.prop]}</Table.Cell>\r\n        ))}\r\n      </Table.Row>\r\n    ))\r\n\r\n  return (\r\n    <div>\r\n      <Header>Stats</Header>\r\n      <Table celled>\r\n        <Table.Header>{createHeaders()}</Table.Header>\r\n        <Table.Body>{createCells()}</Table.Body>\r\n      </Table>\r\n      <Button onClick={loadMore}>Load more</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CumulativeStats\r\n","import React from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\n\r\nconst standingsTypes = [\r\n  {\r\n    key: 'LEAGUE',\r\n    text: 'League',\r\n    value: 'LEAGUE',\r\n  },\r\n  {\r\n    key: 'CONFERENCE',\r\n    text: 'Conference',\r\n    value: 'CONFERENCE',\r\n  },\r\n  {\r\n    key: 'DIVISION',\r\n    text: 'Division',\r\n    value: 'DIVISION',\r\n  },\r\n]\r\n\r\nconst StandingsTypeDropdown = ({ setStandingsType }) => {\r\n  const handleStandingsType = e => {\r\n    const type = standingsTypes.find(\r\n      standingsType => standingsType.text === e.target.textContent\r\n    )\r\n    setStandingsType(type.value)\r\n  }\r\n\r\n  return (\r\n    <Dropdown\r\n      placeholder=\"Select standings\"\r\n      fluid\r\n      selection\r\n      options={standingsTypes}\r\n      onChange={handleStandingsType}\r\n    />\r\n  )\r\n}\r\n\r\nexport default StandingsTypeDropdown\r\n","import React from 'react'\r\nimport { Table, Header } from 'semantic-ui-react'\r\n\r\nconst headers = [\r\n  { headerText: 'Team', prop: 'teamName' },\r\n  { headerText: 'GP', prop: 'gamesPlayed' },\r\n  { headerText: 'W', prop: 'wins' },\r\n  { headerText: 'L', prop: 'losses' },\r\n  { headerText: 'T', prop: 'ties' },\r\n  { headerText: 'OT', prop: 'otLosses' },\r\n  { headerText: 'P', prop: 'points' },\r\n  { headerText: 'ROW', prop: 'regPlusOtWins' },\r\n  { headerText: 'P%', prop: 'pointPct' },\r\n  { headerText: 'GF', prop: 'goalsFor' },\r\n  { headerText: 'GA', prop: 'goalsAgainst' },\r\n  { headerText: 'S/O Wins', prop: 'shootoutGamesWon' },\r\n  { headerText: 'GF/GP', prop: 'goalsForPerGame' },\r\n  { headerText: 'GA/GP', prop: 'goalsAgainstPerGame' },\r\n  { headerText: 'PP%', prop: 'ppPct' },\r\n  { headerText: 'PK%', prop: 'pkPct' },\r\n  { headerText: 'Shots/GP', prop: 'shotsForPerGame' },\r\n  { headerText: 'SA/GP', prop: 'shotsAgainstPerGame' },\r\n  { headerText: 'FOW%', prop: 'faceOffWinPct' },\r\n]\r\n\r\nconst StandingsTable = ({ standings, title }) => {\r\n  const createHeaders = () => (\r\n    <Table.Row>\r\n      {headers.map(header => (\r\n        <Table.HeaderCell key={header.headerText}>\r\n          {header.headerText}\r\n        </Table.HeaderCell>\r\n      ))}\r\n    </Table.Row>\r\n  )\r\n\r\n  const createCells = () =>\r\n    standings.map(team => (\r\n      <Table.Row key={team.teamName}>\r\n        {headers.map(stat => (\r\n          <Table.Cell key={stat.prop}>{team[stat.prop]}</Table.Cell>\r\n        ))}\r\n      </Table.Row>\r\n    ))\r\n\r\n  return (\r\n    <div>\r\n      <Header>{title ? title : 'League'}</Header>\r\n      <Table celled>\r\n        <Table.Header>{createHeaders()}</Table.Header>\r\n        <Table.Body>{createCells()}</Table.Body>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StandingsTable\r\n","import React, { useState } from 'react'\r\nimport { useQuery } from 'react-apollo-hooks'\r\nimport { Loader, Header } from 'semantic-ui-react'\r\nimport { STANDINGS } from '../graphql/queries'\r\nimport StandingsTypeDropdown from './StandingsTypeDropdown'\r\nimport _ from 'lodash'\r\nimport StandingsTable from './StandingsTable'\r\n\r\n// group standings by conference or division\r\nconst groupBy = (array, property) => {\r\n  return _.groupBy(array, team => team[property].name)\r\n}\r\n\r\n// used to clean up division and conference objects from the\r\n// standing arrays so that they can be used as react children.\r\nconst cleanUpLeagueStandings = standings => {\r\n  return [\r\n    ...standings.map(team => {\r\n      const { __typename, division, conference, ...teamData } = team\r\n      return teamData\r\n    }),\r\n  ]\r\n}\r\n\r\n// used to clean up division and conference objects from the\r\n// standing arrays so that they can be used as react children.\r\nconst cleanUpDivisionStandings = standings => {\r\n  Object.keys(standings).forEach(conference => {\r\n    standings[conference] = [\r\n      ...standings[conference].map(team => {\r\n        const { __typename, division, conference, ...teamData } = team\r\n        return teamData\r\n      }),\r\n    ]\r\n  })\r\n\r\n  return standings\r\n}\r\n\r\nconst Standings = () => {\r\n  const [standingsType, setStandingsType] = useState('LEAGUE')\r\n  const { loading, data } = useQuery(STANDINGS)\r\n\r\n  if (loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const standings =\r\n    standingsType === 'CONFERENCE'\r\n      ? groupBy(data.Standings, 'conference')\r\n      : standingsType === 'DIVISION'\r\n      ? groupBy(data.Standings, 'division')\r\n      : data.Standings\r\n\r\n  const cleanStandings =\r\n    standingsType === 'LEAGUE'\r\n      ? cleanUpLeagueStandings(standings)\r\n      : cleanUpDivisionStandings(standings)\r\n\r\n  return (\r\n    <div>\r\n      <Header>Standings</Header>\r\n      <StandingsTypeDropdown setStandingsType={setStandingsType} />\r\n      {standingsType === 'LEAGUE' ? (\r\n        <StandingsTable standings={cleanStandings} />\r\n      ) : (\r\n        Object.keys(standings).map(conference => (\r\n          <StandingsTable\r\n            key={conference}\r\n            standings={cleanStandings[conference]}\r\n            title={conference}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Standings\r\n","import React from 'react'\r\nimport { useQuery } from 'react-apollo-hooks'\r\nimport { Loader, Image, Header, List, Divider, Table } from 'semantic-ui-react'\r\nimport { profileImgUrl } from '../utils'\r\nimport { PLAYER_PROFILE } from '../graphql/queries'\r\n\r\nconst positions = {\r\n  R: 'Right Wing',\r\n  L: 'Left Wing',\r\n  C: 'Center',\r\n  D: 'Defenceman',\r\n}\r\n\r\nconst headers = [\r\n  { headerText: 'Date', prop: 'gameDate' },\r\n  { headerText: 'G', prop: 'goals' },\r\n  { headerText: 'A', prop: 'assists' },\r\n  { headerText: 'P', prop: 'points' },\r\n  { headerText: '+/-', prop: 'plusMinus' },\r\n  { headerText: 'PM', prop: 'penaltyMinutes' },\r\n  { headerText: 'PPG', prop: 'powerPlayGoals' },\r\n  { headerText: 'PPA', prop: 'powerPlayAssists' },\r\n  { headerText: 'SHG', prop: 'shortHandedGoals' },\r\n  { headerText: 'SHA', prop: 'shortHandedAssists' },\r\n  { headerText: 'TON', prop: 'timeOnIce' },\r\n  { headerText: 'PPTON', prop: 'powerPlayTimeOnIce' },\r\n  { headerText: 'SHTON', prop: 'shortHandedTimeOnIce' },\r\n  { headerText: 'Shots', prop: 'shots' },\r\n  { headerText: 'Shot%', prop: 'shotPct' },\r\n  { headerText: 'Blocked', prop: 'blocked' },\r\n  { headerText: 'Hits', prop: 'hits' },\r\n  { headerText: 'Giveaways', prop: 'giveaways' },\r\n  { headerText: 'Takeaways', prop: 'takeaways' },\r\n]\r\n\r\nconst PlayerProfile = ({ siteLink }) => {\r\n  const { data, loading } = useQuery(PLAYER_PROFILE, {\r\n    variables: { siteLink },\r\n  })\r\n\r\n  if (loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const player = data.findPlayer\r\n\r\n  const createHeaders = () => (\r\n    <Table.Row>\r\n      {headers.map(header => (\r\n        <Table.HeaderCell key={header.headerText}>\r\n          {header.headerText}\r\n        </Table.HeaderCell>\r\n      ))}\r\n    </Table.Row>\r\n  )\r\n\r\n  const createCells = () =>\r\n    player.boxscores.map(game => (\r\n      <Table.Row key={game.gameDate}>\r\n        {headers.map(stat => (\r\n          <Table.Cell key={stat.prop}>{game[stat.prop]}</Table.Cell>\r\n        ))}\r\n      </Table.Row>\r\n    ))\r\n\r\n  return (\r\n    <div>\r\n      <Image src={profileImgUrl(data.findPlayer.playerId)} fluid />\r\n      <Header size=\"huge\">{player.fullName}</Header>\r\n      <List>\r\n        <List.Item>\r\n          <strong>Birthdate:</strong> {player.birthDate}\r\n        </List.Item>\r\n        <List.Item>\r\n          <strong>Birth City:</strong> {player.birthCity}\r\n        </List.Item>\r\n        {player.birthStateProvince && (\r\n          <List.Item>\r\n            <strong>Birth State:</strong> {player.birthStateProvince}\r\n          </List.Item>\r\n        )}\r\n        <List.Item>\r\n          <strong>Nationality:</strong> {player.nationality}\r\n        </List.Item>\r\n        <List.Item>\r\n          <strong>Team:</strong> {player.currentTeam.name}\r\n        </List.Item>\r\n        <List.Item>\r\n          <strong>Position:</strong> {positions[player.primaryPosition]}\r\n        </List.Item>\r\n      </List>\r\n      <Divider />\r\n      <Header size=\"huge\">Performance Game-by-Game</Header>\r\n      <Table celled>\r\n        <Table.Header>{createHeaders()}</Table.Header>\r\n        <Table.Body>{createCells()}</Table.Body>\r\n      </Table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerProfile\r\n","import React, { useContext } from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport { Container, Header } from 'semantic-ui-react'\r\nimport { NotificationContext } from './contexts/NotificationContext'\r\nimport { AuthContext } from './contexts/AuthContext'\r\nimport { PlayerContext } from './contexts/PlayerContext'\r\nimport TopNavBar from './components/TopNavBar'\r\nimport CardContainer from './components/CardContainer'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport SignupForm from './components/SignupForm'\r\nimport Confirmation from './components/Confirmation'\r\nimport Footer from './components/Footer'\r\nimport ForgotPassword from './components/ForgotPassword'\r\nimport SetNewPassword from './components/SetNewPassword'\r\nimport Profile from './components/Profile'\r\nimport FindPlayers from './components/FindPlayers'\r\nimport CumulativeStats from './components/CumulativeStats'\r\nimport Standings from './components/Standings'\r\nimport PlayerProfile from './components/PlayerProfile'\r\n\r\nconst App = () => {\r\n  const { notification } = useContext(NotificationContext)\r\n  const { token } = useContext(AuthContext)\r\n  const { bestPlayers, favoritePlayers } = useContext(PlayerContext)\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Header size=\"huge\">Player Follower</Header>\r\n        <TopNavBar />\r\n        <Notification notification={notification} />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => <CardContainer query={bestPlayers} />}\r\n        />\r\n        <Route path=\"/stats\" render={() => <CumulativeStats />} />\r\n        <Route path=\"/standings\" render={() => <Standings />} />\r\n        <Route path=\"/about\" render={() => <div>About</div>} />\r\n        <Route\r\n          path=\"/players/:siteLink\"\r\n          render={({ match }) => (\r\n            <PlayerProfile siteLink={match.params.siteLink} />\r\n          )}\r\n        />\r\n        {token && (\r\n          <>\r\n            <Route\r\n              path=\"/favorites\"\r\n              render={() => (\r\n                <>\r\n                  <Container as={Link} to=\"/find-players\">\r\n                    Find players\r\n                  </Container>\r\n                  <CardContainer query={favoritePlayers} />\r\n                </>\r\n              )}\r\n            />\r\n            <Route path=\"/profile\" render={() => <Profile />} />\r\n            <Route path=\"/find-players\" render={() => <FindPlayers />} />\r\n          </>\r\n        )}\r\n        {!token && (\r\n          <>\r\n            <Route\r\n              path=\"/signup\"\r\n              render={({ history }) => <SignupForm history={history} />}\r\n            />\r\n            <Route\r\n              path=\"/login\"\r\n              render={({ history }) => <LoginForm history={history} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/forgot-password\"\r\n              render={({ history }) => <ForgotPassword history={history} />}\r\n            />\r\n            <Route\r\n              path=\"/forgot-password/:token\"\r\n              render={({ history, match }) => (\r\n                <SetNewPassword history={history} token={match.params.token} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/confirmation/:token\"\r\n              render={({ history, match }) => (\r\n                <Confirmation history={history} token={match.params.token} />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        <Footer />\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ApolloProvider } from 'react-apollo-hooks'\r\nimport ApolloClient from 'apollo-client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache, defaultDataIdFromObject } from 'apollo-cache-inmemory'\r\nimport { setContext } from 'apollo-link-context'\r\nimport App from './App'\r\nimport { getCookie } from './utils'\r\nimport NotificationContextProvider from './contexts/NotificationContext'\r\nimport AuthContextProvider from './contexts/AuthContext'\r\nimport PlayerContextProvider from './contexts/PlayerContext'\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = getCookie('user')\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `bearer ${token}` : null,\r\n    },\r\n  }\r\n})\r\n\r\nconst cache = new InMemoryCache({\r\n  dataIdFromObject: object => {\r\n    switch (object.__typename) {\r\n      case 'PlayerCard':\r\n        if (object.numOfGamesId) {\r\n          return object.numOfGamesId + object.id\r\n        }\r\n        return object.id\r\n      default:\r\n        return defaultDataIdFromObject(object)\r\n    }\r\n  },\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache,\r\n})\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <NotificationContextProvider>\r\n      <PlayerContextProvider>\r\n        <AuthContextProvider>\r\n          <App />\r\n        </AuthContextProvider>\r\n      </PlayerContextProvider>\r\n    </NotificationContextProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}