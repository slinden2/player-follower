{"version":3,"sources":["utils/index.js","graphql/queries.js","graphql/mutations.js","contexts/PlayerContext.js","contexts/AuthContext.js","hooks/index.js","contexts/NotificationContext.js","components/TopNavBar.js","components/PlayerCard.js","components/CardContainer.js","components/Notification.js","components/LoginForm.js","components/SignupForm.js","components/Confirmation.js","components/Footer.js","components/ForgotPassword.js","components/SetNewPassword.js","components/Profile.js","components/FindPlayers.js","App.js","index.js"],"names":["getCookie","name","parts","document","cookie","split","length","pop","shift","PLAYER_DETAILS","gql","_templateObject","BEST_PLAYERS","_templateObject2","FAVORITE_PLAYERS","_templateObject3","USER","_templateObject4","FIND_BY_NAME","_templateObject5","USER_DETAILS","mutations_templateObject","CREATE_USER","mutations_templateObject2","VERIFY_USER","mutations_templateObject3","CANCEL_USER","mutations_templateObject4","LOGIN","mutations_templateObject5","FORGOT_PASSWORD","_templateObject6","SET_NEW_PASSWORD","_templateObject7","CHANGE_PASSWORD","_templateObject8","FOLLOW_PLAYER","_templateObject9","UNFOLLOW_PLAYER","_templateObject10","PlayerContext","createContext","PlayerContextProvider","props","bestPlayers","useQuery","favoritePlayers","followPlayer","useMutation","refetchQueries","query","update","store","response","dataInStore","readQuery","me","concat","data","id","writeQuery","unfollowPlayer","filter","react_default","a","createElement","Provider","value","children","AuthContext","AuthContextProvider","_useState","useState","_useState2","Object","slicedToArray","token","setToken","useContext","client","useApolloClient","user","useEffect","tokenCookie","loginUser","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","refetch","stop","_x","apply","this","arguments","logoutUser","resetStore","useField","type","setValue","onChange","event","target","NotificationContext","NotificationContextProvider","_useNotification","_useState3","_useState4","notification","setNotification","_useState5","_useState6","timeoutId","setTimeoutId","message","clearTimeout","setTimeout","useNotification","_useNotification2","handleException","exception","withRouter","history","_useContext2","Segment","inverted","Menu","pointing","secondary","Item","as","NavLink","exact","to","Fragment","position","Label","circular","style","margin","size","content","username","onClick","push","PlayerCard","playerId","player","_useContext","_useContext3","handleFollow","_ref2","followedPlayer","variables","sent","fullName","t0","handleUnfollow","_ref3","_callee2","_context2","idInArray","array","some","pid","Card","Image","src","wrapped","ui","Content","Header","firstName","lastName","Meta","primaryNumber","Description","stats","goals","assists","points","penaltyMinutes","plusMinus","Icon","CardContainer","loading","Loader","active","inline","oneGame","fiveGames","tenGames","createRow","playerResults","Grid","centered","columns","map","Column","key","components_PlayerCard","Container","Divider","Notification","positive","negative","info","warning","Message","LoginForm","_useField","_useField2","resetUsername","_useField3","_useField4","password","resetPassword","login","handleLogin","Form","onSubmit","Field","assign","placeholder","Button","primary","react_router_dom","SignupForm","email","resetEmail","_useField5","_useField6","_useField7","_useField8","confirmPassword","resetConfirmPassword","createUser","passwordsMatch","signup","abrupt","color","Confirmation","verifyUser","cancelUser","handleVerify","handleCancel","_ref4","Footer","ForgotPassword","forgotPassword","handleForgotPassword","SetNewPassword","setNewPassword","handleSetNewPassword","Profile","show","setShow","changePassword","handlePasswordChange","Table","definition","Body","Row","Cell","FindPlayers","isLoading","setIsLoading","results","setResults","handleSearchChange","e","foundPlayers","searchString","findByName","_x2","_x3","Input","_","debounce","celled","HeaderCell","nationality","find","disabled","App","TopNavBar","components_Notification","react_router","path","render","components_CardContainer","Link","components_Profile","components_FindPlayers","components_SignupForm","components_LoginForm","components_ForgotPassword","match","components_SetNewPassword","params","_ref5","components_Confirmation","components_Footer","httpLink","createHttpLink","uri","authLink","setContext","headers","objectSpread","authorization","cache","InMemoryCache","dataIdFromObject","object","__typename","numOfGamesId","defaultDataIdFromObject","ApolloClient","link","ReactDOM","ApolloContext","contexts_NotificationContext","contexts_PlayerContext","contexts_AuthContext","src_App","getElementById"],"mappings":"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","file":"static/js/main.beae20db.chunk.js","sourcesContent":["const getCookie = name => {\r\n  const value = '; ' + document.cookie\r\n  const parts = value.split('; ' + name + '=')\r\n  if (parts.length === 2) {\r\n    return parts\r\n      .pop()\r\n      .split(';')\r\n      .shift()\r\n  }\r\n}\r\n\r\nconst removeCookie = name => {\r\n  document.cookie = `${name}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`\r\n}\r\n\r\nconst setCookie = (name, value) => {\r\n  document.cookie = `${name}=${value}`\r\n}\r\n\r\nexport { getCookie, removeCookie, setCookie }\r\n","import { gql } from 'apollo-boost'\r\n\r\nconst PLAYER_DETAILS = gql`\r\n  fragment PlayerDetails on Player {\r\n    firstName\r\n    lastName\r\n    primaryNumber\r\n    playerId\r\n    id\r\n    numOfGamesId\r\n    stats {\r\n      gamePks\r\n      goals\r\n      assists\r\n      points\r\n      plusMinus\r\n      penaltyMinutes\r\n    }\r\n  }\r\n`\r\n\r\nconst BEST_PLAYERS = gql`\r\n  query getBestPlayers {\r\n    bestPlayers {\r\n      oneGame {\r\n        ...PlayerDetails\r\n      }\r\n      fiveGames {\r\n        ...PlayerDetails\r\n      }\r\n      tenGames {\r\n        ...PlayerDetails\r\n      }\r\n    }\r\n  }\r\n  ${PLAYER_DETAILS}\r\n`\r\n\r\nconst FAVORITE_PLAYERS = gql`\r\n  query getFavoritePlayers {\r\n    favoritePlayers {\r\n      oneGame {\r\n        ...PlayerDetails\r\n      }\r\n      fiveGames {\r\n        ...PlayerDetails\r\n      }\r\n      tenGames {\r\n        ...PlayerDetails\r\n      }\r\n    }\r\n  }\r\n  ${PLAYER_DETAILS}\r\n`\r\n\r\nconst USER = gql`\r\n  query loggedUser {\r\n    me {\r\n      username\r\n      email\r\n      favoritePlayers\r\n    }\r\n  }\r\n`\r\n\r\nconst FIND_BY_NAME = gql`\r\n  query findByName($searchString: String!) {\r\n    findByName(searchString: $searchString) {\r\n      fullName\r\n      nationality\r\n      primaryNumber\r\n      id\r\n      playerId\r\n    }\r\n  }\r\n`\r\n\r\nexport { BEST_PLAYERS, FAVORITE_PLAYERS, USER, FIND_BY_NAME }\r\n","import { gql } from 'apollo-boost'\r\n\r\nconst USER_DETAILS = gql`\r\n  fragment UserDetails on User {\r\n    id\r\n    username\r\n  }\r\n`\r\n\r\nconst CREATE_USER = gql`\r\n  mutation createUser($username: String!, $email: String!, $password: String!) {\r\n    createUser(username: $username, email: $email, password: $password) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst VERIFY_USER = gql`\r\n  mutation verifyUser($token: String!) {\r\n    verifyUser(token: $token) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n`\r\n\r\nconst CANCEL_USER = gql`\r\n  mutation cancelUser($token: String!) {\r\n    cancelUser(token: $token) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      value\r\n    }\r\n  }\r\n`\r\n\r\nconst FORGOT_PASSWORD = gql`\r\n  mutation forgotPassword($email: String!) {\r\n    forgotPassword(email: $email) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst SET_NEW_PASSWORD = gql`\r\n  mutation setNewPassword($token: String!, $password: String!) {\r\n    setNewPassword(token: $token, password: $password) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst CHANGE_PASSWORD = gql`\r\n  mutation changePassword($password: String!) {\r\n    changePassword(password: $password) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst FOLLOW_PLAYER = gql`\r\n  mutation followPlayer($id: String!) {\r\n    followPlayer(id: $id) {\r\n      id\r\n      fullName\r\n    }\r\n  }\r\n`\r\n\r\nconst UNFOLLOW_PLAYER = gql`\r\n  mutation unfollowPlayer($id: String!) {\r\n    unfollowPlayer(id: $id) {\r\n      id\r\n      fullName\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  CREATE_USER,\r\n  VERIFY_USER,\r\n  CANCEL_USER,\r\n  LOGIN,\r\n  FORGOT_PASSWORD,\r\n  SET_NEW_PASSWORD,\r\n  CHANGE_PASSWORD,\r\n  FOLLOW_PLAYER,\r\n  UNFOLLOW_PLAYER,\r\n}\r\n","import React, { createContext } from 'react'\r\nimport { useQuery, useMutation } from 'react-apollo-hooks'\r\nimport { USER, BEST_PLAYERS, FAVORITE_PLAYERS } from '../graphql/queries'\r\nimport { FOLLOW_PLAYER, UNFOLLOW_PLAYER } from '../graphql/mutations'\r\n\r\nexport const PlayerContext = createContext()\r\n\r\nconst PlayerContextProvider = props => {\r\n  const bestPlayers = useQuery(BEST_PLAYERS)\r\n  const favoritePlayers = useQuery(FAVORITE_PLAYERS)\r\n\r\n  const followPlayer = useMutation(FOLLOW_PLAYER, {\r\n    refetchQueries: [{ query: FAVORITE_PLAYERS }],\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: USER })\r\n      dataInStore.me.favoritePlayers = dataInStore.me.favoritePlayers.concat(\r\n        response.data.followPlayer.id\r\n      )\r\n      store.writeQuery({ query: USER, data: dataInStore })\r\n    },\r\n  })\r\n\r\n  const unfollowPlayer = useMutation(UNFOLLOW_PLAYER, {\r\n    refetchQueries: [{ query: FAVORITE_PLAYERS }],\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: USER })\r\n      dataInStore.me.favoritePlayers = dataInStore.me.favoritePlayers.filter(\r\n        id => id !== response.data.unfollowPlayer.id\r\n      )\r\n      store.writeQuery({ query: USER, data: dataInStore })\r\n    },\r\n  })\r\n\r\n  return (\r\n    <PlayerContext.Provider\r\n      value={{ bestPlayers, favoritePlayers, followPlayer, unfollowPlayer }}\r\n    >\r\n      {props.children}\r\n    </PlayerContext.Provider>\r\n  )\r\n}\r\n\r\nexport default PlayerContextProvider\r\n","import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport { useApolloClient, useQuery } from 'react-apollo-hooks'\r\nimport { setCookie, getCookie, removeCookie } from '../utils'\r\nimport { USER } from '../graphql/queries'\r\nimport { PlayerContext } from './PlayerContext'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider = props => {\r\n  const [token, setToken] = useState(null)\r\n  const { favoritePlayers } = useContext(PlayerContext)\r\n\r\n  const client = useApolloClient()\r\n  const user = useQuery(USER)\r\n\r\n  // login with cookie\r\n  useEffect(() => {\r\n    const tokenCookie = getCookie('user')\r\n    setToken(tokenCookie)\r\n  }, [])\r\n\r\n  // login user and query favorite players\r\n  const loginUser = async token => {\r\n    setToken(token)\r\n    setCookie('user', token)\r\n    user.refetch()\r\n    favoritePlayers.refetch()\r\n  }\r\n\r\n  const logoutUser = () => {\r\n    setToken(null)\r\n    removeCookie('user')\r\n    client.resetStore()\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        setToken,\r\n        loginUser,\r\n        logoutUser,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContextProvider\r\n","import { useState } from 'react'\r\n\r\nconst useField = (name, type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return [{ type, name, value, onChange }, reset]\r\n}\r\n\r\nconst useNotification = () => {\r\n  const [notification, setNotification] = useState(null)\r\n  const [timeoutId, setTimeoutId] = useState(null)\r\n\r\n  const notify = (type, message) => {\r\n    clearTimeout(timeoutId)\r\n    setNotification({ type, message })\r\n    const id = setTimeout(() => {\r\n      setNotification(null)\r\n      setTimeoutId(null)\r\n    }, 5000)\r\n    setTimeoutId(id)\r\n  }\r\n\r\n  return [notification, notify]\r\n}\r\n\r\nexport { useField, useNotification }\r\n","import React, { createContext } from 'react'\r\nimport { useNotification } from '../hooks'\r\n\r\nexport const NotificationContext = createContext()\r\n\r\nconst NotificationContextProvider = props => {\r\n  const [notification, setNotification] = useNotification()\r\n\r\n  const handleException = exception => {\r\n    setNotification('negative', `${exception.message}`)\r\n  }\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{ notification, setNotification, handleException }}\r\n    >\r\n      {props.children}\r\n    </NotificationContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NotificationContextProvider\r\n","import React, { useContext } from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport { Segment, Menu, Label } from 'semantic-ui-react'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst TopNavBarNoRouter = ({ history }) => {\r\n  const { setNotification } = useContext(NotificationContext)\r\n  const { user, token, logoutUser } = useContext(AuthContext)\r\n\r\n  const handleLogout = () => {\r\n    logoutUser()\r\n    setNotification('positive', 'You have been logged out.')\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Segment inverted>\r\n      <Menu inverted pointing secondary>\r\n        <Menu.Item as={NavLink} exact to=\"/\" name=\"all\" />\r\n        {token && <Menu.Item as={NavLink} to=\"/favorites\" name=\"favorites\" />}\r\n        <Menu.Item as={NavLink} to=\"/stats\" name=\"stats\" />\r\n        <Menu.Item as={NavLink} to=\"/standings\" name=\"standings\" />\r\n        <Menu.Item as={NavLink} to=\"/about\" name=\"about\" />\r\n        {!token ? (\r\n          <>\r\n            <Menu.Menu position=\"right\">\r\n              <Menu.Item as={NavLink} to=\"/login\" name=\"log in\" />\r\n            </Menu.Menu>\r\n            <Menu.Menu>\r\n              <Menu.Item as={NavLink} to=\"/signup\" name=\"sign up\" />\r\n            </Menu.Menu>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Menu.Menu position=\"right\">\r\n              {/* <Menu.Item\r\n                as={NavLink}\r\n                to=\"/profile\"\r\n                name=\"profile\"\r\n                \r\n                \r\n              /> */}\r\n              {user.data.me && (\r\n                <Label\r\n                  as={NavLink}\r\n                  to=\"/profile\"\r\n                  circular\r\n                  style={{ margin: 'auto auto' }}\r\n                  size=\"medium\"\r\n                  content={user.data.me.username}\r\n                />\r\n              )}\r\n            </Menu.Menu>\r\n            <Menu.Menu>\r\n              <Menu.Item name=\"log out\" onClick={handleLogout} />\r\n            </Menu.Menu>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default withRouter(TopNavBarNoRouter)\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Card, Image, Icon } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\nimport { PlayerContext } from '../contexts/PlayerContext'\r\n\r\n// const imgUrl = playerId => `http://3.cdn.nhle.com/photos/mugs/${playerId}.jpg`\r\nconst imgUrl = playerId =>\r\n  `https://nhl.bamcontent.com/images/headshots/current/168x168/${playerId}.jpg`\r\n\r\nconst PlayerCard = ({ player }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { followPlayer, unfollowPlayer } = useContext(PlayerContext)\r\n  const { token, user } = useContext(AuthContext)\r\n\r\n  const handleFollow = async () => {\r\n    try {\r\n      const followedPlayer = await followPlayer({\r\n        variables: { id: player.id },\r\n      })\r\n      if (followedPlayer.data.followPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You started following ${followedPlayer.data.followPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const handleUnfollow = async () => {\r\n    try {\r\n      const id = await unfollowPlayer({ variables: { id: player.id } })\r\n      if (id.data.unfollowPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You unfollowed ${id.data.unfollowPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  // console.log(user)\r\n\r\n  const idInArray = (array, id) => array.some(pid => pid === id)\r\n\r\n  return (\r\n    <Card>\r\n      <Image src={imgUrl(player.playerId)} wrapped ui={false} />\r\n      <Card.Content>\r\n        <Card.Header>\r\n          {player.firstName} {player.lastName}\r\n        </Card.Header>\r\n        <Card.Meta>#{player.primaryNumber}</Card.Meta>\r\n        <Card.Description>\r\n          G: {player.stats.goals} | A: {player.stats.assists} | P:{' '}\r\n          {player.stats.points} | PM: {player.stats.penaltyMinutes} | +/-:{' '}\r\n          {player.stats.plusMinus}\r\n        </Card.Description>\r\n        <div>\r\n          {token && user.data.me && (\r\n            <>\r\n              {!idInArray(user.data.me.favoritePlayers, player.id) && (\r\n                <Icon name=\"thumbs up\" onClick={handleFollow} />\r\n              )}\r\n              {idInArray(user.data.me.favoritePlayers, player.id) && (\r\n                <Icon name=\"thumbs down outline\" onClick={handleUnfollow} />\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PlayerCard\r\n","import React, { useContext } from 'react'\r\nimport { Container, Header, Divider, Loader } from 'semantic-ui-react'\r\nimport { Grid } from 'semantic-ui-react'\r\nimport PlayerCard from './PlayerCard'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst CardContainer = ({ query }) => {\r\n  const { setNotification } = useContext(NotificationContext)\r\n\r\n  if (query.loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const { oneGame, fiveGames, tenGames } =\r\n    query.data.bestPlayers || query.data.favoritePlayers\r\n\r\n  const createRow = playerResults => {\r\n    if (!playerResults.length) return <div>No results</div>\r\n\r\n    return (\r\n      <Grid centered={true} columns={5}>\r\n        {playerResults.map(player => (\r\n          <Grid.Column key={player.playerId}>\r\n            <PlayerCard\r\n              key={player.playerId}\r\n              player={player}\r\n              setNotification={setNotification}\r\n            />\r\n          </Grid.Column>\r\n        ))}\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Header>Last game</Header>\r\n      {createRow(oneGame)}\r\n      <Divider />\r\n      <Header>Last 5 games</Header>\r\n      {createRow(fiveGames)}\r\n      <Divider />\r\n      <Header>Last 10 games</Header>\r\n      {createRow(tenGames)}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CardContainer\r\n\r\n// Instead of 3 queries make one query for 10 games and process it in the frontend?\r\n","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (!notification) return null\r\n\r\n  const typeSelector = {\r\n    positive: { positive: true },\r\n    negative: { negative: true },\r\n    info: { info: true },\r\n    warning: { warning: true },\r\n  }\r\n\r\n  const type = typeSelector[notification.type]\r\n\r\n  return (\r\n    <Message {...type}>\r\n      <Message.Content>{`${notification.message}`}</Message.Content>\r\n    </Message>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { LOGIN } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { loginUser } = useContext(AuthContext)\r\n  const [username, resetUsername] = useField('username', 'text')\r\n  const [password, resetPassword] = useField('password', 'password')\r\n\r\n  const login = useMutation(LOGIN)\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const token = await login({\r\n        variables: {\r\n          username: username.value,\r\n          password: password.value,\r\n        },\r\n      })\r\n      setNotification('positive', `${username.value} successfully logged in.`)\r\n      resetUsername()\r\n      resetPassword()\r\n      loginUser(token.data.login.value)\r\n      history.push('/')\r\n    } catch (exception) {\r\n      handleException(exception)\r\n      resetPassword()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input placeholder=\"username or email\" {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Log in\r\n        </Button>\r\n      </Form>\r\n      <Link to=\"/forgot-password\" name=\"I forgot my password\">\r\n        I forgot my password\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { CREATE_USER } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst SignupForm = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [username, resetUsername] = useField('username', 'text')\r\n  const [email, resetEmail] = useField('password', 'text')\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n\r\n  const createUser = useMutation(CREATE_USER)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const signup = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await createUser({\r\n        variables: {\r\n          username: username.value,\r\n          email: email.value,\r\n          password: password.value,\r\n        },\r\n      })\r\n    } catch (exception) {\r\n      handleException(exception)\r\n      return\r\n    }\r\n\r\n    setNotification(\r\n      'positive',\r\n      `An account for ${\r\n        username.value\r\n      } has been created. Before logging in, you must activate your account by clicking the activation link sent to ${\r\n        email.value\r\n      }.`\r\n    )\r\n    resetUsername()\r\n    resetEmail()\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={signup}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input placeholder=\"username\" {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input placeholder=\"email\" {...email} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm password</label>\r\n          <input placeholder=\"password\" {...confirmPassword} />\r\n          {!passwordsMatch && (\r\n            <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n          )}\r\n\r\n          <span />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupForm\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { VERIFY_USER, CANCEL_USER } from '../graphql/mutations'\r\nimport { Button, Segment, Header } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst Confirmation = ({ history, token }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const verifyUser = useMutation(VERIFY_USER, { variables: { token } })\r\n  const cancelUser = useMutation(CANCEL_USER, { variables: { token } })\r\n\r\n  const handleVerify = async () => {\r\n    try {\r\n      await verifyUser()\r\n      setNotification(\r\n        'positive',\r\n        'Your account has been activated. You may now log in.'\r\n      )\r\n    } catch ({ message }) {\r\n      setNotification('negative', `${message}`)\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  const handleCancel = async () => {\r\n    try {\r\n      await cancelUser()\r\n      setNotification(\r\n        'warning',\r\n        'Your account has been cancelled and all the information has been deleted from the database.'\r\n      )\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Segment>\r\n      <Header>Activate your user account</Header>\r\n      <Button primary={true} onClick={handleVerify}>\r\n        OK\r\n      </Button>\r\n      <Button onClick={handleCancel}>Cancel</Button>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default Confirmation\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return <p>Footer</p>\r\n}\r\n\r\nexport default Footer\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../hooks'\r\nimport { FORGOT_PASSWORD } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [email, resetEmail] = useField('email', 'text')\r\n  const forgotPassword = useMutation(FORGOT_PASSWORD)\r\n\r\n  const handleForgotPassword = async () => {\r\n    try {\r\n      await forgotPassword({\r\n        variables: {\r\n          email: email.value,\r\n        },\r\n      })\r\n      setNotification(\r\n        'positive',\r\n        `The password reset link has been set to ${\r\n          email.value\r\n        }. Please click the link to change your password.`\r\n      )\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetEmail()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleForgotPassword}>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input placeholder=\"email\" {...email} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { useField } from '../hooks'\r\nimport { SET_NEW_PASSWORD } from '../graphql/mutations'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst SetNewPassword = ({ history, token }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n  const setNewPassword = useMutation(SET_NEW_PASSWORD)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const handleSetNewPassword = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await setNewPassword({ variables: { token, password: password.value } })\r\n      setNotification(\r\n        'positive',\r\n        'Your password has been changed. You may now log in with the new password.'\r\n      )\r\n      history.push('/')\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSetNewPassword}>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm password</label>\r\n          <input placeholder=\"password\" {...confirmPassword} />\r\n          {!passwordsMatch && (\r\n            <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n          )}\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SetNewPassword\r\n","import React, { useState, useContext } from 'react'\r\nimport { useField } from '../hooks'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Table, Button, Form } from 'semantic-ui-react'\r\nimport { CHANGE_PASSWORD } from '../graphql/mutations'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\n\r\nconst Profile = () => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { user } = useContext(AuthContext)\r\n  const [show, setShow] = useState(false)\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n\r\n  const changePassword = useMutation(CHANGE_PASSWORD)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const closeForm = () => {\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n    setShow(false)\r\n  }\r\n\r\n  const handlePasswordChange = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await changePassword({ variables: { password: password.value } })\r\n      setNotification('positive', 'Your password has been changed.')\r\n      setShow(false)\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table definition>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>Username</Table.Cell>\r\n            <Table.Cell>{user.data.me && user.data.me.username}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Email</Table.Cell>\r\n            <Table.Cell>{user.data.me && user.data.me.email}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Password</Table.Cell>\r\n            <Table.Cell>\r\n              <Button onClick={() => setShow(true)}>Change password</Button>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n      {show && (\r\n        <Form onSubmit={handlePasswordChange}>\r\n          <Form.Field>\r\n            <label>New password</label>\r\n            <input {...password} />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Confirm new password</label>\r\n            <input {...confirmPassword} />\r\n            {!passwordsMatch && (\r\n              <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n            )}\r\n          </Form.Field>\r\n          <Button primary type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button onClick={closeForm}>Cancel</Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState, useContext } from 'react'\r\nimport { useApolloClient } from 'react-apollo-hooks'\r\nimport { Header, Input, Loader, Table, Button } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport { AuthContext } from '../contexts/AuthContext'\r\nimport { FIND_BY_NAME } from '../graphql/queries'\r\nimport { PlayerContext } from '../contexts/PlayerContext'\r\nimport { NotificationContext } from '../contexts/NotificationContext'\r\n\r\nconst FindPlayers = () => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [results, setResults] = useState([])\r\n  const { user } = useContext(AuthContext)\r\n  const { followPlayer } = useContext(PlayerContext)\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const client = useApolloClient()\r\n\r\n  const handleSearchChange = async (e, { value }) => {\r\n    if (!value) return setResults([])\r\n    setIsLoading(true)\r\n    const foundPlayers = await client.query({\r\n      query: FIND_BY_NAME,\r\n      variables: {\r\n        searchString: value,\r\n      },\r\n    })\r\n    setIsLoading(false)\r\n    setResults(foundPlayers.data.findByName)\r\n  }\r\n\r\n  const handleFollow = async player => {\r\n    try {\r\n      const followedPlayer = await followPlayer({\r\n        variables: { id: player.id },\r\n      })\r\n      if (followedPlayer.data.followPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You started following ${followedPlayer.data.followPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const showResults = () => !isLoading && results.length > 0\r\n\r\n  return (\r\n    <div>\r\n      <Header>Find Players</Header>\r\n      <Input\r\n        placeholder=\"Search...\"\r\n        onChange={_.debounce(handleSearchChange, 500)}\r\n      />\r\n      {isLoading && <Loader active inline=\"centered\" />}\r\n      {showResults() && (\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Name</Table.HeaderCell>\r\n              <Table.HeaderCell>#</Table.HeaderCell>\r\n              <Table.HeaderCell>Nationality</Table.HeaderCell>\r\n              <Table.HeaderCell />\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {results.map(player => (\r\n              <Table.Row key={player.playerId}>\r\n                <Table.Cell>{player.fullName}</Table.Cell>\r\n                <Table.Cell>{player.primaryNumber}</Table.Cell>\r\n                <Table.Cell>{player.nationality}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    primary={\r\n                      user.data.me.favoritePlayers.find(id => id === player.id)\r\n                        ? false\r\n                        : true\r\n                    }\r\n                    disabled={\r\n                      user.data.me.favoritePlayers.find(id => id === player.id)\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    size=\"tiny\"\r\n                    content={'Follow'}\r\n                    onClick={() => handleFollow(player)}\r\n                  />\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FindPlayers\r\n","import React, { useContext } from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport { Container, Header } from 'semantic-ui-react'\r\nimport TopNavBar from './components/TopNavBar'\r\nimport CardContainer from './components/CardContainer'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/LoginForm'\r\nimport SignupForm from './components/SignupForm'\r\nimport Confirmation from './components/Confirmation'\r\nimport Footer from './components/Footer'\r\nimport ForgotPassword from './components/ForgotPassword'\r\nimport SetNewPassword from './components/SetNewPassword'\r\nimport Profile from './components/Profile'\r\nimport FindPlayers from './components/FindPlayers'\r\nimport { NotificationContext } from './contexts/NotificationContext'\r\nimport { AuthContext } from './contexts/AuthContext'\r\nimport { PlayerContext } from './contexts/PlayerContext'\r\n\r\nconst App = () => {\r\n  const { notification } = useContext(NotificationContext)\r\n  const { token } = useContext(AuthContext)\r\n  const { bestPlayers, favoritePlayers } = useContext(PlayerContext)\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Header size=\"huge\">Player Follower</Header>\r\n        <TopNavBar />\r\n        <Notification notification={notification} />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => <CardContainer query={bestPlayers} />}\r\n        />\r\n        <Route path=\"/stats\" render={() => <div>Stats</div>} />\r\n        <Route path=\"/standings\" render={() => <div>Standings</div>} />\r\n        <Route path=\"/about\" render={() => <div>About</div>} />\r\n        {token && (\r\n          <>\r\n            <Route\r\n              path=\"/favorites\"\r\n              render={() => (\r\n                <>\r\n                  <Container as={Link} to=\"/find-players\">\r\n                    Find players\r\n                  </Container>\r\n                  <CardContainer query={favoritePlayers} />\r\n                </>\r\n              )}\r\n            />\r\n            <Route path=\"/profile\" render={() => <Profile />} />\r\n            <Route path=\"/find-players\" render={() => <FindPlayers />} />\r\n          </>\r\n        )}\r\n        {!token && (\r\n          <>\r\n            <Route\r\n              path=\"/signup\"\r\n              render={({ history }) => <SignupForm history={history} />}\r\n            />\r\n            <Route\r\n              path=\"/login\"\r\n              render={({ history }) => <LoginForm history={history} />}\r\n            />\r\n            <Route\r\n              exact\r\n              path=\"/forgot-password\"\r\n              render={({ history }) => <ForgotPassword history={history} />}\r\n            />\r\n            <Route\r\n              path=\"/forgot-password/:token\"\r\n              render={({ history, match }) => (\r\n                <SetNewPassword history={history} token={match.params.token} />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/confirmation/:token\"\r\n              render={({ history, match }) => (\r\n                <Confirmation history={history} token={match.params.token} />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        <Footer />\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ApolloProvider } from 'react-apollo-hooks'\r\nimport ApolloClient from 'apollo-client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache, defaultDataIdFromObject } from 'apollo-cache-inmemory'\r\nimport { setContext } from 'apollo-link-context'\r\nimport App from './App'\r\nimport { getCookie } from './utils'\r\nimport NotificationContextProvider from './contexts/NotificationContext'\r\nimport AuthContextProvider from './contexts/AuthContext'\r\nimport PlayerContextProvider from './contexts/PlayerContext'\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = getCookie('user')\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `bearer ${token}` : null,\r\n    },\r\n  }\r\n})\r\n\r\nconst cache = new InMemoryCache({\r\n  dataIdFromObject: object => {\r\n    switch (object.__typename) {\r\n      case 'Player':\r\n        if (object.numOfGamesId) {\r\n          return object.numOfGamesId + object.id\r\n        }\r\n        return object.id\r\n      default:\r\n        return defaultDataIdFromObject(object)\r\n    }\r\n  },\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache,\r\n})\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <NotificationContextProvider>\r\n      <PlayerContextProvider>\r\n        <AuthContextProvider>\r\n          <App />\r\n        </AuthContextProvider>\r\n      </PlayerContextProvider>\r\n    </NotificationContextProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}