{"version":3,"sources":["assets/magnifying-glass-icon.svg","assets/star-disable.svg","assets/star-enable.svg","styles/colors.js","styles/GlobalStyle.js","hooks/index.js","contexts/NotificationContext.js","utils/index.js","graphql/queries.js","graphql/mutations.js","contexts/PlayerContext.js","contexts/AuthContext.js","styles/breakpoints.js","components/navigation/NavListItem.js","components/navigation/NavList.js","components/navigation/SearchField.js","components/navigation/NavContainer.js","components/navigation/HamburgerToggle.js","styles/variables.js","components/navigation/Navigation.js","components/player/PlayerCardFront.js","components/player/PlayerCard.js","components/player/PlayerCardBack.js","components/player/PlayerCardContainer.js","components/Notification.js","components/user/LoginForm.js","components/user/SignupForm.js","components/user/Confirmation.js","components/Footer.js","components/user/ForgotPassword.js","components/user/SetNewPassword.js","components/user/UserProfile.js","components/player/FindPlayers.js","components/StatsTable.js","components/player/PlayerStats.js","components/team/StandingsTypeDropdown.js","components/team/Standings.js","components/player/PlayerBioTable.js","components/player/PlayerMilestones.js","components/player/PlayerProfile.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","colors","GlobalStyle","createGlobalStyle","_templateObject","useField","name","type","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onChange","event","target","NotificationContext","createContext","NotificationContextProvider","props","_useNotification","_useState3","_useState4","notification","setNotification","_useState5","_useState6","timeoutId","setTimeoutId","message","clearTimeout","id","setTimeout","useNotification","_useNotification2","react_default","a","createElement","Provider","handleException","exception","concat","children","getCookie","parts","document","cookie","split","length","pop","shift","playerBioData","primaryPosition","title","birthDate","birthCity","birthState","nationality","team","naviItems","players","exact","to","favorites","tokenRequired","stats","standings","about","search","hideOnWide","login","noToken","signup","profile","logout","bindTo","statHeaders","headerText","PLAYER_DETAILS","gql","queries_templateObject","BEST_PLAYERS","_templateObject2","FAVORITE_PLAYERS","_templateObject3","PLAYER_PROFILE","_templateObject4","USER","_templateObject5","FIND_BY_NAME","_templateObject6","CUMULATIVE_STATS","_templateObject7","STANDINGS","_templateObject8","PLAYER_MILESTONES","_templateObject9","USER_DETAILS","mutations_templateObject","CREATE_USER","mutations_templateObject2","VERIFY_USER","mutations_templateObject3","CANCEL_USER","mutations_templateObject4","LOGIN","mutations_templateObject5","FORGOT_PASSWORD","mutations_templateObject6","SET_NEW_PASSWORD","mutations_templateObject7","CHANGE_PASSWORD","mutations_templateObject8","FOLLOW_PLAYER","mutations_templateObject9","UNFOLLOW_PLAYER","_templateObject10","PlayerContext","PlayerContextProvider","bestPlayers","useQuery","favoritePlayers","followPlayer","useMutation","refetchQueries","query","update","store","response","dataInStore","readQuery","me","data","writeQuery","unfollowPlayer","filter","AuthContext","AuthContextProvider","token","setToken","useContext","client","useApolloClient","user","useEffect","tokenCookie","loginUser","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","refetch","stop","_x","apply","this","arguments","logoutUser","resetStore","breakpoints","activeNavHighlight","css","NavListItem_templateObject","StyledNavListItem","styled","li","NavListItem_templateObject2","divider","NavListItemHideOnWide","NavListItem_templateObject3","StyledNavLink","NavLink","NavListItem_templateObject4","NavListItem","username","onClick","linkProps","nameToShow","Container","nav","NavList_templateObject","right","StyledNavList","ul","NavList_templateObject2","NavList","items","_useContext","functionMap","handleLogout","map","item","showNavItem","navigation_NavListItem","assign","key","SearchContainer","div","SearchField_templateObject","Input","input","SearchField_templateObject2","SearchIcon","object","SearchField_templateObject3","RadioContainer","SearchField_templateObject4","RadioRow","SearchField_templateObject5","SearchField","icon","className","htmlFor","NavContainer_templateObject","mainNaviItems","userActionItems","createNaviItems","NavContainer","NavContainer_Container","navigation_NavList","react_media","matches","navigation_SearchField","ToggleCheckbox","HamburgerToggle_templateObject","ToggleLabel","label","HamburgerToggle_templateObject2","HamburgerToggle","Fragment","variables","navHeight","topMarginWithNav","header","Navigation_templateObject","Logo","Navigation_templateObject2","Navigation","Navigation_Container","navigation_HamburgerToggle","navigation_NavContainer","SPlayerCardFrontContainer","PlayerCardFront_templateObject","PlayerImg","img","PlayerCardFront_templateObject2","ImgOverlay","PlayerCardFront_templateObject3","FavImg","PlayerCardFront_templateObject4","SPlayerName","PlayerCardFront_templateObject5","reduceFont","SPlayerStatsContainer","PlayerCardFront_templateObject6","border","width","idInArray","array","some","pid","PlayerCardFront","playerId","player","_useContext2","_useContext3","handleFollow","_ref2","followedPlayer","followType","sent","fullName","t0","handleUnfollow","_ref3","_callee2","_context2","longName","lastName","src","alt","primaryNumber","react_router_dom","siteLink","firstName","goals","assists","points","penaltyMinutes","plusMinus","starDisabled","starEnabled","SPlayerCard","PlayerCard_templateObject","FlipDiv","PlayerCard_templateObject2","PlayerCard","showFront","setShowFront","NameBar","PlayerCardBack_templateObject","StatRow","PlayerCardBack_templateObject2","first","last","StatItem","PlayerCardBack_templateObject3","rightBorder","descRight","PlayerCardBack","powerPlayGoals","powerPlayPoints","shortHandedGoals","shortHandedPoints","secs","mins","Math","floor","remaining","String","padStart","convertSecsToMMSS","timeOnIcePerGame","faceOffsTaken","shots","hits","takeaways","giveaways","blocked","PlayerCardContainer_templateObject","ViewSelectorItem","span","PlayerCardContainer_templateObject2","PlayerCardContainer","currentView","setCurrentView","loading","Loader","active","inline","playerResults","oneGame","fiveGames","tenGames","playersToShow","PlayerCardContainer_Container","player_PlayerCard","player_PlayerCardFront","player_PlayerCardBack","Notification","positive","negative","info","warning","Message","Content","LoginForm_templateObject","LoginForm","history","_useField","_useField2","resetUsername","_useField3","_useField4","password","resetPassword","handleLogin","push","LoginForm_Container","Form","onSubmit","Field","placeholder","Button","primary","SignupForm","email","resetEmail","_useField5","_useField6","_useField7","_useField8","confirmPassword","resetConfirmPassword","createUser","passwordsMatch","abrupt","style","color","Confirmation","verifyUser","cancelUser","handleVerify","handleCancel","_ref4","Segment","Header","Footer","ForgotPassword","forgotPassword","handleForgotPassword","SetNewPassword","setNewPassword","handleSetNewPassword","UserProfile","show","setShow","changePassword","handlePasswordChange","Table","definition","Body","Row","Cell","FindPlayers","isLoading","setIsLoading","results","setResults","handleSearchChange","e","foundPlayers","searchString","findByName","_x2","_x3","Input_Input","_","debounce","celled","HeaderCell","find","disabled","size","content","StatsTable_templateObject","table","StatsTable_templateObject2","TableTitle","StatsTable_templateObject3","TableHead","thead","StatsTable_templateObject4","TableBody","tbody","StatsTable_templateObject5","TableRow","tr","StatsTable_templateObject6","cellStyling","StatsTable_templateObject7","TableCell","td","StatsTable_templateObject8","th","StatsTable_templateObject9","StatsTable","headers","sortVariables","setSortVariables","handleRowClick","StatsTable_Container","StatsTable_Table","sortBy","sortString","sortDir","offset","handleClick","stat","PlayerStats","setVariables","_useQuery","fetchMore","GetCumulativeStats","playersWithLink","objectSpread","components_StatsTable","updateQuery","prevResult","fetchMoreResult","toConsumableArray","standingsTypes","text","StandingsTypeDropdown","setStandingsType","Dropdown","fluid","selection","options","standingsType","textContent","groupBy","property","League","Standings","cleanStandings","keys","forEach","conference","__typename","division","objectWithoutProperties","cleanUpStandings","team_StandingsTypeDropdown","BioTable","PlayerBioTable_templateObject","PlayerBioTable_templateObject2","PlayerBioTable_templateObject3","PlayerBioTable_templateObject4","TableCellHeading","PlayerBioTable_templateObject5","TableCellTitle","PlayerBioTable_templateObject6","bioDataKeysMobile","bioDataKeysDesktop","PlayerBioTable","hasProperty","PlayerBioTable_TableBody","PlayerBioTable_TableRow","colSpan","row","PlayerBioTable_TableCell","get","textPropOnDesktop","PlayerMilestones_templateObject","PlayerMilestones_templateObject2","HighlightsHeader","PlayerMilestones_templateObject3","MilestoneContainer","PlayerMilestones_templateObject4","MilestoneHeader","PlayerMilestones_templateObject5","MilestoneDate","PlayerMilestones_templateObject6","VideoContainer","PlayerMilestones_templateObject7","Video","video","PlayerMilestones_templateObject8","MilestoneDescription","PlayerMilestones_templateObject9","button","PlayerMilestones_templateObject10","PlayerMilestones","gamePks","selectedGamePk","setSelectedGamePk","boxscores","milestones","GetMilestones","milestone","PlayerMilestones_Container","PlayerMilestones_Button","game","gamePk","boxscore","gameDate","getDate","blurb","playback","height","controls","url","description","PlayerProfile_templateObject","ActionImg","PlayerProfile_templateObject2","PlayerProfile","findPlayer","sort","b","join","teams","awayTeam","abbreviation","homeTeam","rowData","PlayerProfile_Container","player_PlayerBioTable","slice","player_PlayerMilestones","App_templateObject","ContentWrapper","App_templateObject2","App","App_Container","navigation_Navigation","components_Notification","react_router","path","render","player_PlayerCardContainer","player_PlayerStats","team_Standings","match","player_PlayerProfile","params","user_UserProfile","player_FindPlayers","user_SignupForm","user_LoginForm","user_ForgotPassword","_ref5","user_SetNewPassword","_ref6","user_Confirmation","components_Footer","httpLink","createHttpLink","uri","authLink","setContext","authorization","cache","InMemoryCache","dataIdFromObject","numOfGamesId","defaultDataIdFromObject","ApolloClient","link","ReactDOM","ApolloContext","contexts_NotificationContext","contexts_PlayerContext","contexts_AuthContext","styles_GlobalStyle","src_App","getElementById"],"mappings":"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","file":"static/js/main.1ce1d0cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/magnifying-glass-icon.b6a65f37.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-disable.f92a2786.svg\";","module.exports = __webpack_public_path__ + \"static/media/star-enable.77449132.svg\";","export default {\r\n  grey1: '#202225',\r\n  grey2: '#2f3136',\r\n  grey3: '#36393f',\r\n  grey4: '#484c52',\r\n  grey5: '#7f8186',\r\n\r\n  white1: '#fff9f9',\r\n\r\n  red1: '#dd4545',\r\n\r\n  blue1: '#6c81cb',\r\n  blue2: '#7289da',\r\n\r\n  green1: '#43b581',\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\nimport colors from './colors'\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, *:after, *:before {\r\n    box-sizing: inherit\r\n  }\r\n\r\n  body {\r\n    font-family: 'Quicksand', Arial;\r\n    color: ${colors.white1};\r\n    background-color: ${colors.grey1};\r\n    margin: 0;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: ${colors.white1};\r\n  }\r\n\r\n  button {\r\n    font-family: 'Quicksand', Arial;\r\n    color: ${colors.white1};\r\n  }\r\n`\r\n\r\nexport default GlobalStyle\r\n","import { useState } from 'react'\r\n\r\nconst useField = (name, type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return [{ type, name, value, onChange }, reset]\r\n}\r\n\r\nconst useNotification = () => {\r\n  const [notification, setNotification] = useState(null)\r\n  const [timeoutId, setTimeoutId] = useState(null)\r\n\r\n  const notify = (type, message) => {\r\n    clearTimeout(timeoutId)\r\n    setNotification({ type, message })\r\n    const id = setTimeout(() => {\r\n      setNotification(null)\r\n      setTimeoutId(null)\r\n    }, 5000)\r\n    setTimeoutId(id)\r\n  }\r\n\r\n  return [notification, notify]\r\n}\r\n\r\nexport { useField, useNotification }\r\n","import React, { createContext } from 'react'\r\nimport { useNotification } from '../hooks'\r\n\r\nexport const NotificationContext = createContext()\r\n\r\nconst NotificationContextProvider = props => {\r\n  const [notification, setNotification] = useNotification()\r\n\r\n  const handleException = exception => {\r\n    setNotification('negative', `${exception.message}`)\r\n  }\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{ notification, setNotification, handleException }}\r\n    >\r\n      {props.children}\r\n    </NotificationContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NotificationContextProvider\r\n","const getCookie = name => {\r\n  const value = '; ' + document.cookie\r\n  const parts = value.split('; ' + name + '=')\r\n  if (parts.length === 2) {\r\n    return parts\r\n      .pop()\r\n      .split(';')\r\n      .shift()\r\n  }\r\n}\r\n\r\nconst removeCookie = name => {\r\n  document.cookie = `${name}= ; expires = Thu, 01 Jan 1970 00:00:00 GMT`\r\n}\r\n\r\nconst setCookie = (name, value) => {\r\n  document.cookie = `${name}=${value}`\r\n}\r\n\r\n// const imgUrl = playerId => `http://3.cdn.nhle.com/photos/mugs/${playerId}.jpg`\r\nconst cardImgUrl = playerId =>\r\n  `https://nhl.bamcontent.com/images/headshots/current/168x168/${playerId}.jpg`\r\n\r\nconst profileImgUrl = playerId =>\r\n  `https://nhl.bamcontent.com/images/actionshots/${playerId}.jpg`\r\n\r\nconst convertSecsToMMSS = secs => {\r\n  const mins = Math.floor(secs / 60)\r\n  const remaining = secs - 60 * mins\r\n  return `${String(mins).padStart(2, '0')}:${String(remaining).padStart(\r\n    2,\r\n    '0'\r\n  )}`\r\n}\r\n\r\nconst playerBioData = {\r\n  primaryPosition: {\r\n    id: 'primaryPosition.description',\r\n    title: 'Position',\r\n  },\r\n  birthDate: {\r\n    id: 'birthDate',\r\n    title: 'Birthdate',\r\n  },\r\n  birthCity: {\r\n    id: 'birthCity',\r\n    title: 'Birth City',\r\n  },\r\n  birthState: {\r\n    id: 'birthStateProvince',\r\n    title: 'Birth State',\r\n  },\r\n  nationality: {\r\n    id: 'nationality',\r\n    title: 'Nationality',\r\n  },\r\n  team: {\r\n    id: 'currentTeam.name',\r\n    title: 'Team',\r\n  },\r\n}\r\n\r\nconst naviItems = {\r\n  players: {\r\n    exact: true,\r\n    to: '/',\r\n    name: 'players',\r\n  },\r\n  favorites: {\r\n    to: '/favorites',\r\n    name: 'favorites',\r\n    tokenRequired: true,\r\n  },\r\n  stats: {\r\n    to: '/stats',\r\n    name: 'stats',\r\n  },\r\n  standings: {\r\n    to: '/standings',\r\n    name: 'standings',\r\n  },\r\n  about: {\r\n    to: '/about',\r\n    name: 'about',\r\n  },\r\n  search: {\r\n    to: '/find-players',\r\n    name: 'search',\r\n    hideOnWide: true,\r\n  },\r\n  login: {\r\n    to: '/login',\r\n    name: 'login',\r\n    noToken: true,\r\n  },\r\n  signup: {\r\n    to: '/signup',\r\n    name: 'sign up',\r\n    noToken: true,\r\n  },\r\n  profile: {\r\n    to: '/profile',\r\n    name: 'profile',\r\n    tokenRequired: true,\r\n  },\r\n  logout: {\r\n    to: '',\r\n    name: 'log out',\r\n    bindTo: 'handleLogout',\r\n    tokenRequired: true,\r\n  },\r\n}\r\n\r\nconst statHeaders = {\r\n  assists: {\r\n    headerText: 'A',\r\n    id: 'assists',\r\n    title: 'Assists',\r\n  },\r\n  blocks: {\r\n    headerText: 'Blocks',\r\n    id: 'blocks',\r\n    title: 'Blocks',\r\n  },\r\n  faceOffsTaken: {\r\n    headerText: 'FOT',\r\n    id: 'faceOffsTaken',\r\n    title: 'Faceoffs Taken',\r\n  },\r\n  giveaways: {\r\n    headerText: 'GA',\r\n    id: 'giveaways',\r\n    title: 'Giveaways',\r\n  },\r\n  goals: {\r\n    headerText: 'G',\r\n    id: 'goals',\r\n    title: 'Goals',\r\n  },\r\n  hits: {\r\n    headerText: 'Hits',\r\n    id: 'hits',\r\n    title: 'Hits',\r\n  },\r\n  penaltyMinutes: {\r\n    headerText: 'PM',\r\n    id: 'penaltyMinutes',\r\n    title: 'Penalty Minutes',\r\n  },\r\n  plusMinus: {\r\n    headerText: '+/-',\r\n    id: 'plusMinus',\r\n    title: 'Plus/Minus',\r\n  },\r\n  points: {\r\n    headerText: 'P',\r\n    id: 'points',\r\n    title: 'Points',\r\n  },\r\n  powerPlayGoals: {\r\n    headerText: 'PPG',\r\n    id: 'powerPlayGoals',\r\n    title: 'Powerplay Goals',\r\n  },\r\n  powerPlayPoints: {\r\n    headerText: 'PPP',\r\n    id: 'powerPlaypoints',\r\n    title: 'Powerplay Points',\r\n  },\r\n  shortHandedGoals: {\r\n    headerText: 'SHG',\r\n    id: 'shortHandedGoals',\r\n    title: 'Shorthanded Goals',\r\n  },\r\n  shortHandedPoints: {\r\n    headerText: 'SHP',\r\n    id: 'shortHandedPoints',\r\n    title: 'Shorthanded Points',\r\n  },\r\n  shots: {\r\n    headerText: 'Shots',\r\n    id: 'shots',\r\n    title: 'Shots',\r\n  },\r\n  takeaways: {\r\n    headerText: 'TA',\r\n    id: 'takeaways',\r\n    title: 'Takeaways',\r\n  },\r\n  timeOnIcePerGame: {\r\n    headerText: 'T/GP',\r\n    id: 'timeOnIcePerGame',\r\n    title: 'Time on Ice per Game',\r\n  },\r\n}\r\n\r\nexport {\r\n  getCookie,\r\n  removeCookie,\r\n  setCookie,\r\n  cardImgUrl,\r\n  profileImgUrl,\r\n  convertSecsToMMSS,\r\n  naviItems,\r\n  statHeaders,\r\n  playerBioData,\r\n}\r\n","import { gql } from 'apollo-boost'\r\n\r\nconst PLAYER_DETAILS = gql`\r\n  fragment PlayerDetails on PlayerCard {\r\n    firstName\r\n    lastName\r\n    primaryNumber\r\n    playerId\r\n    id\r\n    numOfGamesId\r\n    siteLink\r\n    stats {\r\n      goals\r\n      assists\r\n      points\r\n      plusMinus\r\n      penaltyMinutes\r\n      timeOnIcePerGame\r\n      shots\r\n      powerPlayGoals\r\n      powerPlayPoints\r\n      shortHandedGoals\r\n      shortHandedPoints\r\n      faceOffsTaken\r\n      hits\r\n      blocked\r\n      giveaways\r\n      takeaways\r\n    }\r\n  }\r\n`\r\n\r\nconst BEST_PLAYERS = gql`\r\n  query getBestPlayers {\r\n    bestPlayers {\r\n      oneGame {\r\n        ...PlayerDetails\r\n      }\r\n      fiveGames {\r\n        ...PlayerDetails\r\n      }\r\n      tenGames {\r\n        ...PlayerDetails\r\n      }\r\n    }\r\n  }\r\n  ${PLAYER_DETAILS}\r\n`\r\n\r\nconst FAVORITE_PLAYERS = gql`\r\n  query getFavoritePlayers {\r\n    favoritePlayers {\r\n      oneGame {\r\n        ...PlayerDetails\r\n      }\r\n      fiveGames {\r\n        ...PlayerDetails\r\n      }\r\n      tenGames {\r\n        ...PlayerDetails\r\n      }\r\n    }\r\n  }\r\n  ${PLAYER_DETAILS}\r\n`\r\n\r\nconst PLAYER_PROFILE = gql`\r\n  query getPlayerProfile($siteLink: String!) {\r\n    findPlayer(siteLink: $siteLink) {\r\n      id\r\n      fullName\r\n      primaryNumber\r\n      birthDate\r\n      birthCity\r\n      birthStateProvince\r\n      nationality\r\n      height\r\n      weight\r\n      alternateCaptain\r\n      captain\r\n      rookie\r\n      shootsCatches\r\n      currentTeam {\r\n        name\r\n        abbreviation\r\n        locationName\r\n      }\r\n      primaryPosition {\r\n        code\r\n        description\r\n      }\r\n      playerId\r\n      boxscores {\r\n        id\r\n        assists\r\n        blocked\r\n        faceOffsTaken\r\n        faceOffWins\r\n        gameDate\r\n        gamePk\r\n        giveaways\r\n        goals\r\n        hits\r\n        penaltyMinutes\r\n        plusMinus\r\n        points\r\n        powerPlayAssists\r\n        powerPlayGoals\r\n        powerPlayTimeOnIce\r\n        shortHandedAssists\r\n        shortHandedGoals\r\n        shortHandedTimeOnIce\r\n        shotPct\r\n        shots\r\n        takeaways\r\n        timeOnIce\r\n        homeTeam {\r\n          abbreviation\r\n        }\r\n        awayTeam {\r\n          abbreviation\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst USER = gql`\r\n  query loggedUser {\r\n    me {\r\n      username\r\n      email\r\n      favoritePlayers\r\n    }\r\n  }\r\n`\r\n\r\nconst FIND_BY_NAME = gql`\r\n  query findByName($searchString: String!) {\r\n    findByName(searchString: $searchString) {\r\n      fullName\r\n      nationality\r\n      primaryNumber\r\n      id\r\n      playerId\r\n    }\r\n  }\r\n`\r\n\r\nconst CUMULATIVE_STATS = gql`\r\n  query GetCumulativeStats(\r\n    $offset: Int!\r\n    $sortBy: SortBy!\r\n    $sortDir: SortDir!\r\n  ) {\r\n    GetCumulativeStats(offset: $offset, sortBy: $sortBy, sortDir: $sortDir) {\r\n      id\r\n      fullName\r\n      siteLink\r\n      team\r\n      position\r\n      gamesPlayed\r\n      goals\r\n      assists\r\n      points\r\n      plusMinus\r\n      penaltyMinutes\r\n      pointsPerGame\r\n      gameWinningGoals\r\n      overTimeGoals\r\n      powerPlayGoals\r\n      powerPlayPoints\r\n      shortHandedGoals\r\n      shortHandedPoints\r\n      shots\r\n    }\r\n  }\r\n`\r\n\r\nconst STANDINGS = gql`\r\n  query getStandings {\r\n    Standings {\r\n      id\r\n      teamName\r\n      gamesPlayed\r\n      wins\r\n      losses\r\n      ties\r\n      otLosses\r\n      points\r\n      regPlusOtWins\r\n      pointPct\r\n      goalsFor\r\n      goalsAgainst\r\n      shootoutGamesWon\r\n      goalsForPerGame\r\n      goalsAgainstPerGame\r\n      ppPct\r\n      pkPct\r\n      shotsForPerGame\r\n      shotsAgainstPerGame\r\n      faceOffWinPct\r\n      conference {\r\n        name\r\n      }\r\n      division {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst PLAYER_MILESTONES = gql`\r\n  query getPlayerMilestones($playerId: Int!, $gamePks: [Int!]!) {\r\n    GetMilestones(playerId: $playerId, gamePks: $gamePks) {\r\n      gamePk\r\n      title\r\n      description\r\n      blurb\r\n      playback {\r\n        width\r\n        height\r\n        url\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  BEST_PLAYERS,\r\n  FAVORITE_PLAYERS,\r\n  USER,\r\n  FIND_BY_NAME,\r\n  CUMULATIVE_STATS,\r\n  STANDINGS,\r\n  PLAYER_PROFILE,\r\n  PLAYER_MILESTONES,\r\n}\r\n","import { gql } from 'apollo-boost'\r\n\r\nconst USER_DETAILS = gql`\r\n  fragment UserDetails on User {\r\n    id\r\n    username\r\n  }\r\n`\r\n\r\nconst CREATE_USER = gql`\r\n  mutation createUser($username: String!, $email: String!, $password: String!) {\r\n    createUser(username: $username, email: $email, password: $password) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst VERIFY_USER = gql`\r\n  mutation verifyUser($token: String!) {\r\n    verifyUser(token: $token) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n`\r\n\r\nconst CANCEL_USER = gql`\r\n  mutation cancelUser($token: String!) {\r\n    cancelUser(token: $token) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst LOGIN = gql`\r\n  mutation login($username: String!, $password: String!) {\r\n    login(username: $username, password: $password) {\r\n      value\r\n    }\r\n  }\r\n`\r\n\r\nconst FORGOT_PASSWORD = gql`\r\n  mutation forgotPassword($email: String!) {\r\n    forgotPassword(email: $email) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst SET_NEW_PASSWORD = gql`\r\n  mutation setNewPassword($token: String!, $password: String!) {\r\n    setNewPassword(token: $token, password: $password) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst CHANGE_PASSWORD = gql`\r\n  mutation changePassword($password: String!) {\r\n    changePassword(password: $password) {\r\n      ...UserDetails\r\n    }\r\n  }\r\n  ${USER_DETAILS}\r\n`\r\n\r\nconst FOLLOW_PLAYER = gql`\r\n  mutation followPlayer($id: String!, $followType: FollowType!) {\r\n    followPlayer(id: $id, followType: $followType) {\r\n      id\r\n      fullName\r\n    }\r\n  }\r\n`\r\n\r\nconst UNFOLLOW_PLAYER = gql`\r\n  mutation unfollowPlayer($id: String!, $followType: FollowType!) {\r\n    followPlayer(id: $id, followType: $followType) {\r\n      id\r\n      fullName\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  CREATE_USER,\r\n  VERIFY_USER,\r\n  CANCEL_USER,\r\n  LOGIN,\r\n  FORGOT_PASSWORD,\r\n  SET_NEW_PASSWORD,\r\n  CHANGE_PASSWORD,\r\n  FOLLOW_PLAYER,\r\n  UNFOLLOW_PLAYER,\r\n}\r\n","import React, { createContext } from 'react'\r\nimport { useQuery, useMutation } from 'react-apollo-hooks'\r\nimport { USER, BEST_PLAYERS, FAVORITE_PLAYERS } from '../graphql/queries'\r\nimport { FOLLOW_PLAYER, UNFOLLOW_PLAYER } from '../graphql/mutations'\r\n\r\nexport const PlayerContext = createContext()\r\n\r\nconst PlayerContextProvider = props => {\r\n  const bestPlayers = useQuery(BEST_PLAYERS)\r\n  const favoritePlayers = useQuery(FAVORITE_PLAYERS)\r\n\r\n  const followPlayer = useMutation(FOLLOW_PLAYER, {\r\n    refetchQueries: [{ query: FAVORITE_PLAYERS }],\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: USER })\r\n      dataInStore.me.favoritePlayers = dataInStore.me.favoritePlayers.concat(\r\n        response.data.followPlayer.id\r\n      )\r\n      store.writeQuery({ query: USER, data: dataInStore })\r\n    },\r\n  })\r\n\r\n  const unfollowPlayer = useMutation(UNFOLLOW_PLAYER, {\r\n    refetchQueries: [{ query: FAVORITE_PLAYERS }],\r\n    update: (store, response) => {\r\n      const dataInStore = store.readQuery({ query: USER })\r\n      dataInStore.me.favoritePlayers = dataInStore.me.favoritePlayers.filter(\r\n        id => id !== response.data.followPlayer.id\r\n      )\r\n      store.writeQuery({ query: USER, data: dataInStore })\r\n    },\r\n  })\r\n\r\n  return (\r\n    <PlayerContext.Provider\r\n      value={{ bestPlayers, favoritePlayers, followPlayer, unfollowPlayer }}\r\n    >\r\n      {props.children}\r\n    </PlayerContext.Provider>\r\n  )\r\n}\r\n\r\nexport default PlayerContextProvider\r\n","import React, { createContext, useState, useEffect, useContext } from 'react'\r\nimport { useApolloClient, useQuery } from 'react-apollo-hooks'\r\nimport { setCookie, getCookie, removeCookie } from '../utils'\r\nimport { USER } from '../graphql/queries'\r\nimport { PlayerContext } from './PlayerContext'\r\n\r\nexport const AuthContext = createContext()\r\n\r\nconst AuthContextProvider = props => {\r\n  const [token, setToken] = useState(null)\r\n  const { favoritePlayers } = useContext(PlayerContext)\r\n\r\n  const client = useApolloClient()\r\n  const user = useQuery(USER)\r\n\r\n  // login with cookie\r\n  useEffect(() => {\r\n    const tokenCookie = getCookie('user')\r\n    setToken(tokenCookie)\r\n  }, [])\r\n\r\n  // login user and query favorite players\r\n  const loginUser = async token => {\r\n    setToken(token)\r\n    setCookie('user', token)\r\n    user.refetch()\r\n    favoritePlayers.refetch()\r\n  }\r\n\r\n  const logoutUser = () => {\r\n    setToken(null)\r\n    removeCookie('user')\r\n    client.resetStore()\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        token,\r\n        setToken,\r\n        loginUser,\r\n        logoutUser,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default AuthContextProvider\r\n","export default {\r\n  showDesktopNavi: `(min-width: 1010px)`,\r\n  showSearchField: `(min-width: 1350px)`,\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styled, { css } from 'styled-components'\r\nimport colors from '../../styles/colors'\r\nimport breakpoints from '../../styles/breakpoints'\r\n\r\nconst activeNavHighlight = css`\r\n  content: '';\r\n  display: block;\r\n  height: 5px;\r\n  background-color: ${colors.blue1};\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  transform: scale(0, 1);\r\n`\r\n\r\nconst StyledNavListItem = styled.li`\r\n  text-transform: uppercase;\r\n  font-size: 1.25rem;\r\n  margin-bottom: 1rem;\r\n  margin-left: 1rem;\r\n  opacity: 0;\r\n  transition: opacity 150ms ease-in-out;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: ${props => (props.divider === 'true' ? 'absolute' : '')};\r\n    bottom: 1.875rem;\r\n    left: 0;\r\n    height: 5px;\r\n    width: 95%;\r\n    border-radius: 2px;\r\n    background-color: ${colors.grey2};\r\n  }\r\n\r\n  & span {\r\n    font-size: 1rem;\r\n  }\r\n\r\n  @media ${breakpoints.showDesktopNavi} {\r\n    opacity: 1;\r\n    margin: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n    border-left: 1px solid ${colors.grey2};\r\n    border-right: 1px solid ${colors.grey2};\r\n    margin: -1px 0 0 -1px; /* makes adjacent borders collapse */\r\n    position: relative;\r\n\r\n    &:hover {\r\n      background-color: ${colors.grey2};\r\n    }\r\n\r\n    &::before {\r\n      all: unset;\r\n      ${activeNavHighlight}\r\n    }\r\n\r\n    &:hover::before {\r\n      transform: scale(1, 1);\r\n      transition: transform ease-in-out 250ms;\r\n    }\r\n  }\r\n`\r\n\r\nconst NavListItemHideOnWide = styled(StyledNavListItem)`\r\n  @media ${breakpoints.showSearchField} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  @media ${breakpoints.showDesktopNavi} {\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0.75rem;\r\n\r\n    &::before {\r\n      ${activeNavHighlight}\r\n    }\r\n\r\n    &.active {\r\n      background-color: ${colors.grey2};\r\n\r\n      &::before {\r\n        transform: scale(1, 1);\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst NavListItem = ({ exact, to, name, username, hideOnWide, onClick }) => {\r\n  const linkProps = { exact, to }\r\n\r\n  const nameToShow = name !== 'profile' ? name : username\r\n\r\n  const showAlways = () => (\r\n    <StyledNavListItem onClick={onClick}>\r\n      <StyledNavLink {...linkProps}>{nameToShow}</StyledNavLink>\r\n    </StyledNavListItem>\r\n  )\r\n\r\n  const showNarrowScreen = () => (\r\n    <NavListItemHideOnWide>\r\n      <StyledNavLink {...linkProps}>{nameToShow}</StyledNavLink>\r\n    </NavListItemHideOnWide>\r\n  )\r\n\r\n  return hideOnWide ? showNarrowScreen() : showAlways()\r\n}\r\n\r\nexport default NavListItem\r\n","import React, { useContext } from 'react'\r\nimport styled from 'styled-components'\r\nimport NavListItem from './NavListItem'\r\nimport breakpoints from '../../styles/breakpoints'\r\nimport { AuthContext } from '../../contexts/AuthContext'\r\n\r\nconst Container = styled.nav`\r\n  @media ${breakpoints.showDesktopNavi} {\r\n    all: unset;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    ${props => props.right && 'margin-left: auto'}\r\n  }\r\n`\r\n\r\nconst StyledNavList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n\r\n  @media ${breakpoints.showDesktopNavi} {\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`\r\n\r\nconst NavList = ({ items, right }) => {\r\n  const { token, logoutUser, user } = useContext(AuthContext)\r\n\r\n  const functionMap = {\r\n    handleLogout: {\r\n      onClick: logoutUser,\r\n    },\r\n  }\r\n\r\n  let username\r\n\r\n  if (user.data.me) username = user.data.me.username\r\n\r\n  const showNavItem = item =>\r\n    (!(item.noToken && token) && !item.tokenRequired) ||\r\n    (item.tokenRequired && token)\r\n\r\n  const createItems = () => {\r\n    const navItems = items.map(\r\n      item =>\r\n        showNavItem(item) && (\r\n          <NavListItem\r\n            key={item.name}\r\n            {...item}\r\n            {...functionMap[item.bindTo]}\r\n            username={username}\r\n          />\r\n        )\r\n    )\r\n\r\n    return navItems\r\n  }\r\n\r\n  return (\r\n    <Container right={right}>\r\n      <StyledNavList>{createItems()}</StyledNavList>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NavList\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport colors from '../../styles/colors'\r\nimport icon from '../../assets/magnifying-glass-icon.svg'\r\n\r\nconst SearchContainer = styled.div`\r\n  margin: -1px 0 0 -1px; /* makes the borders collapse */\r\n  position: relative;\r\n  padding: 0 1rem;\r\n  height: 100%;\r\n  flex: none;\r\n  display: flex;\r\n  align-items: center;\r\n  border-left: 1px solid ${colors.grey2};\r\n  border-right: 1px solid ${colors.grey2};\r\n`\r\n\r\nconst Input = styled.input`\r\n  height: 40px;\r\n  width: 275px;\r\n  border-radius: 50px;\r\n  background-color: ${colors.grey4};\r\n  border: 3px solid ${colors.grey3};\r\n  color: ${colors.white1};\r\n  text-indent: 1rem;\r\n  padding-right: 40px;\r\n  font-family: 'Quicksand', Arial;\r\n  font-size: 1.25rem;\r\n  vertical-align: middle;\r\n  outline-width: 0px;\r\n  margin-right: 0.5rem;\r\n\r\n  &:focus {\r\n    border-color: ${colors.white1};\r\n    box-shadow: 0 0 5px ${colors.white1};\r\n  }\r\n`\r\n\r\nconst SearchIcon = styled.object`\r\n  position: absolute;\r\n  width: 24px;\r\n  top: 30%;\r\n  left: 66%;\r\n`\r\n\r\nconst RadioContainer = styled.div`\r\n  display: table;\r\n`\r\n\r\nconst RadioRow = styled.div`\r\n  display: table-row;\r\n\r\n  & .filter-cell {\r\n    display: table-cell;\r\n    vertical-align: middle;\r\n  }\r\n`\r\n\r\nconst SearchField = () => {\r\n  return (\r\n    <SearchContainer>\r\n      <Input />\r\n      <SearchIcon type=\"image/svg+xml\" data={icon}>\r\n        Test\r\n      </SearchIcon>\r\n      <RadioContainer>\r\n        <RadioRow>\r\n          <label className=\"filter-cell\" htmlFor=\"player-radio\">\r\n            Players\r\n          </label>\r\n          <input\r\n            className=\"filter-cell\"\r\n            id=\"player-radio\"\r\n            type=\"radio\"\r\n            name=\"type\"\r\n            value=\"players\"\r\n          />\r\n        </RadioRow>\r\n        <RadioRow>\r\n          <label className=\"filter-cell\" htmlFor=\"team-radio\">\r\n            Teams\r\n          </label>\r\n          <input\r\n            className=\"filter-cell\"\r\n            id=\"team-radio\"\r\n            type=\"radio\"\r\n            name=\"type\"\r\n            value=\"teams\"\r\n          />\r\n        </RadioRow>\r\n      </RadioContainer>\r\n    </SearchContainer>\r\n  )\r\n}\r\n\r\nexport default SearchField\r\n","import React from 'react'\r\nimport Media from 'react-media'\r\nimport styled from 'styled-components'\r\nimport NavList from './NavList'\r\nimport SearchField from './SearchField'\r\nimport breakpoints from '../../styles/breakpoints'\r\nimport colors from '../../styles/colors'\r\nimport { naviItems } from '../../utils/'\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  width: 100%;\r\n  background-color: ${colors.grey1};\r\n  transform: scale(1, 0);\r\n  transform-origin: top;\r\n  transition: transform 300ms ease-in-out;\r\n\r\n  @media ${breakpoints.showDesktopNavi} {\r\n    all: unset;\r\n    display: flex;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst mainNaviItems = [\r\n  'players',\r\n  'favorites',\r\n  'stats',\r\n  'standings',\r\n  'about',\r\n  'search',\r\n]\r\n\r\nconst userActionItems = ['login', 'signup', 'profile', 'logout']\r\n\r\nconst createNaviItems = items => items.map(item => naviItems[item])\r\n\r\nconst NavContainer = () => {\r\n  return (\r\n    <Container>\r\n      <NavList items={createNaviItems(mainNaviItems)} />\r\n      <Media query={breakpoints.showSearchField}>\r\n        {matches => matches && <SearchField />}\r\n      </Media>\r\n      <NavList items={createNaviItems(userActionItems)} right />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NavContainer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport breakpoints from '../../styles/breakpoints'\r\nimport colors from '../../styles/colors'\r\n\r\nconst ToggleCheckbox = styled.input`\r\n  display: none;\r\n\r\n  &:checked ~ div {\r\n    transform: scale(1, 1);\r\n  }\r\n\r\n  &:checked ~ div nav li {\r\n    opacity: 1;\r\n    transition: opacity 250ms ease-in-out 250ms;\r\n  }\r\n`\r\n\r\nconst ToggleLabel = styled.label`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  margin-left: 1em;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & span,\r\n  span::before,\r\n  span::after {\r\n    display: block;\r\n    width: 2em;\r\n    background: ${colors.white1};\r\n    height: 2px;\r\n    border-radius: 2px;\r\n    position: relative;\r\n  }\r\n\r\n  & span::before,\r\n  span::after {\r\n    content: '';\r\n    position: absolute;\r\n  }\r\n\r\n  & span::before {\r\n    bottom: 7px;\r\n  }\r\n\r\n  & span::after {\r\n    top: 7px;\r\n  }\r\n\r\n  @media ${breakpoints.showDesktopNavi} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst HamburgerToggle = () => {\r\n  return (\r\n    <>\r\n      <ToggleLabel htmlFor=\"toggle-checkbox\">\r\n        <span />\r\n      </ToggleLabel>\r\n      <ToggleCheckbox type=\"checkbox\" id=\"toggle-checkbox\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HamburgerToggle\r\n","const variables = {\r\n  navHeight: 60,\r\n}\r\n\r\nvariables.topMarginWithNav = variables.navHeight + 16\r\n\r\nexport default variables\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport NavContainer from './NavContainer'\r\nimport HamburgerToggle from './HamburgerToggle'\r\nimport colors from '../../styles/colors'\r\nimport variables from '../../styles/variables'\r\nimport breakpoints from '../../styles/breakpoints'\r\n\r\nconst Container = styled.header`\r\n  background-color: ${colors.grey1};\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 999;\r\n  width: 100%;\r\n  height: ${variables.navHeight}px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media ${breakpoints.showDesktopNavi} {\r\n    justify-content: flex-start;\r\n    align-items: stretch;\r\n    border-bottom: 2px solid ${colors.grey2};\r\n    border-top: 2px solid ${colors.grey2};\r\n  }\r\n`\r\n\r\nconst Logo = styled.div`\r\n  flex: none;\r\n  font-size: 1.5rem;\r\n  padding-left: 1em;\r\n  text-transform: uppercase;\r\n\r\n  @media ${breakpoints.showDesktopNavi} {\r\n    padding: 0 1em;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-content: center;\r\n  }\r\n`\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Container>\r\n      <Logo>Player Follower</Logo>\r\n      <HamburgerToggle />\r\n      <NavContainer />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Navigation\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport colors from '../../styles/colors'\r\nimport { NotificationContext } from '../../contexts/NotificationContext'\r\nimport { AuthContext } from '../../contexts/AuthContext'\r\nimport { PlayerContext } from '../../contexts/PlayerContext'\r\nimport { statHeaders, cardImgUrl } from '../../utils'\r\nimport starDisabled from '../../assets/star-disable.svg'\r\nimport starEnabled from '../../assets/star-enable.svg'\r\n\r\nconst SPlayerCardFrontContainer = styled.div`\r\n  border-radius: 10px;\r\n  position: relative;\r\n`\r\n\r\nconst PlayerImg = styled.img`\r\n  width: 168px;\r\n  height: 168px;\r\n  border-radius: 50%;\r\n  display: block;\r\n  margin: auto;\r\n`\r\n\r\nconst ImgOverlay = styled.div`\r\n  position: absolute;\r\n  width: 168px;\r\n  height: 168px;\r\n  background-color: rgba(0, 0, 0, 0.15);\r\n  border-radius: 50%;\r\n  left: 40px;\r\n  top: 0px;\r\n`\r\n\r\nconst FavImg = styled.img`\r\n  position: absolute;\r\n  width: 24px;\r\n  height: 24px;\r\n  left: 15px;\r\n  top: 10px;\r\n`\r\n\r\nconst SPlayerName = styled.div`\r\n  border-bottom: 3px solid ${colors.grey2};\r\n  padding-bottom: 2px;\r\n  margin: 0 auto;\r\n\r\n  & > p:first-child {\r\n    display: inline-block;\r\n    width: 25%;\r\n    text-align: right;\r\n    vertical-align: middle;\r\n    margin: 0;\r\n    padding-right: 10px;\r\n    font-size: 1.5rem;\r\n\r\n    & > span {\r\n      color: ${colors.grey1};\r\n    }\r\n  }\r\n\r\n  & > p:last-child {\r\n    display: inline-block;\r\n    width: 25%;\r\n    vertical-align: middle;\r\n    margin: 0;\r\n    padding-left: 10px;\r\n    font-size: 1.5rem;\r\n\r\n    & > span {\r\n      color: ${colors.grey1};\r\n    }\r\n  }\r\n\r\n  & > div {\r\n    display: inline-block;\r\n    width: 50%;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n    border-left: 2px solid ${colors.grey2};\r\n    border-right: 2px solid ${colors.grey2};\r\n\r\n    & p {\r\n      margin: 0;\r\n      font-size: ${props => (props.reduceFont ? '1rem' : '1.375rem')};\r\n    }\r\n  }\r\n`\r\n\r\nconst SPlayerStatsContainer = styled.div`\r\n  margin: auto;\r\n  padding: 3px 18px;\r\n  font-size: 1.125rem;\r\n  text-shadow: 1px 1px ${colors.grey2};\r\n  border-bottom: ${props => (props.border ? '3px' : '0px')} solid\r\n    ${colors.grey2};\r\n\r\n  & div {\r\n    display: inline-block;\r\n    margin: auto;\r\n  }\r\n\r\n  & > div {\r\n    width: ${props => props.width};\r\n\r\n    & div {\r\n      width: 50%;\r\n    }\r\n\r\n    & div:first-child {\r\n      text-align: right;\r\n      padding-right: 5px;\r\n    }\r\n\r\n    & div:last-child {\r\n      padding-left: 5px;\r\n    }\r\n  }\r\n`\r\n\r\nconst idInArray = (array, id) => array.some(pid => pid === id)\r\n\r\nconst PlayerCardFront = ({ player }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { followPlayer, unfollowPlayer } = useContext(PlayerContext)\r\n  const { token, user } = useContext(AuthContext)\r\n\r\n  const handleFollow = async () => {\r\n    try {\r\n      const followedPlayer = await followPlayer({\r\n        variables: { id: player.id, followType: 'FOLLOW' },\r\n      })\r\n      if (followedPlayer.data.followPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You started following ${followedPlayer.data.followPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const handleUnfollow = async () => {\r\n    try {\r\n      const id = await unfollowPlayer({\r\n        variables: { id: player.id, followType: 'UNFOLLOW' },\r\n      })\r\n      if (id.data.unfollowPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You unfollowed ${id.data.unfollowPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const longName = player.lastName.length > 9 || player.lastName.length > 9\r\n\r\n  return (\r\n    <SPlayerCardFrontContainer>\r\n      <PlayerImg img src={cardImgUrl(player.playerId)} alt=\"player profile\" />\r\n      <ImgOverlay />\r\n      <SPlayerName reduceFont={longName}>\r\n        <p>\r\n          <span>#</span>\r\n          {player.primaryNumber}\r\n        </p>\r\n        <div>\r\n          <p>\r\n            <Link to={`/players/${player.siteLink}`}>\r\n              {player.firstName}\r\n              <br />\r\n              {player.lastName}\r\n            </Link>\r\n          </p>\r\n        </div>\r\n        <p>\r\n          <span>#</span>\r\n          {player.primaryNumber}\r\n        </p>\r\n      </SPlayerName>\r\n      <div>\r\n        <SPlayerStatsContainer width=\"33%\">\r\n          <div>\r\n            <div title={statHeaders.goals.title}>\r\n              {statHeaders.goals.headerText}\r\n            </div>\r\n            <div>{player.stats.goals}</div>\r\n          </div>\r\n          <div>\r\n            <div title={statHeaders.assists.title}>\r\n              {statHeaders.assists.headerText}\r\n            </div>\r\n            <div>{player.stats.assists}</div>\r\n          </div>\r\n          <div>\r\n            <div title={statHeaders.points.title}>\r\n              {statHeaders.points.headerText}\r\n            </div>\r\n            <div>{player.stats.points}</div>\r\n          </div>\r\n        </SPlayerStatsContainer>\r\n        <SPlayerStatsContainer width=\"50%\" border>\r\n          <div>\r\n            <div title={statHeaders.penaltyMinutes.title}>\r\n              {statHeaders.penaltyMinutes.headerText}\r\n            </div>\r\n            <div>{player.stats.penaltyMinutes}</div>\r\n          </div>\r\n          <div>\r\n            <div title={statHeaders.plusMinus.title}>\r\n              {statHeaders.plusMinus.headerText}\r\n            </div>\r\n            <div>{player.stats.plusMinus}</div>\r\n          </div>\r\n        </SPlayerStatsContainer>\r\n      </div>\r\n      {token && user.data.me && (\r\n        <>\r\n          {!idInArray(user.data.me.favoritePlayers, player.id) && (\r\n            <FavImg src={starDisabled} onClick={handleFollow} />\r\n          )}\r\n          {idInArray(user.data.me.favoritePlayers, player.id) && (\r\n            <FavImg src={starEnabled} onClick={handleUnfollow} />\r\n          )}\r\n        </>\r\n      )}\r\n    </SPlayerCardFrontContainer>\r\n  )\r\n}\r\n\r\nexport default PlayerCardFront\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport colors from '../../styles/colors'\r\n\r\nconst SPlayerCard = styled.div`\r\n  position: relative;\r\n  width: 250px;\r\n  height: 310px;\r\n  border: 1px solid ${colors.grey2};\r\n  border-radius: 10px;\r\n  background: ${colors.grey4};\r\n  box-shadow: 1px 1px 3px 2px rgba(0, 0, 0, 0.15);\r\n  padding: 5px 0px;\r\n  margin: 0 auto;\r\n  margin-bottom: 16px;\r\n  overflow: hidden;\r\n\r\n  & a:hover {\r\n    font-weight: bolder;\r\n  }\r\n`\r\n\r\nconst FlipDiv = styled.div`\r\n  position: absolute;\r\n  background-color: ${colors.red1};\r\n  padding: 4px 25px;\r\n  padding-bottom: 10px;\r\n  transform: rotate(-45deg);\r\n  left: 198px;\r\n  bottom: -5px;\r\n`\r\n\r\nconst PlayerCard = props => {\r\n  const [showFront, setShowFront] = useState(true)\r\n\r\n  return (\r\n    <SPlayerCard>\r\n      {showFront ? props.children[0] : props.children[1]}\r\n      <FlipDiv onClick={() => setShowFront(!showFront)}>Flip</FlipDiv>\r\n    </SPlayerCard>\r\n  )\r\n}\r\n\r\nexport default PlayerCard\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { statHeaders, convertSecsToMMSS } from '../../utils'\r\nimport styled from 'styled-components'\r\nimport colors from '../../styles/colors'\r\n\r\nconst NameBar = styled.div`\r\n  background-color: ${colors.blue1};\r\n  position: absolute;\r\n  width: 250px;\r\n  text-align: center;\r\n  padding: 8px;\r\n  top: 0px;\r\n  font-size: 1.375rem;\r\n  text-shadow: 1px 1px ${colors.grey2};\r\n`\r\n\r\nconst StatRow = styled.div`\r\n  margin-top: ${props => (props.first ? '40px' : '0px')};\r\n  border-bottom: ${props => (props.last ? '3px' : '0px')} solid ${colors.grey2};\r\n  text-shadow: 1px 1px ${colors.grey2};\r\n`\r\n\r\nconst StatItem = styled.div`\r\n  display: inline-block;\r\n  width: 50%;\r\n  padding: 5px 10px;\r\n  border-right: ${props => (props.rightBorder ? '2px' : '0px')} solid\r\n    ${colors.grey2};\r\n\r\n  & p {\r\n    width: 50%;\r\n    display: inline-block;\r\n    font-size: 1.125rem;\r\n    margin: 0;\r\n  }\r\n\r\n  & p:first-child {\r\n    padding-right: 5px;\r\n    text-align: ${props => (props.descRight ? 'center' : 'left')};\r\n  }\r\n\r\n  & p:last-child {\r\n    padding-left: 5px;\r\n    text-align: ${props => (props.descRight ? 'right' : 'center')};\r\n  }\r\n`\r\n\r\nconst PlayerCardBack = ({ player }) => {\r\n  return (\r\n    <div>\r\n      <NameBar>\r\n        <Link to={`/players/${player.siteLink}`}>\r\n          {player.firstName + ' ' + player.lastName}\r\n        </Link>\r\n      </NameBar>\r\n      <StatRow first>\r\n        <StatItem rightBorder descRight>\r\n          <p>{player.stats.powerPlayGoals}</p>\r\n          <p title={statHeaders.powerPlayGoals.title}>\r\n            {statHeaders.powerPlayGoals.headerText}\r\n          </p>\r\n        </StatItem>\r\n        <StatItem>\r\n          <p title={statHeaders.powerPlayPoints.title}>\r\n            {statHeaders.powerPlayPoints.headerText}\r\n          </p>\r\n          <p>{player.stats.powerPlayPoints}</p>\r\n        </StatItem>\r\n      </StatRow>\r\n      <StatRow>\r\n        <StatItem rightBorder descRight>\r\n          <p>{player.stats.shortHandedGoals}</p>\r\n          <p title={statHeaders.shortHandedGoals.title}>\r\n            {statHeaders.shortHandedGoals.headerText}\r\n          </p>\r\n        </StatItem>\r\n        <StatItem>\r\n          <p title={statHeaders.shortHandedPoints.title}>\r\n            {statHeaders.shortHandedPoints.headerText}\r\n          </p>\r\n          <p>{player.stats.shortHandedPoints}</p>\r\n        </StatItem>\r\n      </StatRow>\r\n      <StatRow>\r\n        <StatItem rightBorder descRight>\r\n          <p>{convertSecsToMMSS(player.stats.timeOnIcePerGame)}</p>\r\n          <p title={statHeaders.timeOnIcePerGame.title}>\r\n            {statHeaders.timeOnIcePerGame.headerText}\r\n          </p>\r\n        </StatItem>\r\n        <StatItem>\r\n          <p title={statHeaders.faceOffsTaken.title}>\r\n            {statHeaders.faceOffsTaken.headerText}\r\n          </p>\r\n          <p>{player.stats.faceOffsTaken}</p>\r\n        </StatItem>\r\n      </StatRow>\r\n      <StatRow>\r\n        <StatItem rightBorder descRight>\r\n          <p>{player.stats.shots}</p>\r\n          <p title={statHeaders.shots.title}>{statHeaders.shots.headerText}</p>\r\n        </StatItem>\r\n        <StatItem>\r\n          <p title={statHeaders.hits.title}>{statHeaders.hits.headerText}</p>\r\n          <p>{player.stats.hits}</p>\r\n        </StatItem>\r\n      </StatRow>\r\n      <StatRow>\r\n        <StatItem rightBorder descRight>\r\n          <p>{player.stats.takeaways}</p>\r\n          <p title={statHeaders.takeaways.title}>\r\n            {statHeaders.takeaways.headerText}\r\n          </p>\r\n        </StatItem>\r\n        <StatItem>\r\n          <p title={statHeaders.giveaways.title}>\r\n            {statHeaders.giveaways.headerText}\r\n          </p>\r\n          <p>{player.stats.giveaways}</p>\r\n        </StatItem>\r\n      </StatRow>\r\n      <StatRow last>\r\n        <StatItem rightBorder descRight>\r\n          <p>{player.stats.blocked}</p>\r\n          <p title={statHeaders.blocks.title}>\r\n            {statHeaders.blocks.headerText}\r\n          </p>\r\n        </StatItem>\r\n      </StatRow>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerCardBack\r\n","import React, { useContext, useState } from 'react'\r\nimport { Loader } from 'semantic-ui-react'\r\nimport PlayerCardFront from './PlayerCardFront'\r\nimport { NotificationContext } from '../../contexts/NotificationContext'\r\nimport PlayerCard from './PlayerCard'\r\nimport PlayerCardBack from './PlayerCardBack'\r\nimport styled from 'styled-components'\r\nimport colors from '../../styles/colors'\r\n\r\nconst Container = styled.div`\r\n  background: ${colors.grey2};\r\n  padding: 1px 10px;\r\n  border-radius: 10px;\r\n\r\n  .view-selector {\r\n    text-align: center;\r\n    margin: 5px auto;\r\n\r\n    & span {\r\n      padding: 0 10px;\r\n      border-right: 2px solid ${colors.grey4};\r\n      font-size: 5vw;\r\n      @media (min-width: 470px) {\r\n        font-size: 1.5rem;\r\n      }\r\n      &:hover {\r\n        font-weight: bolder;\r\n      }\r\n    }\r\n\r\n    & span:last-child {\r\n      border-right: 0px;\r\n    }\r\n  }\r\n\r\n  .card-container {\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\r\n    grid-gap: 20px;\r\n  }\r\n`\r\n\r\nconst ViewSelectorItem = styled.span`\r\n  cursor: pointer;\r\n`\r\n\r\nconst PlayerCardContainer = ({ query, header }) => {\r\n  const [currentView, setCurrentView] = useState('Last game')\r\n  const { setNotification } = useContext(NotificationContext)\r\n\r\n  if (query.loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const { oneGame, fiveGames, tenGames } =\r\n    query.data.bestPlayers || query.data.favoritePlayers\r\n\r\n  const createRow = playerResults => {\r\n    if (!playerResults.length) return <div>No results</div>\r\n\r\n    return playerResults.map(player => (\r\n      <PlayerCard key={player.playerId}>\r\n        <PlayerCardFront player={player} setNotification={setNotification} />\r\n        <PlayerCardBack key={player.playerId} player={player} />\r\n      </PlayerCard>\r\n    ))\r\n  }\r\n\r\n  const playersToShow =\r\n    currentView === 'Last game'\r\n      ? oneGame\r\n      : currentView === 'Five games'\r\n      ? fiveGames\r\n      : tenGames\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h2>{header}</h2>\r\n        <div className=\"view-selector\">\r\n          <ViewSelectorItem onClick={() => setCurrentView('Last game')}>\r\n            Last game\r\n          </ViewSelectorItem>\r\n          <ViewSelectorItem onClick={() => setCurrentView('Five games')}>\r\n            5 games\r\n          </ViewSelectorItem>\r\n          <ViewSelectorItem onClick={() => setCurrentView('Ten games')}>\r\n            10 games\r\n          </ViewSelectorItem>\r\n        </div>\r\n        <div className=\"card-container\">{createRow(playersToShow)}</div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlayerCardContainer\r\n","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (!notification) return null\r\n\r\n  const typeSelector = {\r\n    positive: { positive: true },\r\n    negative: { negative: true },\r\n    info: { info: true },\r\n    warning: { warning: true },\r\n  }\r\n\r\n  const type = typeSelector[notification.type]\r\n\r\n  return (\r\n    <Message {...type}>\r\n      <Message.Content>{`${notification.message}`}</Message.Content>\r\n    </Message>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../../hooks'\r\nimport { LOGIN } from '../../graphql/mutations'\r\nimport { NotificationContext } from '../../contexts/NotificationContext'\r\nimport { AuthContext } from '../../contexts/AuthContext'\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin: 0 auto;\r\n`\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { loginUser } = useContext(AuthContext)\r\n  const [username, resetUsername] = useField('username', 'text')\r\n  const [password, resetPassword] = useField('password', 'password')\r\n\r\n  const login = useMutation(LOGIN)\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const token = await login({\r\n        variables: {\r\n          username: username.value,\r\n          password: password.value,\r\n        },\r\n      })\r\n      setNotification('positive', `${username.value} successfully logged in.`)\r\n      resetUsername()\r\n      resetPassword()\r\n      loginUser(token.data.login.value)\r\n      history.push('/')\r\n    } catch (exception) {\r\n      handleException(exception)\r\n      resetPassword()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Form onSubmit={handleLogin}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input placeholder=\"username or email\" {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Log in\r\n        </Button>\r\n      </Form>\r\n      <Link to=\"/forgot-password\" name=\"I forgot my password\">\r\n        I forgot my password\r\n      </Link>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../../hooks'\r\nimport { CREATE_USER } from '../../graphql/mutations'\r\nimport { NotificationContext } from '../../contexts/NotificationContext'\r\n\r\nconst SignupForm = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [username, resetUsername] = useField('username', 'text')\r\n  const [email, resetEmail] = useField('password', 'text')\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n\r\n  const createUser = useMutation(CREATE_USER)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const signup = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await createUser({\r\n        variables: {\r\n          username: username.value,\r\n          email: email.value,\r\n          password: password.value,\r\n        },\r\n      })\r\n    } catch (exception) {\r\n      handleException(exception)\r\n      return\r\n    }\r\n\r\n    setNotification(\r\n      'positive',\r\n      `An account for ${\r\n        username.value\r\n      } has been created. Before logging in, you must activate your account by clicking the activation link sent to ${\r\n        email.value\r\n      }.`\r\n    )\r\n    resetUsername()\r\n    resetEmail()\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={signup}>\r\n        <Form.Field>\r\n          <label>Username</label>\r\n          <input placeholder=\"username\" {...username} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input placeholder=\"email\" {...email} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm password</label>\r\n          <input placeholder=\"password\" {...confirmPassword} />\r\n          {!passwordsMatch && (\r\n            <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n          )}\r\n\r\n          <span />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Sign Up\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignupForm\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { VERIFY_USER, CANCEL_USER } from '../../graphql/mutations'\r\nimport { Button, Segment, Header } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../../contexts/NotificationContext'\r\n\r\nconst Confirmation = ({ history, token }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const verifyUser = useMutation(VERIFY_USER, { variables: { token } })\r\n  const cancelUser = useMutation(CANCEL_USER, { variables: { token } })\r\n\r\n  const handleVerify = async () => {\r\n    try {\r\n      await verifyUser()\r\n      setNotification(\r\n        'positive',\r\n        'Your account has been activated. You may now log in.'\r\n      )\r\n    } catch ({ message }) {\r\n      setNotification('negative', `${message}`)\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  const handleCancel = async () => {\r\n    try {\r\n      await cancelUser()\r\n      setNotification(\r\n        'warning',\r\n        'Your account has been cancelled and all the information has been deleted from the database.'\r\n      )\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <Segment>\r\n      <Header>Activate your user account</Header>\r\n      <Button primary={true} onClick={handleVerify}>\r\n        OK\r\n      </Button>\r\n      <Button onClick={handleCancel}>Cancel</Button>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default Confirmation\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return <p>Footer</p>\r\n}\r\n\r\nexport default Footer\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { useField } from '../../hooks'\r\nimport { FORGOT_PASSWORD } from '../../graphql/mutations'\r\nimport { NotificationContext } from '../../contexts/NotificationContext'\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [email, resetEmail] = useField('email', 'text')\r\n  const forgotPassword = useMutation(FORGOT_PASSWORD)\r\n\r\n  const handleForgotPassword = async () => {\r\n    try {\r\n      await forgotPassword({\r\n        variables: {\r\n          email: email.value,\r\n        },\r\n      })\r\n      setNotification(\r\n        'positive',\r\n        `The password reset link has been set to ${\r\n          email.value\r\n        }. Please click the link to change your password.`\r\n      )\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetEmail()\r\n    history.push('/')\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleForgotPassword}>\r\n        <Form.Field>\r\n          <label>Email</label>\r\n          <input placeholder=\"email\" {...email} />\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { useContext } from 'react'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { useField } from '../../hooks'\r\nimport { SET_NEW_PASSWORD } from '../../graphql/mutations'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport { NotificationContext } from '../../contexts/NotificationContext'\r\n\r\nconst SetNewPassword = ({ history, token }) => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n  const setNewPassword = useMutation(SET_NEW_PASSWORD)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const handleSetNewPassword = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await setNewPassword({ variables: { token, password: password.value } })\r\n      setNotification(\r\n        'positive',\r\n        'Your password has been changed. You may now log in with the new password.'\r\n      )\r\n      history.push('/')\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={handleSetNewPassword}>\r\n        <Form.Field>\r\n          <label>Password</label>\r\n          <input placeholder=\"password\" {...password} />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <label>Confirm password</label>\r\n          <input placeholder=\"password\" {...confirmPassword} />\r\n          {!passwordsMatch && (\r\n            <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n          )}\r\n        </Form.Field>\r\n        <Button type=\"submit\" primary={true}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SetNewPassword\r\n","import React, { useState, useContext } from 'react'\r\nimport { useField } from '../../hooks'\r\nimport { useMutation } from 'react-apollo-hooks'\r\nimport { Table, Button, Form } from 'semantic-ui-react'\r\nimport { CHANGE_PASSWORD } from '../../graphql/mutations'\r\nimport { NotificationContext } from '../../contexts/NotificationContext'\r\nimport { AuthContext } from '../../contexts/AuthContext'\r\n\r\nconst UserProfile = () => {\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const { user } = useContext(AuthContext)\r\n  const [show, setShow] = useState(false)\r\n  const [password, resetPassword] = useField('password', 'password')\r\n  const [confirmPassword, resetConfirmPassword] = useField(\r\n    'confirmpassword',\r\n    'password'\r\n  )\r\n\r\n  const changePassword = useMutation(CHANGE_PASSWORD)\r\n\r\n  const passwordsMatch = !confirmPassword.value\r\n    ? true\r\n    : password.value === confirmPassword.value\r\n\r\n  const closeForm = () => {\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n    setShow(false)\r\n  }\r\n\r\n  const handlePasswordChange = async () => {\r\n    if (!passwordsMatch) {\r\n      setNotification('negative', 'The passwords do not match!')\r\n      resetPassword()\r\n      resetConfirmPassword()\r\n      return\r\n    }\r\n\r\n    try {\r\n      await changePassword({ variables: { password: password.value } })\r\n      setNotification('positive', 'Your password has been changed.')\r\n      setShow(false)\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n    resetPassword()\r\n    resetConfirmPassword()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table definition>\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>Username</Table.Cell>\r\n            <Table.Cell>{user.data.me && user.data.me.username}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Email</Table.Cell>\r\n            <Table.Cell>{user.data.me && user.data.me.email}</Table.Cell>\r\n          </Table.Row>\r\n          <Table.Row>\r\n            <Table.Cell>Password</Table.Cell>\r\n            <Table.Cell>\r\n              <Button onClick={() => setShow(true)}>Change password</Button>\r\n            </Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n      {show && (\r\n        <Form onSubmit={handlePasswordChange}>\r\n          <Form.Field>\r\n            <label>New password</label>\r\n            <input {...password} />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <label>Confirm new password</label>\r\n            <input {...confirmPassword} />\r\n            {!passwordsMatch && (\r\n              <span style={{ color: 'red' }}>Passwords do not match!</span>\r\n            )}\r\n          </Form.Field>\r\n          <Button primary type=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button onClick={closeForm}>Cancel</Button>\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n","import React, { useState, useContext } from 'react'\r\nimport { useApolloClient } from 'react-apollo-hooks'\r\nimport { Header, Input, Loader, Table, Button } from 'semantic-ui-react'\r\nimport _ from 'lodash'\r\nimport { AuthContext } from '../../contexts/AuthContext'\r\nimport { FIND_BY_NAME } from '../../graphql/queries'\r\nimport { PlayerContext } from '../../contexts/PlayerContext'\r\nimport { NotificationContext } from '../../contexts/NotificationContext'\r\n\r\nconst FindPlayers = () => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [results, setResults] = useState([])\r\n  const { user } = useContext(AuthContext)\r\n  const { followPlayer } = useContext(PlayerContext)\r\n  const { setNotification, handleException } = useContext(NotificationContext)\r\n  const client = useApolloClient()\r\n\r\n  const handleSearchChange = async (e, { value }) => {\r\n    if (!value) return setResults([])\r\n    setIsLoading(true)\r\n    const foundPlayers = await client.query({\r\n      query: FIND_BY_NAME,\r\n      variables: {\r\n        searchString: value,\r\n      },\r\n    })\r\n    setIsLoading(false)\r\n    setResults(foundPlayers.data.findByName)\r\n  }\r\n\r\n  const handleFollow = async player => {\r\n    try {\r\n      const followedPlayer = await followPlayer({\r\n        variables: { id: player.id, followType: 'FOLLOW' },\r\n      })\r\n      if (followedPlayer.data.followPlayer) {\r\n        setNotification(\r\n          'positive',\r\n          `You started following ${followedPlayer.data.followPlayer.fullName}.`\r\n        )\r\n      }\r\n    } catch (exception) {\r\n      handleException(exception)\r\n    }\r\n  }\r\n\r\n  const showResults = () => !isLoading && results.length > 0\r\n\r\n  return (\r\n    <div>\r\n      <Header>Find Players</Header>\r\n      <Input\r\n        placeholder=\"Search...\"\r\n        onChange={_.debounce(handleSearchChange, 500)}\r\n      />\r\n      {isLoading && <Loader active inline=\"centered\" />}\r\n      {showResults() && (\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Name</Table.HeaderCell>\r\n              <Table.HeaderCell>#</Table.HeaderCell>\r\n              <Table.HeaderCell>Nationality</Table.HeaderCell>\r\n              <Table.HeaderCell />\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {results.map(player => (\r\n              <Table.Row key={player.playerId}>\r\n                <Table.Cell>{player.fullName}</Table.Cell>\r\n                <Table.Cell>{player.primaryNumber}</Table.Cell>\r\n                <Table.Cell>{player.nationality}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Button\r\n                    primary={\r\n                      user.data.me.favoritePlayers.find(id => id === player.id)\r\n                        ? false\r\n                        : true\r\n                    }\r\n                    disabled={\r\n                      user.data.me.favoritePlayers.find(id => id === player.id)\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    size=\"tiny\"\r\n                    content={'Follow'}\r\n                    onClick={() => handleFollow(player)}\r\n                  />\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            ))}\r\n          </Table.Body>\r\n        </Table>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FindPlayers\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport colors from '../styles/colors'\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n`\r\n\r\nconst TableTitle = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 5px;\r\n  font-weight: bolder;\r\n`\r\n\r\nconst TableHead = styled.thead``\r\n\r\nconst TableBody = styled.tbody``\r\n\r\nconst TableRow = styled.tr`\r\n  cursor: pointer;\r\n`\r\n\r\nconst cellStyling = css`\r\n  border: 2px solid ${colors.grey3};\r\n  text-align: center;\r\n  padding: 5px;\r\n  font-size: 0.75rem;\r\n`\r\n\r\nconst TableCell = styled.td`\r\n  ${cellStyling}\r\n`\r\n\r\nconst HeaderCell = styled.th`\r\n  ${cellStyling}\r\n  background-color: ${colors.grey2};\r\n  font-size: 0.875rem;\r\n`\r\n\r\nconst StatsTable = ({\r\n  headers,\r\n  title,\r\n  data,\r\n  sortVariables,\r\n  setSortVariables,\r\n  handleRowClick,\r\n}) => {\r\n  const handleNewVariables = sortBy => {\r\n    // cant sort by these fields atm because of\r\n    // how aggregation is done in the backend\r\n    if (\r\n      sortBy === 'PLAYER' ||\r\n      sortBy === 'TEAM' ||\r\n      sortBy === 'POSITION' ||\r\n      !sortBy\r\n    )\r\n      return\r\n\r\n    if (sortBy === sortVariables.sortBy) {\r\n      sortVariables.sortDir === 'DESC'\r\n        ? setSortVariables({ offset: 0, sortBy, sortDir: 'ASC' })\r\n        : setSortVariables({ offset: 0, sortBy, sortDir: 'DESC' })\r\n    } else {\r\n      setSortVariables({ offset: 0, sortBy, sortDir: 'DESC' })\r\n    }\r\n  }\r\n\r\n  const handleClick = item => {\r\n    return handleRowClick ? handleRowClick(item) : false\r\n  }\r\n\r\n  const createHeaders = () => (\r\n    <tr>\r\n      {headers.map(header => (\r\n        <HeaderCell\r\n          key={header.headerText}\r\n          onClick={() => handleNewVariables(header.sortString)}\r\n        >\r\n          {header.headerText}\r\n        </HeaderCell>\r\n      ))}\r\n    </tr>\r\n  )\r\n\r\n  const createCells = () =>\r\n    data.map(item => (\r\n      <TableRow key={item.id} onClick={() => handleClick(item)}>\r\n        {headers.map(stat => {\r\n          return <TableCell key={stat.id}>{item[stat.id]}</TableCell>\r\n        })}\r\n      </TableRow>\r\n    ))\r\n\r\n  return (\r\n    <Container>\r\n      <TableTitle>{title}</TableTitle>\r\n      <Table>\r\n        <TableHead>{createHeaders()}</TableHead>\r\n        <TableBody>{createCells()}</TableBody>\r\n      </Table>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default StatsTable\r\n","import React, { useState } from 'react'\r\nimport { useQuery } from 'react-apollo-hooks'\r\nimport { Link } from 'react-router-dom'\r\nimport { Loader, Button } from 'semantic-ui-react'\r\nimport { CUMULATIVE_STATS } from '../../graphql/queries'\r\nimport StatsTable from '../StatsTable'\r\n\r\nconst headers = [\r\n  { headerText: 'Player', id: 'fullName', sortString: 'PLAYER' },\r\n  { headerText: 'Team', id: 'team', sortString: 'TEAM' },\r\n  { headerText: 'POS', id: 'position', sortString: 'POSITION' },\r\n  { headerText: 'GP', id: 'gamesPlayed', sortString: 'GP' },\r\n  { headerText: 'G', id: 'goals', sortString: 'GOALS' },\r\n  { headerText: 'A', id: 'assists', sortString: 'ASSISTS' },\r\n  { headerText: 'P', id: 'points', sortString: 'POINTS' },\r\n  { headerText: '+/-', id: 'plusMinus', sortString: 'PLUSMINUS' },\r\n  { headerText: 'PM', id: 'penaltyMinutes', sortString: 'PM' },\r\n  { headerText: 'P/G', id: 'pointsPerGame', sortString: 'POINTS_PER_GAME' },\r\n  { headerText: 'GWG', id: 'gameWinningGoals', sortString: 'GWG' },\r\n  { headerText: 'OTG', id: 'overTimeGoals', sortString: 'OTG' },\r\n  { headerText: 'PPG', id: 'powerPlayGoals', sortString: 'PPG' },\r\n  { headerText: 'PPP', id: 'powerPlayPoints', sortString: 'PPP' },\r\n  { headerText: 'SHG', id: 'shortHandedGoals', sortString: 'SHG' },\r\n  { headerText: 'SHP', id: 'shortHandedPoints', sortString: 'SHP' },\r\n  { headerText: 'Shots', id: 'shots', sortString: 'SHOTS' },\r\n]\r\n\r\nconst PlayerStats = () => {\r\n  const [variables, setVariables] = useState({\r\n    offset: 0,\r\n    sortBy: 'POINTS',\r\n    sortDir: 'DESC',\r\n  })\r\n  const { data, loading, fetchMore } = useQuery(CUMULATIVE_STATS, {\r\n    variables,\r\n  })\r\n\r\n  if (loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const players = data.GetCumulativeStats\r\n\r\n  const loadMore = () => {\r\n    fetchMore({\r\n      variables: { offset: players.length },\r\n      updateQuery: (prevResult, { fetchMoreResult }) => {\r\n        if (!fetchMoreResult) return prevResult\r\n        return {\r\n          ...prevResult,\r\n          GetCumulativeStats: [\r\n            ...prevResult.GetCumulativeStats,\r\n            ...fetchMoreResult.GetCumulativeStats,\r\n          ],\r\n        }\r\n      },\r\n    })\r\n  }\r\n\r\n  const playersWithLink = players.map(player => ({\r\n    ...player,\r\n    fullName: <Link to={`players/${player.siteLink}`}>{player.fullName}</Link>,\r\n  }))\r\n\r\n  return (\r\n    <div>\r\n      <StatsTable\r\n        headers={headers}\r\n        stats={'Stats'}\r\n        data={playersWithLink}\r\n        sortVariables={variables}\r\n        setSortVariables={setVariables}\r\n      />\r\n      <Button onClick={loadMore}>Load more</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PlayerStats\r\n","import React from 'react'\r\nimport { Dropdown } from 'semantic-ui-react'\r\n\r\nconst standingsTypes = [\r\n  {\r\n    key: 'LEAGUE',\r\n    text: 'League',\r\n    value: 'LEAGUE',\r\n  },\r\n  {\r\n    key: 'CONFERENCE',\r\n    text: 'Conference',\r\n    value: 'CONFERENCE',\r\n  },\r\n  {\r\n    key: 'DIVISION',\r\n    text: 'Division',\r\n    value: 'DIVISION',\r\n  },\r\n]\r\n\r\nconst StandingsTypeDropdown = ({ setStandingsType }) => {\r\n  const handleStandingsType = e => {\r\n    const type = standingsTypes.find(\r\n      standingsType => standingsType.text === e.target.textContent\r\n    )\r\n    setStandingsType(type.value)\r\n  }\r\n\r\n  return (\r\n    <Dropdown\r\n      placeholder=\"Select standings\"\r\n      fluid\r\n      selection\r\n      options={standingsTypes}\r\n      onChange={handleStandingsType}\r\n    />\r\n  )\r\n}\r\n\r\nexport default StandingsTypeDropdown\r\n","import React, { useState } from 'react'\r\nimport { useQuery } from 'react-apollo-hooks'\r\nimport { Loader, Header } from 'semantic-ui-react'\r\nimport { STANDINGS } from '../../graphql/queries'\r\nimport StandingsTypeDropdown from './StandingsTypeDropdown'\r\nimport _ from 'lodash'\r\nimport StatsTable from '../StatsTable'\r\n\r\nconst headers = [\r\n  { headerText: 'Team', id: 'teamName' },\r\n  { headerText: 'GP', id: 'gamesPlayed' },\r\n  { headerText: 'W', id: 'wins' },\r\n  { headerText: 'L', id: 'losses' },\r\n  { headerText: 'T', id: 'ties' },\r\n  { headerText: 'OT', id: 'otLosses' },\r\n  { headerText: 'P', id: 'points' },\r\n  { headerText: 'ROW', id: 'regPlusOtWins' },\r\n  { headerText: 'P%', id: 'pointPct' },\r\n  { headerText: 'GF', id: 'goalsFor' },\r\n  { headerText: 'GA', id: 'goalsAgainst' },\r\n  { headerText: 'S/O Wins', id: 'shootoutGamesWon' },\r\n  { headerText: 'GF/GP', id: 'goalsForPerGame' },\r\n  { headerText: 'GA/GP', id: 'goalsAgainstPerGame' },\r\n  { headerText: 'PP%', id: 'ppPct' },\r\n  { headerText: 'PK%', id: 'pkPct' },\r\n  { headerText: 'Shots/GP', id: 'shotsForPerGame' },\r\n  { headerText: 'SA/GP', id: 'shotsAgainstPerGame' },\r\n  { headerText: 'FOW%', id: 'faceOffWinPct' },\r\n]\r\n\r\n// group standings by conference or division\r\nconst groupBy = (array, property) => {\r\n  if (property === 'league') return { League: array }\r\n  return _.groupBy(array, team => team[property].name)\r\n}\r\n\r\n// used to clean up league, conference and division objects from the\r\n// standing arrays so that they can be used as react children.\r\nconst cleanUpStandings = standings => {\r\n  Object.keys(standings).forEach(conference => {\r\n    standings[conference] = [\r\n      ...standings[conference].map(team => {\r\n        const { __typename, division, conference, ...teamData } = team\r\n        return teamData\r\n      }),\r\n    ]\r\n  })\r\n\r\n  return standings\r\n}\r\n\r\nconst Standings = () => {\r\n  const [standingsType, setStandingsType] = useState('LEAGUE')\r\n  const { loading, data } = useQuery(STANDINGS)\r\n\r\n  if (loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const standings =\r\n    standingsType === 'CONFERENCE'\r\n      ? groupBy(data.Standings, 'conference')\r\n      : standingsType === 'DIVISION'\r\n      ? groupBy(data.Standings, 'division')\r\n      : groupBy(data.Standings, 'league')\r\n\r\n  const cleanStandings = cleanUpStandings(standings)\r\n\r\n  return (\r\n    <div>\r\n      <Header>Standings</Header>\r\n      <StandingsTypeDropdown setStandingsType={setStandingsType} />\r\n      {Object.keys(standings).map(conference => (\r\n        <StatsTable\r\n          key={conference}\r\n          headers={headers}\r\n          data={cleanStandings[conference]}\r\n          title={conference}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Standings\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Media from 'react-media'\r\nimport _ from 'lodash'\r\nimport { playerBioData } from '../../utils'\r\nimport colors from '../../styles/colors'\r\nimport breakpoints from '../../styles/breakpoints'\r\n\r\nconst BioTable = styled.table`\r\n  border-collapse: collapse;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst TableBody = styled.tbody``\r\n\r\nconst TableRow = styled.tr``\r\n\r\nconst TableCell = styled.td`\r\n  border: 2px solid ${colors.grey3};\r\n  padding: 5px;\r\n`\r\n\r\nconst TableCellHeading = styled(TableCell)`\r\n  background-color: ${colors.grey2};\r\n`\r\n\r\nconst TableCellTitle = styled(TableCell)`\r\n  text-align: center;\r\n  font-size: 1.5rem;\r\n  background-color: ${colors.blue1};\r\n  border-width: 0px;\r\n  border-radius: 10px 10px 0 0;\r\n`\r\n\r\nconst bioDataKeysMobile = [\r\n  'primaryPosition',\r\n  'team',\r\n  'nationality',\r\n  'birthDate',\r\n  'birthCity',\r\n  'birthState',\r\n]\r\n\r\nconst bioDataKeysDesktop = [\r\n  ['primaryPosition', 'team', 'nationality'],\r\n  ['birthDate', 'birthCity', 'birthState'],\r\n]\r\n\r\nconst PlayerBioTable = ({ player }) => {\r\n  const hasProperty = item => player[item.id] !== null\r\n\r\n  const createBioTableMobile = () => (\r\n    <BioTable>\r\n      <TableBody>\r\n        <TableRow>\r\n          <TableCellTitle colSpan={2}>{player.fullName}</TableCellTitle>\r\n        </TableRow>\r\n        {bioDataKeysMobile.map(\r\n          key =>\r\n            hasProperty(playerBioData[key]) && (\r\n              <TableRow key={key}>\r\n                <TableCellHeading>{playerBioData[key].title}</TableCellHeading>\r\n                <TableCell>{_.get(player, playerBioData[key].id)}</TableCell>\r\n              </TableRow>\r\n            )\r\n        )}\r\n      </TableBody>\r\n    </BioTable>\r\n  )\r\n\r\n  const createBioTableDesktop = () => (\r\n    <BioTable>\r\n      <TableBody>\r\n        <TableRow>\r\n          <TableCellTitle colSpan={6}>{player.fullName}</TableCellTitle>\r\n        </TableRow>\r\n        {bioDataKeysDesktop.map(row => (\r\n          <TableRow>\r\n            {row.map(\r\n              key =>\r\n                hasProperty(playerBioData[key]) && (\r\n                  <>\r\n                    <TableCellHeading>\r\n                      {playerBioData[key].title}\r\n                    </TableCellHeading>\r\n                    <TableCell>\r\n                      {_.get(player, playerBioData[key].id)}\r\n                    </TableCell>\r\n                  </>\r\n                )\r\n            )}\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </BioTable>\r\n  )\r\n\r\n  return (\r\n    <Media query={breakpoints.showDesktopNavi}>\r\n      {matches => (matches ? createBioTableDesktop() : createBioTableMobile())}\r\n    </Media>\r\n  )\r\n}\r\n\r\nexport default PlayerBioTable\r\n","import React from 'react'\r\nimport { useQuery } from 'react-apollo-hooks'\r\nimport styled, { css } from 'styled-components'\r\nimport { PLAYER_MILESTONES } from '../../graphql/queries'\r\nimport colors from '../../styles/colors'\r\nimport breakpoints from '../../styles/breakpoints'\r\n\r\nconst textPropOnDesktop = css`\r\n  @media ${breakpoints.showDesktopNavi} {\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`\r\n\r\nconst HighlightsHeader = styled.div`\r\n  font-size: 1.25rem;\r\n  font-weight: bolder;\r\n  margin-bottom: 10px;\r\n\r\n  ${textPropOnDesktop}\r\n`\r\n\r\nconst MilestoneContainer = styled.div`\r\n  &::after {\r\n    content: '';\r\n    height: 3px;\r\n    background-color: ${colors.grey3};\r\n    width: 100%;\r\n    display: block;\r\n    margin: 10px 0;\r\n  }\r\n`\r\n\r\nconst MilestoneHeader = styled.div`\r\n  margin: 0;\r\n  font-weight: bolder;\r\n\r\n  ${textPropOnDesktop}\r\n`\r\n\r\nconst MilestoneDate = styled.div`\r\n  margin: 0;\r\n\r\n  ${textPropOnDesktop}\r\n`\r\n\r\nconst VideoContainer = styled.div``\r\n\r\nconst Video = styled.video`\r\n  height: 100%;\r\n  max-width: 100%;\r\n  display: block;\r\n  margin: 5px auto;\r\n`\r\n\r\nconst MilestoneDescription = styled.div`\r\n  font-size: 0.875rem;\r\n  max-width: 640px;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst Button = styled.button`\r\n  background-color: ${colors.blue1};\r\n  border: 0;\r\n  border-radius: 10px;\r\n  padding: 5px;\r\n  text-shadow: 1px 1px ${colors.grey3};\r\n\r\n  &:hover {\r\n    font-weight: bolder;\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nconst getDate = (gamePk, boxscores) => {\r\n  const score = boxscores.find(boxscore => boxscore.gamePk === gamePk)\r\n  return score.gameDate\r\n}\r\n\r\nconst PlayerMilestones = ({\r\n  playerId,\r\n  gamePks,\r\n  selectedGamePk,\r\n  setSelectedGamePk,\r\n  boxscores,\r\n}) => {\r\n  const { data, loading } = useQuery(PLAYER_MILESTONES, {\r\n    variables: { playerId, gamePks: selectedGamePk || gamePks },\r\n  })\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  const milestones = data.GetMilestones.filter(milestone => milestone.length)\r\n\r\n  const createMilestones = () =>\r\n    milestones.map(game =>\r\n      game.map(milestone => (\r\n        <MilestoneContainer key={milestone.title}>\r\n          <MilestoneHeader>{milestone.title}</MilestoneHeader>\r\n          <MilestoneDate>\r\n            {getDate(milestone.gamePk, boxscores)}{' '}\r\n            {milestone.blurb.split(':')[0]}\r\n          </MilestoneDate>\r\n          <VideoContainer>\r\n            <Video\r\n              width={milestone.playback.width}\r\n              height={milestone.playback.height}\r\n              controls\r\n            >\r\n              <source src={milestone.playback.url} />\r\n            </Video>\r\n          </VideoContainer>\r\n          <MilestoneDescription>{milestone.description}</MilestoneDescription>\r\n        </MilestoneContainer>\r\n      ))\r\n    )\r\n\r\n  return (\r\n    <Container>\r\n      <HighlightsHeader>\r\n        Highlights{' '}\r\n        {selectedGamePk ? (\r\n          <Button onClick={() => setSelectedGamePk(null)}>Last 5 games</Button>\r\n        ) : (\r\n          '| Last 5 games'\r\n        )}{' '}\r\n      </HighlightsHeader>\r\n      {createMilestones()}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PlayerMilestones\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Media from 'react-media'\r\nimport { useQuery } from 'react-apollo-hooks'\r\nimport { Loader } from 'semantic-ui-react'\r\nimport { profileImgUrl } from '../../utils'\r\nimport { PLAYER_PROFILE } from '../../graphql/queries'\r\nimport PlayerBioTable from './PlayerBioTable'\r\nimport StatsTable from '../StatsTable'\r\nimport PlayerMilestones from './PlayerMilestones'\r\nimport colors from '../../styles/colors'\r\nimport breakpoints from '../../styles/breakpoints'\r\n\r\nconst Container = styled.div`\r\n  padding: 0 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @media ${breakpoints.showDesktopNavi} {\r\n    width: 1000px;\r\n    margin: 0 auto;\r\n  }\r\n`\r\n\r\nconst ActionImg = styled.img`\r\n  width: 100%;\r\n  max-width: 1000px;\r\n  border: 3px solid ${colors.grey3};\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n`\r\n\r\nconst headers = [\r\n  { headerText: 'Date', id: 'gameDate' },\r\n  { headerText: 'Teams', id: 'teams' },\r\n  { headerText: 'G', id: 'goals' },\r\n  { headerText: 'A', id: 'assists' },\r\n  { headerText: 'P', id: 'points' },\r\n  { headerText: '+/-', id: 'plusMinus' },\r\n  { headerText: 'PM', id: 'penaltyMinutes' },\r\n  { headerText: 'PPG', id: 'powerPlayGoals' },\r\n  { headerText: 'PPA', id: 'powerPlayAssists' },\r\n  { headerText: 'SHG', id: 'shortHandedGoals' },\r\n  { headerText: 'SHA', id: 'shortHandedAssists' },\r\n  { headerText: 'TON', id: 'timeOnIce' },\r\n  { headerText: 'PPTON', id: 'powerPlayTimeOnIce' },\r\n  { headerText: 'SHTON', id: 'shortHandedTimeOnIce' },\r\n  { headerText: 'Shots', id: 'shots' },\r\n  { headerText: 'Shot%', id: 'shotPct' },\r\n  { headerText: 'Blocked', id: 'blocked' },\r\n  { headerText: 'Hits', id: 'hits' },\r\n  { headerText: 'Giveaways', id: 'giveaways' },\r\n  { headerText: 'Takeaways', id: 'takeaways' },\r\n]\r\n\r\nconst sortBoxscoresByDate = boxscores => {\r\n  return boxscores.sort((a, b) => {\r\n    a = a.gameDate.split('/').join('')\r\n    b = b.gameDate.split('/').join('')\r\n    return a < b ? 1 : a > b ? -1 : 0\r\n  })\r\n}\r\n\r\nconst PlayerProfile = ({ siteLink }) => {\r\n  const [selectedGamePk, setSelectedGamePk] = useState(null)\r\n  const { data, loading } = useQuery(PLAYER_PROFILE, {\r\n    variables: { siteLink },\r\n  })\r\n\r\n  if (loading) {\r\n    return <Loader active inline=\"centered\" />\r\n  }\r\n\r\n  const player = data.findPlayer\r\n  player.boxscores = sortBoxscoresByDate(player.boxscores)\r\n  player.boxscores = player.boxscores.map(boxscore => ({\r\n    ...boxscore,\r\n    teams:\r\n      boxscore.awayTeam.abbreviation + '@' + boxscore.homeTeam.abbreviation,\r\n  }))\r\n  const gamePks = player.boxscores.map(boxscore => boxscore.gamePk)\r\n\r\n  const handleRowClick = rowData => {\r\n    setSelectedGamePk([rowData.gamePk])\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <ActionImg src={profileImgUrl(data.findPlayer.playerId)} />\r\n      <PlayerBioTable player={player} />\r\n      <Media query={breakpoints.showDesktopNavi}>\r\n        {matches =>\r\n          matches ? (\r\n            <StatsTable\r\n              title=\"Performance Game-by-Game\"\r\n              headers={headers}\r\n              data={player.boxscores}\r\n              handleRowClick={handleRowClick}\r\n            />\r\n          ) : (\r\n            <StatsTable\r\n              title=\"Performance Game-by-Game\"\r\n              headers={headers.slice(0, 6)}\r\n              data={player.boxscores}\r\n              handleRowClick={handleRowClick}\r\n            />\r\n          )\r\n        }\r\n      </Media>\r\n      <PlayerMilestones\r\n        playerId={player.playerId}\r\n        gamePks={gamePks.slice(0, 5)}\r\n        selectedGamePk={selectedGamePk}\r\n        setSelectedGamePk={setSelectedGamePk}\r\n        boxscores={player.boxscores}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default PlayerProfile\r\n","import React, { useContext } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { NotificationContext } from './contexts/NotificationContext'\r\nimport { AuthContext } from './contexts/AuthContext'\r\nimport { PlayerContext } from './contexts/PlayerContext'\r\nimport Navigation from './components/navigation/Navigation'\r\nimport PlayerCardContainer from './components/player/PlayerCardContainer'\r\nimport Notification from './components/Notification'\r\nimport LoginForm from './components/user/LoginForm'\r\nimport SignupForm from './components/user/SignupForm'\r\nimport Confirmation from './components/user/Confirmation'\r\nimport Footer from './components/Footer'\r\nimport ForgotPassword from './components/user/ForgotPassword'\r\nimport SetNewPassword from './components/user/SetNewPassword'\r\nimport UserProfile from './components/user/UserProfile'\r\nimport FindPlayers from './components/player/FindPlayers'\r\nimport PlayerStats from './components/player/PlayerStats'\r\nimport Standings from './components/team/Standings'\r\nimport PlayerProfile from './components/player/PlayerProfile'\r\nimport styled from 'styled-components'\r\nimport colors from './styles/colors'\r\nimport variables from './styles/variables'\r\n\r\nconst Container = styled.div`\r\n  margin: 0;\r\n  background-color: ${colors.grey1};\r\n`\r\n\r\nconst ContentWrapper = styled.div`\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n  padding-top: ${variables.topMarginWithNav}px;\r\n`\r\n\r\nconst App = () => {\r\n  const { notification } = useContext(NotificationContext)\r\n  const { token } = useContext(AuthContext)\r\n  const { bestPlayers, favoritePlayers } = useContext(PlayerContext)\r\n\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <Navigation />\r\n        <ContentWrapper>\r\n          <Notification notification={notification} />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => (\r\n              <PlayerCardContainer query={bestPlayers} header=\"Top players\" />\r\n            )}\r\n          />\r\n          <Route path=\"/stats\" render={() => <PlayerStats />} />\r\n          <Route path=\"/standings\" render={() => <Standings />} />\r\n          <Route path=\"/about\" render={() => <div>About</div>} />\r\n          <Route\r\n            path=\"/players/:siteLink\"\r\n            render={({ match }) => (\r\n              <PlayerProfile siteLink={match.params.siteLink} />\r\n            )}\r\n          />\r\n          {token && (\r\n            <>\r\n              <Route\r\n                path=\"/favorites\"\r\n                render={() => (\r\n                  <PlayerCardContainer\r\n                    query={favoritePlayers}\r\n                    header=\"Favorite players\"\r\n                  />\r\n                )}\r\n              />\r\n              <Route path=\"/profile\" render={() => <UserProfile />} />\r\n              <Route path=\"/find-players\" render={() => <FindPlayers />} />\r\n            </>\r\n          )}\r\n          {!token && (\r\n            <>\r\n              <Route\r\n                path=\"/signup\"\r\n                render={({ history }) => <SignupForm history={history} />}\r\n              />\r\n              <Route\r\n                path=\"/login\"\r\n                render={({ history }) => <LoginForm history={history} />}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/forgot-password\"\r\n                render={({ history }) => <ForgotPassword history={history} />}\r\n              />\r\n              <Route\r\n                path=\"/forgot-password/:token\"\r\n                render={({ history, match }) => (\r\n                  <SetNewPassword\r\n                    history={history}\r\n                    token={match.params.token}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                path=\"/confirmation/:token\"\r\n                render={({ history, match }) => (\r\n                  <Confirmation history={history} token={match.params.token} />\r\n                )}\r\n              />\r\n            </>\r\n          )}\r\n          <Footer />\r\n        </ContentWrapper>\r\n      </Router>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { ApolloProvider } from 'react-apollo-hooks'\r\nimport ApolloClient from 'apollo-client'\r\nimport { createHttpLink } from 'apollo-link-http'\r\nimport { InMemoryCache, defaultDataIdFromObject } from 'apollo-cache-inmemory'\r\nimport { setContext } from 'apollo-link-context'\r\nimport GlobalStyle from './styles/GlobalStyle'\r\nimport App from './App'\r\nimport { getCookie } from './utils'\r\nimport NotificationContextProvider from './contexts/NotificationContext'\r\nimport AuthContextProvider from './contexts/AuthContext'\r\nimport PlayerContextProvider from './contexts/PlayerContext'\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: '/graphql',\r\n})\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  const token = getCookie('user')\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `bearer ${token}` : null,\r\n    },\r\n  }\r\n})\r\n\r\nconst cache = new InMemoryCache({\r\n  dataIdFromObject: object => {\r\n    switch (object.__typename) {\r\n      case 'PlayerCard':\r\n        if (object.numOfGamesId) {\r\n          return object.numOfGamesId + object.id\r\n        }\r\n        return object.id\r\n      default:\r\n        return defaultDataIdFromObject(object)\r\n    }\r\n  },\r\n})\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache,\r\n})\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <NotificationContextProvider>\r\n      <PlayerContextProvider>\r\n        <AuthContextProvider>\r\n          <GlobalStyle />\r\n          <App />\r\n        </AuthContextProvider>\r\n      </PlayerContextProvider>\r\n    </NotificationContextProvider>\r\n  </ApolloProvider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}